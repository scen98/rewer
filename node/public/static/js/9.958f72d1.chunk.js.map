{"version":3,"sources":["components/review/AddedReview.tsx","components/movie/ScoreAdder.tsx","components/review/PostReview.tsx","components/review/MyReview.tsx","components/article/SideArticleRow.tsx","components/article/SideArticleRowList.tsx","components/cast/CastRow.tsx","components/cast/CastList.tsx","components/review/ReviewList.tsx","components/review/MovieReviewFeed.tsx","components/article/ArticleSides.tsx","pages/Movie.tsx","callers/castCaller.ts","components/movie/MovieRow.tsx","components/movie/MovieDiv.tsx","components/movie/FeaturedSides.tsx","components/movie/MovieRowList.tsx","components/profile/LoginMsg.tsx","callers/articleCaller.ts","components/movie/GenreSelect.tsx","components/movie/GenreSide.tsx","components/review/ReviewOrderBySelect.tsx","components/movie/MainScore.tsx","components/movie/MovieInfo.tsx"],"names":["AddedReview","review","onEdit","onDelete","className","onClick","Score","value","score","text","popIndex","normalFormat","date","ScoreAdder","startValue","setScore","useState","setValue","useEffect","oldValue","icon","faMinus","faPlus","PostReview","onPost","useBinder","myReview","setMyReview","bindMyReview","newValue","name","rows","onChange","MyReview","movie","id","movieId","userName","localStorage","getItem","postReview","reviewContent","setReviewContent","mainMsg","setMainMsg","postCaller","reviewCaller","reviewSignal","startEditing","saveReview","a","reviewPath","updateReview","ECallType","ISOK","removeReview","insertReview","INSERT","newId","Date","toLocaleDateString","alert","deleteReview","limit","offset","selectReviewByUserAndMovie","SELECT","LoginMsg","message","getMyReview","abort","getTime","releaseDate","SideArticleRow","article","cutPos","useImage","ESize","Normal","imgsrc","imgError","useCutter","isTextCut","cutText","src","onError","alt","title","length","readMore","href","target","SideArticleRowList","articles","map","key","CastRow","cast","artistId","Small","onImgError","artistName","to","CastList","casts","sort","compareCastType","c","ReviewList","reviews","r","ReviewRow","MovieReviewFeed","useAsyncReference","setReviews","undefined","orderBy","setOrderBy","reviewHeader","setReviewHeader","useScroll","addScroll","removeScroll","getReviews","orderby","selectReviewsByMovie","requestedReviews","current","reviewId","filter","EReviewOrderBy","toString","ReviewOrderBySelect","defaultValue","onUpdate","ArticleSides","setArticles","articleCaller","signal","Math","floor","random","articlePath","selectLatestArticles","requestArticles","Movie","parseInt","getParameter","summary","genres","avgScore","setMovie","actors","setActors","moviePath","selectDetailedMovie","movieCaller","movieSignal","selectedMovie","castTypeId","document","body","scrollTop","documentElement","requestMovie","window","screen","width","FeaturedSides","MovieInfo","GenreSide","castPath","getCastTypes","insertCast","insertCasts","updateCast","deleteCast","cast1","cast2","MovieRow","imgClass","setImgClass","MovieDiv","Medium","scoreClass","setScoreClass","scoreLine","useRef","style","display","ref","round","featuredMovies","setFeaturedMovies","getCaller","selectLatestMoviesJson","caller","movies","rnd","slice","getLatestFeatures","f","MovieRowList","m","insertArticle","updateArticle","deleteArticle","selectArticlesByUser","uploadImage","uploadArticleImage","file","UploadFile","ok","GenreSelect","setSelectedGenre","selectedGenre","any","getGenres","setGenres","e","find","g","setMovies","genreCaller","genreSignal","genreId","selectLatestMoviesByGenre","allGenres","requestGenres","requestMovies","select","MainScore","genreName","getDay","getMonth","getYear","runtime"],"mappings":"6NAaaA,G,MAAyC,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,SASpE,OACI,kBAAC,WAAD,KACI,yBAAKC,UAAU,eACX,4BAAQC,QAXpB,WACIH,EAAOD,KAUC,QACA,4BAAQI,QARpB,WACIF,EAASF,KAOD,UACA,kBAACK,EAAA,EAAD,CAAOC,MAAON,EAAOO,SAEzB,2BAAIP,EAAOQ,MACX,yBAAKL,UAAU,cACX,6BACA,8BAAOH,EAAOS,SAAd,IAAwB,sCAExB,0BAAMN,UAAU,eAAeO,YAAaV,EAAOW,W,8BCvBtDC,EAAoC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,SAA0B,EAC3DC,mBAASF,GADkD,mBAC9EP,EAD8E,KACvEU,EADuE,KAkBrF,OAJAC,qBAAU,WACNH,EAASR,KACV,CAACA,IAGA,yBAAKH,UAAU,oBACX,4BAAQC,QAZhB,WACOE,EAAQ,GACPU,GAAS,SAAAE,GAAc,OAAOA,EAAW,MAUbf,UAAU,mBAClC,kBAAC,IAAD,CAAiBgB,KAAMC,OAE3B,kBAACf,EAAA,EAAD,CAAOC,MAAOA,IACd,4BAAQF,QAtBhB,WACOE,EAAQ,IACPU,GAAS,SAAAE,GAAc,OAAOA,EAAW,MAoBbf,UAAU,kBAClC,kBAAC,IAAD,CAAiBgB,KAAME,SC1B1BC,EAAoC,SAAC,GAAmC,IAAlCtB,EAAiC,EAAjCA,OAAQuB,EAAyB,EAAzBA,OAAyB,EAClCC,YAAUxB,GADwB,mBACzEyB,EADyE,KAC/DC,EAD+D,KAClDC,EADkD,KAKhF,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAYd,WAAYb,EAAOO,MAAOO,SAL9C,SAAqBc,GACjBF,EAAY,2BAAID,GAAL,IAAelB,MAAOqB,QAK7B,8BAAUzB,UAAU,kBAAkB0B,KAAK,OAAOC,KAAM,GAAIxB,MAAOmB,EAASjB,KAAMuB,SAAUJ,IAC5F,4BAAQvB,QAAS,WAAMmB,EAAOE,KAA9B,U,QCLCO,EAAgC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAsB,EACvBlB,mBAAS,kBAAC,EAAD,CAAYf,OAAQ,CAACkC,GAAI,EAAG1B,KAAM,GAAI2B,QAASF,EAAMC,GAAIvB,KAAM,GAAIF,SAAU,EAAGF,MAAO,EAAG6B,SAAUC,aAAaC,QAAQ,aAAcf,OAAQgB,KADjI,mBAC1DC,EAD0D,KAC3CC,EAD2C,OAEnC1B,mBAAS,IAF0B,mBAE1D2B,EAF0D,KAEjDC,EAFiD,OAG5BC,uBAH4B,mBAG1DC,EAH0D,KAG5CC,EAH4C,KAiCjE,SAASC,EAAa/C,GAClByC,EAAiB,kBAAC,EAAD,CAAYzC,OAAQA,EAAQuB,OAAQyB,KACrDL,EAAW,wBAnCkD,SAsClDK,EAtCkD,8EAsCjE,WAA0BhD,GAA1B,SAAAiD,EAAA,sEAC8BJ,EAAa7C,EAAQkD,IAAWC,aAAcC,YAAUC,MADtF,gBAGQZ,EAAiB,kBAAC,EAAD,CAAazC,OAAQA,EAAQC,OAAQ8C,EAAc7C,SAAUoD,KAC9EX,EAAW,6BAJnB,4CAtCiE,+BA8ClDJ,EA9CkD,8EA8CjE,WAA0BvC,GAA1B,eAAAiD,EAAA,sEACwBJ,EAAa7C,EAAQkD,IAAWK,aAAcH,YAAUI,QADhF,QACUC,EADV,SAGQzD,EAAM,2BAAOA,GAAP,IAAekC,GAAIuB,EAAO9C,MAAM,IAAI+C,MAAOC,mBAAmB,SAAUlD,SAAU,IACxFgC,EAAiB,kBAAC,EAAD,CAAazC,OAAQA,EAAQC,OAAQ8C,EAAc7C,SAAUoD,KAC9EX,EAAW,iCAEXiB,MAAM,6CAPd,4CA9CiE,+BAyDlDN,EAzDkD,8EAyDjE,WAA4BtD,GAA5B,SAAAiD,EAAA,sEAC8BJ,EAAa,CAAEX,GAAIlC,EAAOkC,IAAMgB,IAAWW,aAAcT,YAAUC,MADjG,eAGQV,EAAW,iCACXF,EAAiB,kBAAC,EAAD,CAAYzC,OAAQ,CAACkC,GAAI,EAAG1B,KAAM,GAAI2B,QAASF,EAAMC,GAAIvB,KAAM,GAAIF,SAAU,EAAGF,MAAO,EAAG6B,SAAUC,aAAaC,QAAQ,aAAcf,OAAQgB,MAEhKqB,MAAM,+CANd,4CAzDiE,sBAmEjE,OA/DA3C,qBAAU,WAAI,4CAQV,4BAAAgC,EAAA,sEACmCJ,EAAa,CAAET,SAAUC,aAAaC,QAAQ,YAAaH,QAASF,EAAMC,GAAI4B,MAAO,EAAGC,OAAQ,GAAIb,IAAWc,2BAA4BZ,YAAUa,QADxL,QACSxC,EADT,QAGQgB,EAAiB,kBAAC,EAAD,CAAazC,OAAQyB,EAAUxB,OAAQ8C,EAAc7C,SAAUoD,MAEhFX,EAAW,mDACXF,EAAiB,kBAAC,EAAD,CAAYzC,OAAQ,CAACkC,GAAI,EAAG1B,KAAM,GAAI2B,QAASF,EAAMC,GAAIvB,KAAM,GAAIF,SAAU,EAAGF,MAAO,EAAG6B,SAAU,IAAKb,OAAQgB,MAN1I,4CARU,sBAiBV,OAhBuC,MAApCF,aAAaC,QAAQ,YACpBG,EAAiB,kBAACyB,EAAA,EAAD,CAAUC,QAAS,mBAEjClC,EAAMC,GAAK,GAJR,mCAKFkC,GAYD,WACHtB,EAAauB,WAElB,CAACpC,EAAMC,KAEVjB,qBAAU,YACH,IAAIyC,MAAOY,UAAY,IAAIZ,KAAKzB,EAAMsC,aAAaD,YAClD7B,EAAiB,qEACjBE,EAAW,OAEhB,CAACV,IAqCA,kBAAC,WAAD,KACI,wBAAI9B,UAAU,eAAd,aACA,2BAAIuC,GACJ,yBAAKvC,UAAU,oBACVqC,M,uGCrDFgC,G,MAvB0C,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,OAA4B,EACjEC,YAAS,0BAAD,UAA+BF,EAAQvC,GAAvC,QAAiD0C,IAAMC,QADE,mBACrFC,EADqF,KAC7EC,EAD6E,OAEzDC,YAAUP,EAAQjE,KAAMkE,GAFiC,mBAErFlE,EAFqF,KAE/EyE,EAF+E,KAEpEC,EAFoE,KAG5F,OACI,yBAAK/E,UAAU,oBACX,yBAAKgF,IAAKL,EAAQM,QAASL,EAAUM,IAAG,UAAKZ,EAAQa,SACrD,4BAAKb,EAAQa,OACb,2BAAI9E,GACFyE,EACG,kBAAC,WAAD,KAAU,uBAAG7E,QAAS,WAAO8E,EAAQT,EAAQjE,OAASL,UAAU,aAAtD,cACV,kBAAC,WAAD,KACKsE,EAAQjE,KAAK+E,OAASb,EACvB,kBAAC,WAAD,KAAU,uBAAGvE,UAAU,YAAYC,QAAS,WAAM8E,EAAQT,EAAQjE,KAAMkE,KAA9D,cACV,kBAAC,WAAD,OAGa,MAApBD,EAAQe,UAAoBf,EAAQe,SAASD,OAAS,GACvD,uBAAGE,KAAMhB,EAAQe,SAAUE,OAAO,SAAlC,gBACA,kBAAC,WAAD,SCnBAC,EAAoD,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,SAAUlB,EAAgC,EAAhCA,OACzE,OACI,kBAAC,WAAD,KACKkB,EAASC,KAAI,SAAA5C,GACV,OAAO,kBAAC,EAAD,CAAgB6C,IAAG,uBAAkB7C,EAAEf,IAAMuC,QAASxB,EAAGyB,OAAQA,SAMzEiB,O,qFCEAI,G,MAX4B,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAoB,EAChCrB,YAAS,2BAAD,UAAgCqB,EAAKC,SAArC,QAAqDrB,IAAMsB,OADnC,mBACtDpB,EADsD,KAC9CqB,EAD8C,KAE7D,OACI,yBAAKhG,UAAU,YACX,yBAAKgF,IAAKL,EAAQM,QAASe,EAAYd,IAAKW,EAAKI,aACjD,8BAAM,kBAAC,IAAD,CAAMC,GAAE,+BAA0BL,EAAKC,WAAcD,EAAKI,aAChE,uBAAGjG,UAAU,iBAAiB6F,EAAKnE,SCGhCyE,IAV8B,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAC3C,OACI,6BACKA,EAAMC,KAAKC,KAAiBZ,KAAI,SAAAa,GAC7B,OAAO,kBAAC,EAAD,CAASZ,IAAG,eAAUY,EAAExE,IAAM8D,KAAMU,U,4HCM5CC,EAVkC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,QAAS1G,EAA2B,EAA3BA,SACxD,OACI,6BACK0G,EAAQf,KAAI,SAAAgB,GACT,OAAO,kBAACC,EAAA,EAAD,CAAWhB,IAAG,iBAAYe,EAAE3E,IAAMhC,SAAUA,EAAUF,OAAQ6G,S,gBCgFtEE,IA/E4C,SAAC,GAA+B,IAA9B9E,EAA6B,EAA7BA,MAA6B,EACxD+E,YAAkB,IADsC,mBAC/EJ,EAD+E,KACtEK,EADsE,OAExDlG,wBAAyBmG,GAF+B,mBAE/EC,EAF+E,KAEtEC,EAFsE,OAG9CrG,mBAAiB,IAH6B,mBAG/EsG,EAH+E,KAGjEC,EAHiE,OAKjD1E,uBALiD,mBAK/EC,EAL+E,KAKjEC,EALiE,OAMpDyE,YAAU,IAN0C,gEAM/EC,EAN+E,KAMpEC,EANoE,cAuCvEC,IAvCuE,2EAuCtF,4BAAAzE,EAAA,sEACmCJ,EAAa,CAAEV,QAASF,EAAMC,GAAI4B,MApC/C,GAoCqEC,OAAQ,EAAG4D,QAASR,GAAUjE,IAAW0E,sBADpI,QACUC,EADV,SAGQZ,EAAWY,GACXP,EAAgB,WAvCF,KAwCXO,EAAiBtC,QAA0BiC,KAE9CF,EAAgB,iDAPxB,4CAvCsF,kEAkDtF,4BAAArE,EAAA,6DACIwE,IADJ,SAEmC5E,EAAa,CAAEV,QAASF,EAAMC,GAAI4B,MAhD/C,GAgDqEC,OAAQ6C,EAAQkB,QAAQvC,OAAQoC,QAASR,GAAUjE,IAAW0E,sBAFzJ,QAEUC,EAFV,SAIQZ,EAAW,GAAD,mBAAKL,EAAQkB,SAAb,YAAyBD,KAlDrB,KAmDXA,EAAiBtC,QAA0BiC,KAE9CF,EAAgB,iDAPxB,4CAlDsF,kEA6DtF,WAA4BS,GAA5B,SAAA9E,EAAA,sEACaJ,EAAa,CAAEX,GAAI6F,GAAY7E,IAAWW,aAAcT,YAAUC,MAD/E,kCAEQ4D,EAAWL,EAAQkB,QAAQE,QAAO,SAAAnB,GAAC,OAAGA,EAAE3E,KAAO6F,MAFvD,4CA7DsF,sBAmEtF,OA3DA9G,qBAAU,WACN,OAAO,WACHwG,IACA3E,EAAauB,WAElB,IAEHpD,qBAAU,WAUN,OATG,IAAIyC,MAAOY,WAAa,IAAIZ,KAAKzB,EAAMsC,aAAaD,UAChD6C,IAAYc,IAAexH,SACvBwB,EAAMC,GAAK,GAAGwF,IAEjBN,EAAWa,IAAexH,UAG9B6G,EAAgB,gCAAD,OAAiC5G,YAAauB,EAAMsC,YAAY2D,cAE5E,WACHT,OAEL,CAACxF,EAAMC,GAAID,EAAMsC,cAEpBtD,qBAAU,WAIN,OAHGgB,EAAMC,GAAK,GAAgB,MAAXiF,GACfO,IAEG,WACHD,OAEL,CAACN,IA+BA,6BACI,wBAAIhH,UAAU,eAAekH,IAC5B,IAAI3D,MAAOY,WAAa,IAAIZ,KAAKzB,EAAMsC,aAAaD,UACpD,kBAAC,WAAD,KACG,kBAAC6D,EAAA,EAAD,CAAqBC,aAAcjB,EAASkB,SAAU,SAACzG,GAA8BwF,EAAWxF,MAChG,kBAAC,EAAD,CAAY1B,SAzE8D,4CAyEtC0G,QAASA,EAAQkB,WAExD,kBAAC,WAAD,S,+NCzDEQ,EApBsC,SAAC,GAA0C,IAAD,IAAxC5D,cAAwC,MAA/B,IAA+B,EAA1Ba,EAA0B,EAA1BA,OAA0B,EAC3DxE,mBAAqB,IADsC,mBACpF6E,EADoF,KAC1E2C,EAD0E,OAE3D3F,uBAF2D,mBAEpF4F,EAFoF,KAErEC,EAFqE,iDAU3F,4BAAAxF,EAAA,sEAC2BuF,EAAc,CAAE1E,MAAOyB,EAAQxB,OAAQ2E,KAAKC,MAAsB,EAAhBD,KAAKE,WAAiBC,IAAYC,sBAD/G,QACUlD,EADV,SAEiB2C,EAAY3C,GAF7B,4CAV2F,sBAe3F,OAZA3E,qBAAU,WAEN,OALuF,mCAIvF8H,GACO,WACHN,EAAOpE,WAEZ,IAQC,kBAACsB,EAAA,EAAD,CAAoBC,SAAUA,EAAUlB,OAAQA,KCXzC,SAASsE,IAAS,IAAD,EACFjI,mBAAyB,CAAEmB,GAAI+G,SAASC,YAAa,YAAa5D,MAAO,UAAWf,YAAa,GAAI4E,QAAS,MAAOC,OAAQ,GAAI7C,MAAO,GAAI8C,SAAU,IADpJ,mBACrBpH,EADqB,KACdqH,EADc,OAEAvI,mBAAkB,IAFlB,mBAErBwI,EAFqB,KAEbC,EAFa,OAGO5G,qBAAW,CAAEV,GAAID,EAAMC,IAAMuH,IAAUC,qBAH9C,mBAGrBC,EAHqB,KAGRC,EAHQ,iDAkB5B,4BAAA3G,EAAA,sEACgC0G,IADhC,QACUE,EADV,UAGQP,EAASO,GACTL,EAAUK,EAActD,MAAMyB,QAAQ,SAAAtB,GAAC,OAAGA,EAAEoD,WAAa,OAJjE,4CAlB4B,sBA0B5B,OAtBA7I,qBAAU,WAKN,OAJA8I,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,EAClChI,EAAMC,GAAK,GAPU,mCAOPiI,GAEV,WACHP,EAAYvF,WAEjB,IAEHpD,qBAAU,WACM,MAATgB,IAAe8H,SAASzE,MAAT,UAAoBrD,EAAMqD,MAA1B,eACnB,CAACrD,IAWA,kBAAC,WAAD,KACKmI,OAAOC,OAAOC,MAAQ,IACtB,yBAAKnK,UAAU,aACZ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC6B,EAAA,EAAD,CAAUC,MAAOA,KAErB,yBAAK9B,UAAU,kBACX,kBAACoK,EAAA,EAAD,OAEJ,yBAAKpK,UAAU,kBACX,kBAAC,EAAD,CAAcuE,OAAQ,GAAIa,OAAQ,MAG1C,yBAAKpF,UAAU,aACX,kBAACqK,EAAA,EAAD,CAAWvI,MAAOA,IAClB,kBAAC8E,EAAA,EAAD,CAAiB9E,MAAOA,KAE5B,yBAAK9B,UAAU,cACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,eAAd,QACA,kBAACmG,EAAA,EAAD,CAAUC,MAAOgD,KAErB,yBAAKpJ,UAAU,kBACX,kBAACsK,EAAA,EAAD,CAAWlF,OAAQ,OAI9B,yBAAKpF,UAAU,kBAChB,kBAACqK,EAAA,EAAD,CAAWvI,MAAOA,IAClB,oCACA,kBAACqE,EAAA,EAAD,CAAUC,MAAOgD,IACjB,kBAACvH,EAAA,EAAD,CAAUC,MAAOA,IACjB,kBAAC8E,EAAA,EAAD,CAAiB9E,MAAOA,Q,gCC3EpC,oEAAO,IAAMyI,EAAW,CACpBC,aAAc,0BACdC,WAAY,oBACZC,YAAa,qBACbC,WAAY,oBACZC,WAAY,qBAGT,SAAStE,EAAgBuE,EAAcC,GAC1C,OAAGD,EAAMlB,WAAamB,EAAMnB,YAChB,EAETkB,EAAMlB,WAAamB,EAAMnB,WACjB,EAEJ,I,8HCJEoB,G,MAAgC,SAAC,GAAqC,IAApCjJ,EAAmC,EAAnCA,MAAmC,IAA5ByC,cAA4B,MAAnB,GAAmB,IACjDC,YAAS,yBAAD,UAA8B1C,EAAMC,GAApC,QAA8C0C,IAAMsB,OADX,mBACvEpB,EADuE,KAC/DqB,EAD+D,OAE9CpF,mBAAS,IAFqC,mBAEvEoK,EAFuE,KAE7DC,EAF6D,OAG5DpG,YAAU/C,EAAMkH,QAASzE,GAApCyE,EAHuE,oBAkB9E,OAdAlI,qBAAU,WACHgB,EAAMoH,SAAW,EAChB+B,EAAY,eACNnJ,EAAMoH,SAAW,EACvB+B,EAAY,iBACNnJ,EAAMoH,SAAW,EACvB+B,EAAY,cAEZA,EAAY,IAEbhB,OAAOC,OAAOC,QAGlB,CAACrI,IAEA,kBAAC,IAAD,CAAM9B,UAAU,iBAAiBkG,GAAE,+BAA0BpE,EAAMC,KAC/D,yBAAK/B,UAAWgL,EAAUhG,IAAKL,EAAQO,IAAG,iBAAYpD,EAAMC,IAAMoD,MAAOrD,EAAMqD,MAAOF,QAASe,IAC/F,6BACI,uBAAGhG,UAAU,aAAa8B,EAAMqD,OAChC,uBAAGnF,UAAU,WAAWgJ,IAE1B,IAAIzF,KAAKzB,EAAMsC,cAAgB,IAAIb,KACpC,kBAAC,IAAD,CAAOpD,MAAO2B,EAAMoH,WAAsC,MAArBpH,EAAMsC,YAC3C,4BACA,uBAAGpE,UAAU,kBAAkBO,YAAauB,EAAMsC,YAAY2D,iB,oECK5DmD,IAtC8B,SAAC,GAAwB,IAAvBpJ,EAAsB,EAAtBA,MAAsB,EACpC0C,YAAS,yBAAD,UAA8B1C,EAAMC,GAApC,QAA8C0C,IAAM0G,QAAQ,GADhC,mBAC1DxG,EAD0D,KAClDqB,EADkD,OAEjCpF,mBAAS,IAFwB,mBAE1DoK,EAF0D,KAEhDC,EAFgD,OAG7BrK,mBAAS,IAHoB,mBAG1DwK,EAH0D,KAG9CC,EAH8C,KAI3DC,EAAYC,mBAuBlB,OAtBAzK,qBAAU,WACHgB,EAAMoH,SAAW,GAChB+B,EAAY,eACZI,EAAc,QACdC,EAAU3D,QAAQ6D,MAAMC,QAAU,SAC5B3J,EAAMoH,SAAW,GACvB+B,EAAY,iBACZI,EAAc,UACdC,EAAU3D,QAAQ6D,MAAMC,QAAU,SAC5B3J,EAAMoH,SAAW,GACvB+B,EAAY,cACZI,EAAc,OACdC,EAAU3D,QAAQ6D,MAAMC,QAAU,SAElCH,EAAU3D,QAAQ6D,MAAMC,QAAU,SAEvC,CAAC3J,IAEJhB,qBAAU,cAEP,CAACgB,IAGA,yBAAK9B,UAAU,wBACX,yBAAKA,UAAWgL,EAAUhG,IAAKL,EAAQO,IAAG,UAAKpD,EAAMqD,MAAX,WAA2BF,QAASe,IAC9E,uBAAGhG,UAAU,eAAe8B,EAAMqD,OAClC,yBAAKuG,IAAKJ,EAAWtL,UAAWoL,GAC5B,uBAAGpL,UAAU,cAAeuI,KAAKoD,MAAuB,GAAjB7J,EAAMoH,UAAe,Q,0KCjC7D,SAASkB,IAAiB,IAAD,EACOxJ,mBAA2B,IADlC,mBAC9BgL,EAD8B,KACdC,EADc,OAEXC,oBAAUxC,IAAUyC,wBAFT,mBAE7BC,EAF6B,KAErB1D,EAFqB,iDAUpC,8BAAAxF,EAAA,sEAC2CkJ,IAD3C,OACUC,EADV,OAEUC,EAAM3D,KAAKC,MAAoB,EAAdD,KAAKE,UACzBwD,GAAQJ,EAAkBI,EAAOE,MAAMD,EAAKA,EAAI,IAHvD,4CAVoC,sBAgBpC,OAbApL,qBAAU,WAEN,OALgC,mCAIhCsL,GACO,WACH9D,EAAOpE,WAEZ,IASC,kBAAC,WAAD,KACI,wBAAIlE,UAAU,eAAd,kBACQ,yBAAKA,UAAU,eACV4L,EAAelG,KAAI,SAAA2G,GAChB,OAAQ,kBAAC,IAAD,CAAM1G,IAAG,mBAAc0G,EAAEtK,IAAMmE,GAAE,+BAA0BmG,EAAEtK,KACzD,kBAAC,IAAD,CAAUD,MAAOuK,Y,gCC7BzD,8DAQaC,EAAwC,SAAC,GAA6B,IAA5BL,EAA2B,EAA3BA,OACnD,OACI,6BACKA,EAAOvG,KAAI,SAAA6G,GACR,OAAO,kBAAC,IAAD,CAAU5G,IAAG,oBAAe4G,EAAExK,IAAMD,MAAOyK,U,qDCZlE,4BAaexI,IAN8B,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,QAC3C,OACA,0CAAe,kBAAC,IAAD,CAAMkC,GAAG,kBAAT,aAAf,IAA2DlC,K,uICPlD0E,EAAc,CACvB8D,cAAe,0BACfC,cAAe,0BACfC,cAAe,0BACf/D,qBAAsB,kCACtBgE,qBAAsB,mCACtBC,YAAa,iCAGV,SAAeC,EAAtB,kC,4CAAO,WAAkCC,GAAlC,SAAAhK,EAAA,sEACoBiK,qBAAW,gCAAiCD,GADhE,kBAESE,GAFT,0CAGQ,GAHR,iCAKI,GALJ,4C,8HCAMC,EAAsC,SAAC,GAAiE,IAAhEhE,EAA+D,EAA/DA,OAAQiE,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,IAAsB,EACjFxM,mBAAS,IADwE,mBACzGyM,EADyG,KAC9FC,EAD8F,KAShH,OAPAxM,qBAAU,WAEFwM,EADDF,EACW,CAAC,CAACrL,GAAI,EAAGL,KAAM,QAAhB,mBAA2BuH,IAE1BA,KAEf,CAACA,IAEA,4BAAQ9I,MAAOgN,EAAcpL,GAAGgG,WAAYnG,SAAU,SAAC2L,GAAOL,EAAiBG,EAAUG,MAAK,SAAAC,GAAC,OAAGA,EAAE1L,KAAO+G,SAASyE,EAAEhI,OAAOpF,aACxHkN,EAAU3H,KAAI,SAAA+H,GACX,OAAO,4BAAQ9H,IAAG,aAAQ8H,EAAE1L,IAAM5B,MAAOsN,EAAE1L,IAAK0L,EAAE/L,Y,2HCwCnD4I,IAlDgC,SAAC,GAA0B,IAAzBlF,EAAwB,EAAxBA,OAAwB,EACzCxE,mBAAS,IADgC,mBAC9DqI,EAD8D,KACtDqE,EADsD,OAE3B1M,mBAAS,CAACmB,GAAI,EAAGL,KAAM,KAFI,mBAE9DyL,EAF8D,KAE/CD,EAF+C,OAGzCtM,mBAAS,IAHgC,mBAG9DqL,EAH8D,KAGtDyB,EAHsD,OAIlC5B,oBAAUxC,IAAU+D,WAJc,mBAI9DM,EAJ8D,KAIjDC,EAJiD,OAKlCnL,qBAAW,CAAEoL,QAASV,EAAcpL,GAAI4B,MAAOyB,EAAQxB,OAAQ,GAAK0F,IAAUwE,2BAL5C,mBAK9DtE,EAL8D,KAKjDC,EALiD,iDAcrE,4BAAA3G,EAAA,sEACsC6K,IADtC,QACUI,EADV,SAGQT,EAAUS,GAHlB,4CAdqE,kEAqBrE,4BAAAjL,EAAA,sEAC2C0G,IAD3C,QACUyC,EADV,SAGQyB,EAAUzB,GAHlB,4CArBqE,sBAwCrE,OAlCAnL,qBAAU,WAEN,OARiE,mCAOjEkN,GACO,WACHvE,EAAYvF,QACZ0J,EAAY1J,WAEjB,IAgBHpD,qBAAU,WACHmI,EAAO7D,OAAS,GACf8H,EAAiBjE,EAAOV,KAAKC,MAAMD,KAAKE,SAASQ,EAAO7D,YAE7D,CAAC6D,IAEJnI,qBAAU,WACHqM,EAAcpL,GAAK,GAnC2C,mCAoC7DkM,KAEL,CAACd,IAGA,6BACI,wBAAInN,UAAU,eAAd,WACI,kBAAC,IAAD,CAAamN,cAAeA,EAAelE,OAAQA,EAAQiE,iBAAkB,SAACO,GAAOP,EAAiBO,OAE1G,kBAAC,IAAD,CAAcxB,OAAQA,EAAOvG,KAAI,SAAA6G,GAAM,OAAO,2BAAIA,GAAX,IAAcvD,QAAS,a,gCC1D1E,4BAqBehB,IAboD,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,SACzEgG,EAAS3C,mBAIf,OACI,4BAAQG,IAAKwC,EAAQtM,SAJzB,WACIsG,EAASJ,IAAeoG,EAAOvG,QAAQxH,SAGAA,MAAO8H,GAC1C,4BAAQ9H,MAAO2H,IAAexH,UAA9B,gBACA,4BAAQH,MAAO2H,IAAetH,MAA9B,a,4DCaG2N,IAvB4B,SAAC,GAAqB,IAApBhO,EAAmB,EAAnBA,MAAmB,EACxBS,mBAAS,SADe,mBACrDwK,EADqD,KACzCC,EADyC,KAa5D,OAXAvK,qBAAU,WAEFuK,EADAlL,EAAQ,EACM,kBACRA,EAAQ,EACA,aACRA,EAAQ,EACA,iBAEA,sBAEnB,CAACA,IAEA,yBAAKH,UAAWoL,GACZ,2BAAI7C,KAAKoD,MAAc,GAARxL,GAAY,KAAO,EAC7B,kBAAC,WAAD,UACA,kBAAC,WAAD,KAAWoI,KAAKoD,MAAc,GAARxL,GAAY,Q,kGCqCpCkK,IAhDgC,SAAC,GAAa,IAAZvI,EAAW,EAAXA,MAAW,EAC3B0C,YAAS,yBAAD,UAA8B1C,EAAMC,GAApC,QAA8C0C,IAAMC,QADjC,mBACjDC,EADiD,KACzCqB,EADyC,KAExD,OACI,6BACI,yBAAKhG,UAAU,cACX,uBAAGA,UAAU,SAAS8B,EAAMqD,OAC5B,kBAAC,IAAD,CAAWhF,MAAO2B,EAAMoH,YAE5B,6BACEJ,SAAS5G,aAAaC,QAAQ,eAAiB,EACxC,kBAAC,IAAD,CAAM+D,GAAE,mCAA8BpE,EAAMC,KAA5C,0BACA,kBAAC,WAAD,OAGS,MAAhBD,EAAMmH,OACPnH,EAAMmH,OAAOvD,KAAI,SAAA+H,GACd,OAAO,kBAAC,IAAD,CAAM9H,IAAG,gBAAW8H,EAAE1L,IAAM/B,UAAU,QAAQkG,GAAI,QAASuH,EAAEW,cAEvE,kBAAC,WAAD,MAGD,yBAAKpO,UAAU,mBACX,yBAAKA,UAAU,wBACX,2BAAI8B,EAAMkH,SACV,iDAAgBqF,YAAOvM,EAAMsC,YAAY2D,YAAzC,YAAwDuG,YAASxM,EAAMsC,YAAY2D,YAAnF,aAAmGwG,YAAQzM,EAAMsC,YAAY2D,cAC7H,iDAAgBjG,EAAM0M,QAAtB,aACA,4CACA,4BACK1M,EAAMsE,MAAMyB,QAAO,SAAAtB,GAAC,OAAoB,IAAjBA,EAAEoD,cAAkBjE,KAAI,SAAA6G,GAC5C,OAAO,wBAAI5G,IAAG,wBAAmB4G,EAAEzG,WAAa,kBAAC,IAAD,CAAM9F,UAAU,OAAOkG,GAAE,+BAA0BqG,EAAEzG,UAAYX,MAAOoH,EAAE7K,MAAQ6K,EAAEtG,iBAG5I,2CACA,4BACKnE,EAAMsE,MAAMyB,QAAO,SAAAtB,GAAC,OAAoB,IAAjBA,EAAEoD,cAAkBjE,KAAI,SAAA6G,GAC5C,OAAO,wBAAI5G,IAAG,wBAAmB4G,EAAEzG,WAAY,kBAAC,IAAD,CAAM9F,UAAU,OAAOkG,GAAE,+BAA0BqG,EAAEzG,UAAYX,MAAOoH,EAAE7K,MAAQ6K,EAAEtG,YAAkB,mCAIhKgE,OAAOC,OAAOC,MAAQ,IACtB,yBAAKnF,IAAKL,EAAQM,QAASe,EAAYhG,UAAU,SAASmF,MAAOrD,EAAMqD,MAAOD,IAAG,UAAKpD,EAAMqD,MAAX,aACjF,kBAAC,WAAD","file":"static/js/9.958f72d1.chunk.js","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport { IReview } from '../../../common/review'\r\nimport { generateFakeErrorMessage } from '../../callers/articleCaller'\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Score } from '../movie/Score'\r\nimport \"./reviewStyle.css\"\r\n\r\ninterface IEditableReview{\r\n    review: IReview;\r\n    onEdit: (rev: IReview) => void;\r\n    onDelete: (toDelete: IReview)=> void;\r\n}\r\n\r\nexport const AddedReview: React.FC<IEditableReview> = ({review, onEdit, onDelete}: IEditableReview)=> {\r\n    function edit(){\r\n        onEdit(review);\r\n    }\r\n\r\n    function removeReview(){\r\n        onDelete(review);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"review-grid\">\r\n                <button onClick={edit} >Edit</button>                                               \r\n                <button onClick={removeReview}>Delete</button>\r\n                <Score value={review.score} />\r\n            </div>\r\n            <p>{review.text}</p>\r\n            <div className=\"like-adder\">\r\n                <div>\r\n                <span>{review.popIndex} <i>likes</i></span>\r\n                </div>\r\n                <span className=\"review-date\">{normalFormat(review.date)}</span>\r\n            </div>     \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddedReview;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport \"./movieStyle.css\"\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Score } from './Score'\r\ninterface IScoreAdder{\r\n    startValue: number;\r\n    setScore: (newValue: number)=> void;\r\n}\r\n\r\nexport const ScoreAdder: React.FC<IScoreAdder> = ({startValue, setScore}: IScoreAdder)=> {\r\n    const [value, setValue] = useState(startValue);\r\n    function increment(){\r\n        if(value < 10){\r\n            setValue(oldValue => { return oldValue + 1 });\r\n        }\r\n    }\r\n\r\n    function decrement(){\r\n        if(value > 1){\r\n            setValue(oldValue => { return oldValue - 1 });\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setScore(value);\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className=\"score-adder-grid\">                                  \r\n            <button onClick={decrement} className=\"score-btn minus\">\r\n                <FontAwesomeIcon icon={faMinus} />\r\n            </button>\r\n            <Score value={value} />\r\n            <button onClick={increment} className=\"score-btn plus\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { IReview } from '../../../common/review';\r\nimport { useBinder } from '../../hooks'\r\nimport { ScoreAdder } from '../movie/ScoreAdder'\r\n\r\ninterface IPostReview{\r\n    review: IReview;\r\n    onPost: (currentReview: IReview) => void;\r\n}\r\n\r\nexport const PostReview: React.FC<IPostReview> = ({review, onPost}: IPostReview) => {\r\n    const [myReview, setMyReview, bindMyReview] = useBinder(review);\r\n    function updateScore(newValue: number){\r\n        setMyReview({...myReview, score: newValue});\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <ScoreAdder startValue={review.score} setScore={updateScore}/>    \r\n            <textarea className=\"review-textarea\" name=\"text\" rows={10} value={myReview.text} onChange={bindMyReview} />\r\n            <button onClick={()=>{ onPost(myReview) }}>Post</button>                   \r\n        </Fragment>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { reviewPath } from \"../../callers/reviewCaller\"\r\nimport LoginMsg from '../profile/LoginMsg';\r\nimport { AddedReview } from './AddedReview';\r\nimport { PostReview } from './PostReview';\r\nimport { IReview } from \"../../../common/review\"\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ECallType, postCaller } from '../../callers/caller';\r\n\r\ninterface IMyReview{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MyReview: React.FC<IMyReview> = ({movie}: IMyReview) => { \r\n    const [reviewContent, setReviewContent] = useState(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: localStorage.getItem(\"userName\")}} onPost={postReview} />);\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    const [reviewCaller, reviewSignal] = postCaller();\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            setReviewContent(<LoginMsg message={\"post a review\"} />);\r\n        } else {\r\n            if(movie.id > 0){\r\n                getMyReview();\r\n            }\r\n        }\r\n        async function getMyReview(){\r\n           const myReview: IReview = await reviewCaller({ userName: localStorage.getItem(\"userName\"), movieId: movie.id, limit: 1, offset: 0}, reviewPath.selectReviewByUserAndMovie, ECallType.SELECT);\r\n            if(myReview){\r\n                setReviewContent(<AddedReview review={myReview} onEdit={startEditing} onDelete={removeReview} />);                 \r\n            } else{\r\n                setMainMsg(\"You haven't posted a review for this movie yet.\");\r\n                setReviewContent(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: \"\"}} onPost={postReview} />);  \r\n            }\r\n        }\r\n        return ()=>{\r\n            reviewSignal.abort();\r\n        }\r\n    }, [movie.id]);\r\n\r\n    useEffect(()=>{\r\n        if(new Date().getTime() < new Date(movie.releaseDate).getTime()){\r\n            setReviewContent(<p>This movie has not been released yet.</p>);\r\n            setMainMsg(\"\");\r\n        }\r\n    }, [movie]);\r\n\r\n    function startEditing(review: IReview){\r\n        setReviewContent(<PostReview review={review} onPost={saveReview} /> );\r\n        setMainMsg(\"Editing your review:\");\r\n    }\r\n\r\n    async function saveReview(review: IReview){\r\n        const fetchResult = await reviewCaller(review, reviewPath.updateReview, ECallType.ISOK);\r\n        if(fetchResult){\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            setMainMsg(\"Review has been updated.\");\r\n        }\r\n    }\r\n\r\n    async function postReview(review: IReview){\r\n        const newId = await reviewCaller(review, reviewPath.insertReview, ECallType.INSERT);\r\n        if(newId){\r\n            review = {...review, id: newId, date: new Date().toLocaleDateString(\"hu-HU\"), popIndex: 1};\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            setMainMsg(\"Your review has been posted.\");\r\n        } else {\r\n            alert(\"Server error: could not post your review.\");\r\n        }\r\n    }\r\n\r\n    async function removeReview(review: IReview){\r\n        const fetchResult = await reviewCaller({ id: review.id }, reviewPath.deleteReview, ECallType.ISOK);\r\n        if(fetchResult){\r\n            setMainMsg(\"Your review has been deleted.\");\r\n            setReviewContent(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: localStorage.getItem(\"userName\")}} onPost={postReview} /> );\r\n        } else {\r\n            alert(\"Server error: could not delete your review.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">My Review</h3>\r\n            <p>{mainMsg}</p>\r\n            <div className=\"review-container\">\r\n                {reviewContent}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./articleStyles.css\";\r\n\r\ninterface ISideArticleRow{\r\n    article: IArticle;\r\n    cutPos: number;\r\n}\r\n\r\nexport const SideArticleRow: React.FC<ISideArticleRow> = ({article, cutPos}: ISideArticleRow)=> {\r\n    const [imgsrc, imgError] = useImage(\"/rewer/uploads/articles\", `${article.id}.jpg`, ESize.Normal);\r\n    const [text, isTextCut, cutText] = useCutter(article.text, cutPos);\r\n    return (\r\n        <div className=\"article-side-row\">\r\n            <img src={imgsrc} onError={imgError} alt={`${article.title}`}  />\r\n            <h3>{article.title}</h3> \r\n            <p>{text}</p>\r\n            {(isTextCut)?\r\n                (<Fragment><p onClick={()=> { cutText(article.text) }} className=\"show-more\">Show more</p></Fragment>):\r\n                (<Fragment>\r\n                    {(article.text.length > cutPos)?\r\n                    (<Fragment><p className=\"show-more\" onClick={()=>{ cutText(article.text, cutPos) }}>Show less</p></Fragment>):\r\n                    (<Fragment></Fragment>)}\r\n                </Fragment>)\r\n            }\r\n            {(article.readMore != null && article.readMore.length > 10)?\r\n            (<a href={article.readMore} target=\"blank\" >Full article</a>):\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideArticleRow;","import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport SideArticleRow from './SideArticleRow'\r\n\r\ninterface ISideArticleRowList{\r\n    articles: IArticle[];\r\n    cutPos: number;\r\n}\r\n\r\nexport const SideArticleRowList: React.FC<ISideArticleRowList> = ({articles, cutPos}: ISideArticleRowList)=> {\r\n    return (\r\n        <Fragment>\r\n            {articles.map(a=>{\r\n                return <SideArticleRow key={`side-article-${a.id}`} article={a} cutPos={cutPos} />\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SideArticleRowList;","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { ICast } from '../../../common/cast';\r\nimport { ESize, useImage } from '../../hooks';\r\nimport \"./castStyle.css\"\r\n\r\ninterface ICastRow{\r\n    cast: ICast;\r\n}\r\n\r\nexport const CastRow: React.FC<ICastRow> = ({cast}: ICastRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/portraits\", `${cast.artistId}.jpg`, ESize.Small);\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={imgsrc} onError={onImgError} alt={cast.artistName} />\r\n            <span><Link to={`/rewer/star?artistId=${cast.artistId}`} >{cast.artistName}</Link></span>\r\n            <p className=\"cast-row-item\">{cast.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastRow;","import React from 'react'\r\nimport { ICast } from '../../../common/cast';\r\nimport { compareCastType } from '../../callers/castCaller';\r\nimport CastRow from './CastRow';\r\n\r\ninterface ICastList{\r\n    casts: ICast[];\r\n}\r\n\r\nexport const CastList: React.FC<ICastList> = ({casts}: ICastList) => {\r\n    return (\r\n        <div>\r\n            {casts.sort(compareCastType).map(c=> {\r\n                return <CastRow key={`cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList;","import React from 'react'\r\nimport { IReview } from '../../../common/review';\r\nimport { ReviewRow } from './ReviewRow';\r\n\r\ninterface IReviewList{\r\n    reviews: IReview[];\r\n    onDelete: (reviewId: number) => void;\r\n}\r\n\r\nexport const ReviewList: React.FC<IReviewList> = ({reviews, onDelete}: IReviewList) => {\r\n    return (\r\n        <div>\r\n            {reviews.map(r=>{\r\n                return <ReviewRow key={`review-${r.id}`} onDelete={onDelete} review={r} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewList;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect, useState, useContext } from 'react'\r\nimport { normalFormat } from '../../dateParser';\r\nimport { useAsyncReference, useScroll } from '../../hooks';\r\nimport { EReviewOrderBy, reviewPath } from \"../../callers/reviewCaller\";\r\nimport ReviewList from './ReviewList';\r\nimport ReviewOrderBySelect from './ReviewOrderBySelect';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ECallType, postCaller } from '../../callers/caller';\r\n\r\ninterface IMovieReviewFeed{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieReviewFeed: React.FC<IMovieReviewFeed> = ({movie}: IMovieReviewFeed) => {\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const [orderBy, setOrderBy] = useState<EReviewOrderBy>(undefined);\r\n    const [reviewHeader, setReviewHeader] = useState<string>(\"\");\r\n    const reviewPerPage = 10;\r\n    const [reviewCaller, reviewSignal] = postCaller();\r\n    const [addScroll, removeScroll] = useScroll(0.9, getMoreReviews);\r\n\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            removeScroll();\r\n            reviewSignal.abort();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(new Date().getTime() >= new Date(movie.releaseDate).getTime()){\r\n            if(orderBy === EReviewOrderBy.popIndex){\r\n                if(movie.id > 0) getReviews();\r\n            } else {\r\n                setOrderBy(EReviewOrderBy.popIndex);\r\n            }          \r\n        } else {\r\n            setReviewHeader(`Reviews will be available on ${normalFormat(movie.releaseDate.toString())}`);\r\n        } \r\n        return ()=> {\r\n            removeScroll();\r\n        }\r\n    }, [movie.id, movie.releaseDate]);\r\n\r\n    useEffect(()=>{\r\n        if(movie.id > 0 && orderBy != null){\r\n            getReviews();\r\n        }\r\n        return ()=> {\r\n            removeScroll();\r\n        }\r\n    }, [orderBy]);\r\n\r\n    async function getReviews(){\r\n        const requestedReviews = await reviewCaller({ movieId: movie.id, limit: reviewPerPage, offset: 0, orderby: orderBy}, reviewPath.selectReviewsByMovie);\r\n        if(requestedReviews){\r\n            setReviews(requestedReviews);\r\n            setReviewHeader(\"Reviews\");\r\n            if(requestedReviews.length === reviewPerPage) addScroll();\r\n        } else {\r\n            setReviewHeader(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeScroll();\r\n        const requestedReviews = await reviewCaller({ movieId: movie.id, limit: reviewPerPage, offset: reviews.current.length, orderby: orderBy}, reviewPath.selectReviewsByMovie);\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) addScroll();\r\n        } else {\r\n            setReviewHeader(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    async function deleteReview(reviewId: number){\r\n        if(await reviewCaller({ id: reviewId }, reviewPath.deleteReview, ECallType.ISOK)){\r\n            setReviews(reviews.current.filter(r=> r.id !== reviewId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"center-text\">{reviewHeader}</h2>\r\n            {new Date().getTime() >= new Date(movie.releaseDate).getTime() ? \r\n            (<Fragment>\r\n                <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                <ReviewList onDelete={deleteReview} reviews={reviews.current} />\r\n            </Fragment>): \r\n            (<Fragment></Fragment>)}    \r\n        </div>\r\n    )\r\n}\r\nexport default MovieReviewFeed;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport { articlePath } from '../../callers/articleCaller';\r\nimport { postCaller } from '../../callers/caller';\r\nimport SideArticleRowList from './SideArticleRowList';\r\n\r\ninterface IArticleSides{\r\n    cutPos?: number;\r\n    length: number;\r\n}\r\n\r\nexport const ArticleSides: React.FC<IArticleSides> = ({cutPos = 100, length}: IArticleSides)=> {\r\n    const [articles, setArticles] = useState<IArticle[]>([]);\r\n    const [articleCaller, signal] = postCaller();\r\n    useEffect(()=>{\r\n        requestArticles();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function requestArticles(){\r\n        const articles = await articleCaller({ limit: length, offset: Math.floor(Math.random() * 5) }, articlePath.selectLatestArticles);\r\n        if(articles) setArticles(articles);\r\n    }\r\n\r\n    return (\r\n        <SideArticleRowList articles={articles} cutPos={cutPos} />\r\n    )\r\n}\r\n\r\nexport default ArticleSides;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport CastList from '../components/cast/CastList';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport GenreSide from '../components/movie/GenreSide';\r\nimport MovieInfo from '../components/movie/MovieInfo'\r\nimport MovieReviewFeed from '../components/review/MovieReviewFeed';\r\nimport { MyReview } from '../components/review/MyReview';\r\nimport { moviePath } from '../callers/movieCaller';\r\nimport { getParameter } from '../urlManager';\r\nimport { IDetailedMovie } from '../../common/movie';\r\nimport { ICast } from '../../common/cast';\r\nimport { postCaller } from '../callers/caller';\r\nimport ArticleSides from '../components/article/ArticleSides';\r\ninterface IMoviePage{\r\n\r\n}\r\nexport default function Movie() {\r\n    const [movie, setMovie] = useState<IDetailedMovie>({ id: parseInt(getParameter(\"movieId\")), title: \"Loading\", releaseDate: \"\", summary: \"...\", genres: [], casts: [], avgScore: 0 });\r\n    const [actors, setActors] = useState<ICast[]>([]);\r\n    const [movieCaller, movieSignal] = postCaller({ id: movie.id }, moviePath.selectDetailedMovie);\r\n    useEffect(()=>{\r\n        document.body.scrollTop = 0; //react sometimes remembers the scroll location so I have to do this terribleness on certain pages\r\n        document.documentElement.scrollTop = 0;\r\n        if(movie.id > 0) requestMovie();\r\n\r\n        return ()=>{\r\n            movieSignal.abort();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(movie != null) document.title = `${movie.title} - Rewer`;\r\n    }, [movie])\r\n\r\n    async function requestMovie(){\r\n        const selectedMovie = await movieCaller();\r\n        if(selectedMovie){\r\n            setMovie(selectedMovie);\r\n            setActors(selectedMovie.casts.filter((c=> c.castTypeId > 3)));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container\">     \r\n                        <MyReview movie={movie} />\r\n                    </div>   \r\n                    <div className=\"side-container\" >  \r\n                        <FeaturedSides />\r\n                    </div>  \r\n                    <div className=\"side-container\" >  \r\n                        <ArticleSides cutPos={70} length={2} />\r\n                    </div>                 \r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <MovieInfo movie={movie} />\r\n                    <MovieReviewFeed movie={movie} />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container\">\r\n                        <h3 className=\"center-text\">Cast</h3> \r\n                        <CastList casts={actors} /> \r\n                    </div>         \r\n                    <div className=\"side-container\" >  \r\n                        <GenreSide length={3} />\r\n                    </div>             \r\n                </div>\r\n             </div>) : \r\n            (<div className=\"main-container\" >\r\n            <MovieInfo movie={movie} />\r\n            <h2>Cast</h2>\r\n            <CastList casts={actors} />\r\n            <MyReview movie={movie} />\r\n            <MovieReviewFeed movie={movie} />\r\n        </div>) }\r\n        </Fragment>\r\n           \r\n    )\r\n/*\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <FeaturedSides />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <GenreSide length={3} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <MovieInfo movie={movie} />\r\n                    <MovieReviewFeed movie={movie} />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <h3 className=\"center-text\">Cast</h3> \r\n                        <CastList casts={actors} /> \r\n                    </div>         \r\n                    <div className=\"side-container medium-side\">     \r\n                        <MyReview movie={movie} />\r\n                    </div>               \r\n                </div>\r\n             </div>) : \r\n            (<div className=\"main-container\" >\r\n            <MovieInfo movie={movie} />\r\n            <h2>Cast</h2>\r\n            <CastList casts={actors} />\r\n            <MyReview movie={movie} />\r\n            <MovieReviewFeed movie={movie} />\r\n        </div>) }\r\n        </Fragment>\r\n           \r\n    ) */\r\n}\r\n","import { ICast, IMovieCast } from \"../../common/cast\";\r\n\r\nexport const castPath = {\r\n    getCastTypes: \"/jsondb/cast_types.json\",\r\n    insertCast: \"/cast/insert_cast\",\r\n    insertCasts: \"/cast/insert_casts\",\r\n    updateCast: \"/cast/update_cast\",\r\n    deleteCast: \"/cast/delete_cast\"\r\n}\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function compareDate(cast1: IMovieCast, cast2: IMovieCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from './Score';\r\nimport { normalFormat } from '../../dateParser';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieRow{\r\n    movie: IMovie;\r\n    cutPos?: number;\r\n}\r\n\r\nexport const MovieRow: React.FC<IMovieRow> = ({movie, cutPos = 70}: IMovieRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(movie.summary, cutPos);\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(movie.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n        if(window.screen.width > 600){\r\n\r\n        }\r\n    }, [movie]);\r\n    return (\r\n        <Link className=\"movie-row-grid\" to={`/rewer/movie?movieId=${movie.id}`}>\r\n            <img className={imgClass} src={imgsrc} alt={`poster-${movie.id}`} title={movie.title} onError={onImgError} />\r\n            <div>\r\n                <p className=\"row-title\">{movie.title}</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>\r\n            {(new Date(movie.releaseDate) <= new Date()) ? \r\n            (<Score value={movie.avgScore} />) ? (movie.releaseDate == null) : \r\n            (<p></p>) :\r\n            (<p className=\"movie-row-date\">{normalFormat(movie.releaseDate.toString())}</p>)\r\n            }\r\n        </Link>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Medium, true);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={onImgError} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport MovieDiv from './MovieDiv';\r\n\r\nexport default function FeaturedSides() {\r\n    const[featuredMovies, setFeaturedMovies] = useState<IDetailedMovie[]>([]);\r\n    const [caller, signal] = getCaller(moviePath.selectLatestMoviesJson)\r\n    useEffect(()=>{\r\n        getLatestFeatures();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getLatestFeatures(){\r\n        const movies: IDetailedMovie[] = await caller();\r\n        const rnd = Math.floor(Math.random()*5);\r\n        if(movies) setFeaturedMovies(movies.slice(rnd, rnd+2)); \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Featured Films</h3>\r\n                    <div className=\"double-grid\">\r\n                        {featuredMovies.map(f=> {\r\n                            return (<Link key={`featured-${f.id}`} to={`/rewer/movie?movieId=${f.id}`}>\r\n                                        <MovieDiv movie={f} />\r\n                                    </Link>)\r\n                        })}\r\n                    </div>  \r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IMovie } from '../../../common/movie'\r\nimport { MovieRow } from './MovieRow'\r\n\r\ninterface IMovieRowList{\r\n    movies: IMovie[];\r\n}\r\n\r\nexport const MovieRowList: React.FC<IMovieRowList> = ({movies}: IMovieRowList) => {\r\n    return (\r\n        <div>\r\n            {movies.map(m=>{\r\n                return <MovieRow key={`movie-row-${m.id}`} movie={m} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface ILoginMsg{\r\n    message: string;\r\n}\r\n\r\nexport const LoginMsg: React.FC<ILoginMsg> = ({message}: ILoginMsg) => {\r\n    return (\r\n    <p>You must be <Link to=\"/rewer/profile\">logged in</Link> {message}</p>\r\n    )\r\n}\r\n\r\nexport default LoginMsg;","import { UploadFile } from \"./caller\";\r\n\r\nexport const articlePath = {\r\n    insertArticle: \"/article/insert_article\",\r\n    updateArticle: \"/article/update_article\",\r\n    deleteArticle: \"/article/delete_article\",\r\n    selectLatestArticles: \"/article/select_latest_articles\",\r\n    selectArticlesByUser: \"/article/select_articles_by_user\",\r\n    uploadImage: \"/article/upload_article_image\"\r\n}\r\n\r\nexport async function uploadArticleImage(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/article/upload_article_image\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isBoolActuallyBool = (bool: boolean | any)=>{\r\n    const type = typeof bool;\r\n    if(type !== \"boolean\"){\r\n        throw `BoolIsActuallyA${type}Exception`;\r\n    }\r\n    if(bool !== true) {\r\n        const newTrue = !bool;\r\n        return newTrue;\r\n    }\r\n}\r\n\r\nexport const generateFakeErrorMessage = ()=>{\r\n    const errorCode = Math.floor(Math.random() * 1000);\r\n    const stack = Math.floor(Math.random() * 100000000000);\r\n    const word = Math.random().toString(36).substring(7);\r\n    const stack2 = Math.floor(Math.random() * 100000000000);\r\n    const word2 = Math.random().toString(36).substring(7);\r\n    const types = [\"Memory\", \"Fatal\", \"Unknown\", \"Server\", \"Connection\", \"Stackoverflow\", \"Stackbelowflow\", \"Index\"];\r\n    const errorType = types[Math.floor(Math.random() * types.length + 1)];\r\n    const errorString = `${errorType} error in stack ${word}${stack}-${word2}${stack2}. Errorcode: ${errorCode}.`;\r\n    alert(errorString);\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { IGenre } from '../../../common/genre';\r\n\r\ninterface IGenreSelect{\r\n    selectedGenre: IGenre;\r\n    setSelectedGenre: (g: IGenre) => void;\r\n    genres: IGenre[];\r\n    any?: boolean;\r\n}\r\n\r\nexport const GenreSelect: React.FC<IGenreSelect> = ({genres, setSelectedGenre, selectedGenre, any}: IGenreSelect)=> {\r\n    const [getGenres, setGenres] = useState([]);\r\n    useEffect(()=>{\r\n        if(any){\r\n            setGenres([{id: 0, name: \"Any\"}, ...genres]);\r\n        } else {\r\n            setGenres(genres);\r\n        }\r\n    }, [genres]);\r\n    return (\r\n        <select value={selectedGenre.id.toString()} onChange={(e)=> { setSelectedGenre(getGenres.find(g=> g.id === parseInt(e.target.value))) }} >\r\n            {getGenres.map(g=> {\r\n                return <option key={`opt${g.id}`} value={g.id}>{g.name}</option>\r\n            })}\r\n        </select>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { IGenre } from '../../../common/genre';\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { getCaller, postCaller } from '../../callers/caller';\r\nimport { moviePath } from \"../../callers/movieCaller\";\r\nimport { GenreSelect } from './GenreSelect';\r\nimport { MovieRowList } from './MovieRowList';\r\n\r\ninterface IGenreSide{\r\n    length: number;\r\n}\r\n\r\nexport const GenreSide: React.FC<IGenreSide> = ({length}: IGenreSide) => {\r\n    const [genres, setGenres] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState({id: 0, name: \"\"});\r\n    const [movies, setMovies] = useState([]);\r\n    const [genreCaller, genreSignal] = getCaller(moviePath.getGenres);\r\n    const [movieCaller, movieSignal] = postCaller({ genreId: selectedGenre.id, limit: length, offset: 0 }, moviePath.selectLatestMoviesByGenre);\r\n    useEffect(()=>{\r\n        requestGenres();\r\n        return ()=>{\r\n            movieSignal.abort();\r\n            genreSignal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function requestGenres(){\r\n        const allGenres: IGenre[] = await genreCaller();\r\n        if(allGenres){\r\n            setGenres(allGenres);\r\n        }\r\n    }\r\n\r\n    async function requestMovies(){\r\n        const movies: IDetailedMovie[] = await movieCaller()\r\n        if(movies){\r\n            setMovies(movies);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(genres.length > 0){\r\n            setSelectedGenre(genres[Math.floor(Math.random()*genres.length)]);\r\n        }\r\n    }, [genres]);\r\n\r\n    useEffect(()=>{\r\n        if(selectedGenre.id > 0){\r\n            requestMovies();\r\n        }\r\n    }, [selectedGenre]);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Fresh of \r\n                <GenreSelect selectedGenre={selectedGenre} genres={genres} setSelectedGenre={(g)=> { setSelectedGenre(g) }} />\r\n            </h3>\r\n            <MovieRowList movies={movies.map(m=> { return {...m, summary: \"\"} })} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreSide;","import React, { useRef } from 'react'\r\nimport { EReviewOrderBy } from '../../callers/reviewCaller';\r\n\r\ninterface IReviewOrderBySelect{\r\n   defaultValue: EReviewOrderBy;\r\n   onUpdate: (newValue: EReviewOrderBy) => void;\r\n}\r\n\r\nexport const ReviewOrderBySelect: React.FC<IReviewOrderBySelect> = ({defaultValue, onUpdate}: IReviewOrderBySelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function update(){\r\n        onUpdate(EReviewOrderBy[select.current.value]);\r\n    }\r\n    return (\r\n        <select ref={select} onChange={update} value={defaultValue}>\r\n            <option value={EReviewOrderBy.popIndex}>Most popular</option>\r\n            <option value={EReviewOrderBy.date}>Latest</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ReviewOrderBySelect;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const MainScore: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n         if(value > 6){\r\n            setScoreClass(\"main-score high\");\r\n        } else if(value > 3){\r\n            setScoreClass(\"main-score\");\r\n        } else if(value > 0) {\r\n            setScoreClass(\"main-score low\");\r\n        } else {\r\n            setScoreClass(\"main-score unset\");\r\n        }\r\n    }, [value]);\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{Math.round(value * 10)/10 === 0 ?\r\n                (<Fragment>X</Fragment>):\r\n                (<Fragment>{Math.round(value * 10)/10}</Fragment>)}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScore;","import React, { Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IMovie } from '../../../common/movie';\r\nimport { getDay, getMonth, getYear } from '../../dateParser'\r\nimport { ESize, useImage } from '../../hooks';\r\nimport MainScore from './MainScore'\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieInfo{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieInfo: React.FC<IMovieInfo> = ({movie}) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Normal);\r\n    return (\r\n        <div>\r\n            <div className=\"title-grid\">\r\n                <p className=\"title\">{movie.title}</p>\r\n                <MainScore value={movie.avgScore} />\r\n            </div>\r\n            <div>\r\n            { parseInt(localStorage.getItem(\"permission\")) > 1 ?\r\n                    (<Link to={`/rewer/editmovie?movieId=${movie.id}`} >Edit this movie's page</Link>) : \r\n                    (<Fragment></Fragment>)\r\n                    }\r\n            </div>                     \r\n            {(movie.genres != null)?\r\n            (movie.genres.map(g=> {\r\n                return <Link key={`genre-${g.id}`} className=\"genre\" to={\"todo\"}>{g.genreName}</Link>\r\n            })):\r\n            (<Fragment></Fragment>)\r\n            }\r\n        \r\n            <div className=\"movie-info-grid\">               \r\n                <div className=\"movie-info-grid-item\">\r\n                    <p>{movie.summary}</p>\r\n                    <p>Premier: {`${getDay(movie.releaseDate.toString())} ${getMonth(movie.releaseDate.toString())}  ${getYear(movie.releaseDate.toString())}`}</p>\r\n                    <p>Runtime: {`${movie.runtime} minutes`}</p>\r\n                    <p>Directed by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 1).map(m=>{\r\n                            return <li key={`director-link-${m.artistId}`} ><Link className=\"star\" to={`/rewer/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Written by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 3).map(m=> {\r\n                            return <li key={`director-link-${m.artistId}`}><Link className=\"star\" to={`/rewer/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link><br/></li>\r\n                        })} \r\n                    </ul>                        \r\n                </div>\r\n                {window.screen.width > 800 ?\r\n                (<img src={imgsrc} onError={onImgError} className=\"poster\" title={movie.title} alt={`${movie.title}-poster`} />):\r\n                (<Fragment></Fragment>)}\r\n                   \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default MovieInfo;\r\n"],"sourceRoot":""}