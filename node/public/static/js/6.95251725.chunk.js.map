{"version":3,"sources":["components/artist/StandardArtistRow.tsx","components/artist/ArtistRowList.tsx","components/profile/UserRow.tsx","components/profile/UserRowList.tsx","components/series/SeriesRowList.tsx","components/Search.tsx","pages/SearchPage.tsx","hooks.tsx","dateParser.ts","callers/movieCaller.ts","components/movie/Score.tsx","callers/castCaller.ts","callers/seriesCaller.ts","components/movie/MovieRow.tsx","components/movie/MovieDiv.tsx","components/series/SeriesDiv.tsx","components/movie/FeaturedSides.tsx","components/movie/MovieRowList.tsx","components/series/FeaturedSeriesSides.tsx","callers/search.ts","components/AutoCompleteElement.tsx","components/AutoCompleteInput.tsx","components/article/ArticleRow.tsx","components/article/ArticleRowList.tsx","components/series/SeriesRow.tsx"],"names":["StandardArtistRow","artist","useImage","id","ESize","Small","imgsrc","onError","useState","bio","setBio","useEffect","length","substring","className","to","src","alt","title","name","normalFormat","birthDate","toString","ArtistRowList","artists","map","a","key","UserRow","user","userName","onImgError","about","setAbout","nickName","UserRowList","users","u","SeriesRowList","series","s","SeriesRow","Search","movies","articles","results","setResults","useAsyncReference","getParameter","keyword","setKeyword","mainMsg","setMainMsg","filters","setFilters","postCaller","searcher","signal","autoList","setAutoList","fetchResults","word","filter","searchPath","search","result","document","changeParam","value","changeAllFilters","newValue","newF","prop","limit","autoComplete","auto","current","abort","AutoCompleteInput","setValue","stringList","onSubmit","requestAutoComplete","checked","type","onChange","onClick","MovieRowList","ArticleRowList","cutPos","SearchPage","window","screen","width","FeaturedSeriesSides","FeaturedSides","ref","useRef","forceRender","newState","Object","is","useBinder","get","set","event","target","useAsyncBinder","updateState","useCutter","defaultText","defaultCutPos","getCutText","firstText","firstCut","isCut","setIsCut","outputText","setOutputText","cut","text","newText","didCut","toCut","onEnter","callback","useScroll","pos","newPos","position","listener","innerHeight","scrollY","body","offsetHeight","addEventListener","removeEventListener","path","fileName","size","Normal","tryAgain","imgSrc","setImgSrc","tryAgainRef","imgSrcSetter","newPath","newFileName","parseDateYYYYMMDD","date","getFullYear","monthNames","getMonth","getDate","getYear","Date","getDay","d","parseForInput","month","day","moviePath","selectDetailedMovie","selectLatestMovies","selectLatestMoviesJson","selectLatestMoviesByGenre","selectMoviesByScore","getGenres","insertMovie","updateMovie","deleteMovie","uploadPoster","insertMovieGenre","deleteMovieGenre","selectUpcomingMovies","selectUpcomingMoviesJson","file","UploadFile","ok","compareMovieGenresByName","genre1","genre2","genreName","localeCompare","Score","scoreClass","setScoreClass","Math","round","castPath","getCastTypes","insertCast","insertCasts","updateCast","deleteCast","compareCastType","cast1","cast2","castTypeId","seriesPath","insertSeries","updateSeries","uploadSeriesPoster","selectDetailedSeries","selectLatestPreviewSeries","selectLatestPreviewSeriesJson","insertSeriesGenre","deleteSeriesGenre","selectDetailedSeriesPostFetch","detailedSeries","genres","sort","seasons","orderSeasonCast","orderCasts","episodes","compareEpisodes","getSeasonCount","getEpisodeCount","sum","forEach","season","getFirstEpisodeDate","releaseDate","getAvgRuntime","epCount","episode","runtime","getSeriesCast","seriesCast","setSeriesCastFromSeason","getAvgSeriesScore","reviewedEpisodeCount","avgScore","setSeriesCastFromEpisode","casts","setSeriesCastFromCast","cast","sc","find","artistId","updatedNames","characterNames","push","episodeCount","handleExistingSeriesCast","artistName","episode1","episode2","MovieRow","movie","imgClass","setImgClass","summary","MovieDiv","Medium","scoreLine","style","display","SeriesDiv","featuredMovies","setFeaturedMovies","getCaller","caller","rnd","floor","random","slice","getLatestFeatures","f","m","featueredSeries","setFeaturedSeries","seriesCaller","featured","requestFeaturedSeries","AutoCompleteElement","selectedValue","mainClass","setMainClass","showAutoComplete","setShowAutoComplete","selected","setSelected","wrapperRef","addClickListener","removeClickListener","handleClickOutside","e","contains","keyCode","String","fromCharCode","toLowerCase","handleUpArrow","currentIndex","indexOf","handleDownArrow","placeholder","onKeyDown","keycode","onDivKeyDown","list","icon","faSearch","ArticleRow","article","isTextCut","cutText","readMore","href"],"mappings":"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","file":"static/js/6.95251725.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { normalFormat } from '../../dateParser';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./artistStyle.css\"\r\nimport { IArtist } from '../../../common/artist';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IStandardArtistRow{\r\n    artist: IArtist;\r\n}\r\n\r\nexport const StandardArtistRow: React.FC<IStandardArtistRow> = ({artist}: IStandardArtistRow) => {\r\n    const [imgsrc, onError] = useImage(\"/rewer/uploads/portraits\", `${artist.id}.jpg`, ESize.Small);\r\n    const [bio, setBio] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(artist.bio.length > 80){\r\n            setBio(`${artist.bio.substring(0, 150)}...`);\r\n        } else {\r\n            setBio(artist.bio);\r\n        }\r\n    }, [artist])\r\n    return (\r\n    <Link className=\"standard-artist-grid highlight\" to={`/rewer/star?artistId=${artist.id}`}>\r\n        <img src={imgsrc} alt={`poster-${artist.id}`} title={artist.name} onError={onError} />\r\n        <div>\r\n            <p className=\"name\">{artist.name}</p>\r\n            <p>{normalFormat(artist.birthDate.toString())}</p>\r\n            <p >{bio}</p>\r\n        </div>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default StandardArtistRow;","import React from 'react'\r\nimport { IArtist } from '../../../common/artist';\r\nimport StandardArtistRow from './StandardArtistRow';\r\n\r\ninterface IArtistRowList{\r\n    artists: IArtist[];\r\n}\r\n\r\nexport const ArtistRowList: React.FC<IArtistRowList> = ({artists}: IArtistRowList) => {\r\n    return (\r\n        <div>\r\n            {artists.map(a=>{\r\n              return <StandardArtistRow key={`artist-row-${a.id}`} artist={a} />  \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistRowList;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedUser } from '../../../common/user';\r\nimport { ESize, useImage } from '../../hooks';\r\ninterface IUserRow{\r\n    user: IDetailedUser;\r\n}\r\n\r\nexport const UserRow: React.FC<IUserRow> = ({user}: IUserRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/avatars\", `${user.userName}.jpg`, ESize.Small);\r\n    const [about, setAbout] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(user.about.length > 100){\r\n            setAbout(`${user.about.substring(0, 100)}...`);\r\n        } else {\r\n            setAbout(user.about);\r\n        }\r\n    }, [user])\r\n    return (\r\n        <Link className=\"user-row highlight\" to={`/rewer/user?userName=${user.userName}`}>\r\n            <img src={imgsrc} onError={onImgError} alt={`user-${user.nickName}`} />\r\n            <div>\r\n                <p className=\"name\">{user.nickName}</p>\r\n                <p>{about}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default UserRow","import React from 'react'\r\nimport { IDetailedUser } from '../../../common/user'\r\nimport UserRow from './UserRow'\r\n\r\ninterface IUserRowList{\r\n    users: IDetailedUser[];\r\n}\r\n\r\nexport const UserRowList: React.FC<IUserRowList> = ({users}: IUserRowList) => {\r\n    return (\r\n        <div>\r\n            {users.map(u=>{\r\n                return <UserRow key={`user-row-${u.userName}`} user={u} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRowList;","import React from 'react'\r\nimport { IPreviewSeries } from '../../../common/series'\r\nimport SeriesRow from './SeriesRow'\r\n\r\ninterface ISeriesRowList{\r\n    series: IPreviewSeries[];\r\n}\r\n\r\nexport const SeriesRowList: React.FC<ISeriesRowList> = ({series}: ISeriesRowList) => {\r\n    return (\r\n        <div>\r\n            {series.map(s=>{\r\n                return <SeriesRow key={`series-row-${s.id}`} series={s} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { IFilter } from '../../common/search';\r\nimport { postCaller } from '../callers/caller';\r\nimport { searchPath } from '../callers/search';\r\nimport { useAsyncReference } from '../hooks';\r\nimport { changeParam, getParameter } from '../urlManager';\r\nimport ArticleRowList from './article/ArticleRowList';\r\nimport ArtistRowList from './artist/ArtistRowList';\r\nimport AutoCompleteInput from './AutoCompleteInput';\r\nimport { MovieRowList } from './movie/MovieRowList';\r\nimport UserRowList from './profile/UserRowList';\r\nimport { SeriesRowList } from './series/SeriesRowList';\r\n\r\nexport default function Search() {\r\n    const [results, setResults] = useState({movies: [], series: [], artists: [], users: [], articles: []});\r\n    const [keyword, setKeyword] = useAsyncReference(getParameter(\"keyword\"));\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    const [filters, setFilters] = useState<IFilter>({ movies: true, series: true, artists: true, articles: true, users: true });\r\n    const [searcher, signal] = postCaller();\r\n    const [autoList, setAutoList] = useState<string[]>([]);\r\n\r\n    useEffect(()=>{\r\n        fetchResults(keyword.current);\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function fetchResults(word: string){\r\n        setMainMsg(`Searching for \"${word}\"...`);\r\n        const result = await searcher({ keyword: word, filter: filters }, searchPath.search);\r\n        if(result){\r\n            setResults(result);\r\n            setMainMsg(\"\");\r\n            document.title = `Search: ${word} - Rewer`;\r\n        }\r\n        changeParam({name: \"keyword\", value: word });\r\n    }\r\n\r\n    function changeAllFilters(newValue: boolean){\r\n        const newF = filters;\r\n        for(const prop in newF) {\r\n            newF[prop] = newValue;\r\n        }\r\n        setFilters({ ...newF }); //*__*\r\n    }\r\n\r\n    async function requestAutoComplete(word: string){\r\n        if(word.length > 3){\r\n            const auto = await searcher({ keyword: word, limit: 5, filter: filters }, searchPath.autoComplete);         \r\n            if(auto){\r\n                setAutoList(auto);\r\n            }\r\n        } else {\r\n            setAutoList([]);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <AutoCompleteInput value={keyword.current} setValue={(s)=>{ setKeyword(s) }} stringList={autoList} onSubmit={(s)=>{ fetchResults(s) }} requestAutoComplete={(s: string)=>{ requestAutoComplete(s) }} />\r\n            <h3>Include: </h3>\r\n            <label>Movies:</label>\r\n            <input checked={filters.movies} name=\"movies\" type=\"checkbox\" onChange={()=>{ setFilters({ ...filters, movies: !filters.movies }) }} className=\"search-cb\" />\r\n            <label>Series:</label>\r\n            <input checked={filters.series} name=\"series\" type=\"checkbox\" onChange={()=>{ setFilters({ ...filters, series: !filters.series }) }} className=\"search-cb\" />\r\n            <label>Artists:</label>\r\n            <input checked={filters.artists} name=\"artists\" type=\"checkbox\" onChange={()=>{ setFilters({ ...filters, artists: !filters.artists })} } className=\"search-cb\" />\r\n            <label>Articles:</label>\r\n            <input checked={filters.articles} name=\"articles\" type=\"checkbox\" onChange={()=>{ setFilters({ ...filters, articles: !filters.articles })} } className=\"search-cb\" />\r\n            <label>Users:</label>\r\n            <input checked={filters.users} name=\"users\" type=\"checkbox\" onChange={()=>{ setFilters({ ...filters, users: !filters.users })} } className=\"search-cb\" /><br/>\r\n            <button onClick={()=>{ changeAllFilters(true) }}>All</button>\r\n            <button onClick={()=>{ changeAllFilters(false) }}>Clear</button>\r\n            <p>{mainMsg}</p>\r\n            <MovieRowList movies={results.movies} />\r\n            <SeriesRowList series={results.series} />\r\n            <ArtistRowList artists={results.artists} />\r\n            <UserRowList users={results.users} />\r\n            <ArticleRowList articles={results.articles} cutPos={150} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport Search from '../components/Search';\r\nimport FeaturedSeriesSides from '../components/series/FeaturedSeriesSides';\r\n\r\nexport default function SearchPage() {\r\n    useEffect(()=>{\r\n        document.title = \"Search - Rewer\";\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 1000 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <Search />\r\n                </div>\r\n                <div className=\"right-item \">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSides />\r\n                    </div>\r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <Search />\r\n            </div>)}\r\n        </Fragment>    \r\n    )\r\n}","import { useState, useRef } from \"react\";\r\nexport function useAsyncReference<T>(value: T) {\r\n    const ref = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    return [ref, updateState] as const;\r\n}\r\n\r\nexport function useBinder<T>(value: T){\r\n    const [get, set] = useState<T>(value);\r\n    const bind = (event)=>{\r\n        set({...get, [event.target.name]: event.target.value});\r\n    }\r\n    return [get, set, bind] as const;\r\n}\r\n\r\nexport function useAsyncBinder<T>(value: T){\r\n    const ref = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    const bind = (event) => {\r\n        updateState({...ref.current, [event.target.name]: event.target.value});\r\n    }\r\n    return [ref, updateState, bind] as const;\r\n}\r\n\r\nexport function useCutter(defaultText: string, defaultCutPos = 0): readonly [string, boolean, (text: string, custPos?: number)=>void]{\r\n    const [firstText, firstCut] = getCutText(defaultText, defaultCutPos > 0, defaultCutPos);\r\n    const [isCut, setIsCut] = useState(firstCut);\r\n    const [outputText, setOutputText] = useState(firstText);\r\n\r\n    const cut = (text: string, cutPos = 0) => {\r\n        const [newText, didCut] = getCutText(text, cutPos > 0, cutPos);\r\n        setOutputText(newText);\r\n        setIsCut(didCut);\r\n    }\r\n\r\n    return [outputText, isCut, cut] as const;\r\n}\r\n\r\nfunction getCutText(text: string, toCut: boolean, cutPos: number): [string, boolean]{\r\n    if(toCut && text.length > cutPos){\r\n        return [text.substring(0, cutPos) + \"...\", true];\r\n    }\r\n    return [text, false];\r\n}\r\n\r\nexport function setBinder(event, object, setter: (any)=> void){\r\n    setter({...object.current, [event.target.name]: event.target.value});\r\n}\r\n\r\nexport function onEnter(event, callback){\r\n    if (event.key === 'Enter') {\r\n        callback();\r\n    }\r\n}\r\n\r\nexport function useScroll(pos: number, callback: ()=> any): readonly [()=>void, ()=>void]{ \r\n    let newPos = pos;\r\n    if(pos > 1 || pos < 0) newPos = 0.8;\r\n    const position = useRef(newPos);\r\n    const listener = ()=>{\r\n        if((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*position.current)){\r\n            callback();\r\n        }\r\n    }\r\n    const addListener = () =>{\r\n        window.addEventListener(\"scroll\", listener);\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener(\"scroll\", listener);\r\n    }\r\n    return [addListener, removeListener] as const;\r\n}\r\n\r\nexport enum ESize{\r\n    Normal = \"\",\r\n    Medium = \"medium-\",\r\n    Small = \"small-\",\r\n}\r\n\r\nexport function useImage(path: string, fileName: string, size = ESize.Normal, tryAgain = false){\r\n    const [imgSrc, setImgSrc] = useState<string>(`${path}/${size}${fileName}`);\r\n    const tryAgainRef = useRef(tryAgain);\r\n    const onError= () =>{\r\n        if(tryAgainRef.current){\r\n            setImgSrc(`${path}/${ESize.Normal}${fileName}`);\r\n            tryAgainRef.current = false;\r\n        } else {\r\n            setImgSrc(`${path}/${size}0.jpg`);\r\n        }\r\n    }\r\n    const imgSrcSetter = (newPath: string, newFileName: string) => {\r\n        setImgSrc(`${newPath}/${size}${newFileName}`);\r\n    }\r\n    return [imgSrc, onError, imgSrcSetter] as const;\r\n}\r\n\r\nexport interface IWindowState{\r\n    name: string;\r\n    maxValue: number;\r\n}\r\n\r\nexport function useWidth(defWindowStates: IWindowState[]){\r\n    const windowsStates = useRef(defWindowStates.sort(compareWindowStates));\r\n    const [currentWindowState, setCurrentWindowState] = useState(windowsStates.current.find(w=> w.maxValue > window.innerWidth));\r\n    const listen = ()=>{\r\n        window.addEventListener(\"resize\", ()=>{\r\n            windowStateSetter();\r\n        });\r\n    }\r\n    const cleanUpListener = ()=>{\r\n        window.removeEventListener(\"resize\", ()=>{\r\n            windowStateSetter();\r\n        });\r\n    }\r\n    const windowStateSetter = ()=>{\r\n        setCurrentWindowState(windowsStates.current.find(w=> w.maxValue > window.innerWidth));\r\n    }\r\n    return [currentWindowState, listen, cleanUpListener] as const;\r\n}\r\n\r\nfunction compareWindowStates(wstate1: IWindowState, wstate2: IWindowState){\r\n    if(wstate1.maxValue < wstate2.maxValue) return -1;\r\n    if(wstate1.maxValue > wstate2.maxValue) return 1;\r\n    return 0;\r\n}","export function parseDateHun(date: Date): string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}. ${parseDatehhdd(date)}`;\r\n}\r\n\r\nexport function parseDateYYYYMMDD(date: Date):string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}`;\r\n}\r\n\r\nexport function parseDatehhdd(date: Date):string{\r\n    if(date.getMinutes() < 10){\r\n        return `${date.getHours()}:0${date.getMinutes()}`;\r\n    } else {\r\n        return `${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n}\r\n\r\nexport function getYear(date: string){\r\n    return new Date(date).getFullYear();\r\n}\r\n\r\nexport function getMonth(date: string){\r\n    return monthNames[new Date(date).getMonth()]; \r\n}\r\n\r\nexport function getDay(date: string){\r\n    return new Date(date).getDate();\r\n}\r\n\r\nexport function normalFormat(date: string): string{\r\n    let d = new Date(date);\r\n    return `${d.getDate()} ${monthNames[d.getMonth()]} ${d.getFullYear()}`;\r\n}\r\n\r\nexport function parseForInput(date: Date): string{\r\n    let month: string;\r\n    let day: string;\r\n    if(date.getMonth() < 9){\r\n        month = `0${date.getMonth()+1}`;\r\n    } else {\r\n        month = (date.getMonth()+1).toString();\r\n    }\r\n    if(date.getDate() < 10){\r\n        day = `0${date.getDate()}`;\r\n    } else {\r\n        day = date.getDate().toString();\r\n    }\r\n\r\n    return `${date.getFullYear()}-${month}-${day}`;\r\n}\r\n\r\nexport let monthNames = [\"Janury\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n","import { IGenre, IMovieGenre, ISeriesGenre } from \"../../common/genre\";\r\nimport { UploadFile } from \"../callers/caller\";\r\n\r\nexport const moviePath = {\r\n    selectDetailedMovie: \"/movie/select_detailed_movie\",\r\n    selectLatestMovies: \"/movie/select_latest_movies\",\r\n    selectLatestMoviesJson: \"/jsondb/latest_movies.json\",\r\n    selectLatestMoviesByGenre: \"/movie/select_latest_movies_by_genre\",\r\n    selectMoviesByScore: \"/movie/select_movies_by_score\",\r\n    getGenres: \"/jsondb/genres.json\",\r\n    insertMovie: \"/movie/insert_movie\",\r\n    updateMovie: \"/movie/update_movie\",\r\n    deleteMovie: \"/movie/delete_movie\",\r\n    uploadPoster: \"/movie/upload_poster\",\r\n    insertMovieGenre: \"/genre/insert_movie_genre\",\r\n    deleteMovieGenre: \"/genre/delete_movie_genre\",\r\n    selectUpcomingMovies: \"/movie/select_upcoming_movies\",\r\n    selectUpcomingMoviesJson: \"/jsondb/upcoming_movies.json\"\r\n}\r\n\r\nexport async function uploadPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/movie/upload_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function compareGenresByName(genre1: IGenre, genre2: IGenre){\r\n    return genre1.name.localeCompare(genre2.name);\r\n}\r\n\r\nexport function compareMovieGenresByName(genre1: IMovieGenre | ISeriesGenre, genre2: IMovieGenre | ISeriesGenre){\r\n    return genre1.genreName.localeCompare(genre2.genreName);\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const Score: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"score high\");\r\n        } else if(value > 3){\r\n            setScoreClass(\"score\");\r\n        } else if(value > 0) {\r\n            setScoreClass(\"score low\");\r\n        } else {\r\n            setScoreClass(\"score unset\");\r\n        }\r\n    }, [value])\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{Math.round(value*10) / 10}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { ICast, IMovieCast } from \"../../common/cast\";\r\n\r\nexport const castPath = {\r\n    getCastTypes: \"/jsondb/cast_types.json\",\r\n    insertCast: \"/cast/insert_cast\",\r\n    insertCasts: \"/cast/insert_casts\",\r\n    updateCast: \"/cast/update_cast\",\r\n    deleteCast: \"/cast/delete_cast\"\r\n}\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function compareDate(cast1: IMovieCast, cast2: IMovieCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n","import { ICast, ISeriesCast } from \"../../common/cast\";\r\nimport { IMovie } from \"../../common/movie\";\r\nimport { ISeason } from \"../../common/season\";\r\nimport { IDetailedSeries, IPreviewSeries, ISeries, ISeriesGenre } from \"../../common/series\";\r\nimport { POSTAsynch, UploadFile } from \"./caller\";\r\nimport { compareCastType } from \"./castCaller\";\r\nimport { compareMovieGenresByName } from \"./movieCaller\";\r\n\r\nexport const seriesPath = {\r\n    insertSeries:\"/series/insert_series\",\r\n    updateSeries: \"/series/update_series\",\r\n    uploadSeriesPoster: \"/series/upload_series_poster\",\r\n    selectDetailedSeries: \"/series/select_detailed_series\",\r\n    selectLatestPreviewSeries: \"/series/select_latest_preview_series\",\r\n    selectLatestPreviewSeriesJson: \"/jsondb/latest_series.json\", \r\n    insertSeriesGenre: \"/genre/insert_series_genre\",\r\n    deleteSeriesGenre: \"/genre/delete_series_genre\"\r\n}\r\n\r\nexport async function uploadSeriesPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/series/upload_series_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function selectDetailedSeriesPostFetch(detailedSeries: IDetailedSeries){\r\n    detailedSeries.genres.sort(compareMovieGenresByName);\r\n    orderCasts(detailedSeries);\r\n    for(let season of detailedSeries.seasons) {\r\n        season.episodes.sort(compareEpisodes);\r\n    }\r\n}\r\n\r\nexport async function selectLatestPreviewSeries(limit: number, offset: number): Promise<IPreviewSeries[] | null >{\r\n    const response = await POSTAsynch(\"/series/select_latest_preview_series\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertSeriesGenre(seriesGenre: ISeriesGenre): Promise<number | null>{\r\n    const response = await POSTAsynch(\"genre/insert_series_genre\", seriesGenre);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteSeriesGenre(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"genre/delete_series_genre\", { id: id});\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getSeasonCount(series: ISeries): number{\r\n    return series.seasons.filter(s=> s.episodes.length > 0).length;\r\n}\r\n\r\nexport function getEpisodeCount(series: ISeries): number{\r\n    let sum: number = 0;\r\n    series.seasons.forEach(season => {\r\n        sum += season.episodes.length;\r\n    });\r\n    return sum;\r\n}\r\n\r\n\r\nexport function getFirstEpisodeDate(series: ISeries): string{\r\n    if(series.seasons.length > 0 && series.seasons[0].episodes.length > 0){\r\n        return series.seasons[0].episodes[0].releaseDate;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getAvgRuntime(series: ISeries): number{\r\n    let epCount: number = getEpisodeCount(series);\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.runtime > 0) sum += episode.runtime;\r\n        }\r\n    }\r\n    return sum / epCount;\r\n}\r\n\r\nexport function getSeriesCast(series: ISeries): ISeriesCast[]{\r\n    let seriesCast: ISeriesCast[] = [];\r\n    for(let season of series.seasons) {\r\n        setSeriesCastFromSeason(season, seriesCast);\r\n    }\r\n    return seriesCast;\r\n}\r\n\r\nfunction compareSeriesCastByEpisodeCount(scast1: ISeriesCast, scast2: ISeriesCast){\r\n    if(scast1.episodeCount > scast2.episodeCount){\r\n        return -1;\r\n    }\r\n    if(scast1.episodeCount < scast2.episodeCount){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function getAvgSeriesScore(series: ISeries){\r\n    let reviewedEpisodeCount: number = 0;\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.avgScore > 0){\r\n                sum = sum + episode.avgScore;\r\n                reviewedEpisodeCount++;\r\n            } \r\n        }\r\n    }\r\n    return sum / reviewedEpisodeCount;\r\n}\r\n\r\nfunction setSeriesCastFromSeason(season: ISeason, seriesCast: ISeriesCast[]){\r\n    for(let episode of season.episodes) {\r\n        setSeriesCastFromEpisode(episode, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromEpisode(episode: IMovie, seriesCast: ISeriesCast[]){\r\n    for(let cast of episode.casts) {\r\n        setSeriesCastFromCast(cast, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromCast(cast: ICast, seriesCast: any[]){\r\n    let sc: ISeriesCast = seriesCast.find(a=> a.artistId === cast.artistId);\r\n    if(sc != null){\r\n        handleExistingSeriesCast(cast, sc);\r\n    } else {\r\n        seriesCast.push({ \r\n            artistId: cast.artistId, \r\n            artistName: cast.artistName, \r\n            episodeCount: 1, \r\n            characterNames: [cast.name], \r\n            castTypeId: cast.castTypeId } );\r\n    }\r\n}\r\n\r\nfunction handleExistingSeriesCast(cast: ICast, sc: any){\r\n     let updatedNames = sc.characterNames;\r\n     if(sc.characterNames.filter(a=> a === cast.name).length === 0){\r\n         updatedNames.push(cast.name);\r\n     }\r\n     sc = {...sc, episodeCount: sc.episodeCount++, characterNames: updatedNames };\r\n}\r\n\r\nfunction orderCasts(series: ISeries){\r\n    for(let season of series.seasons) {\r\n        orderSeasonCast(season);\r\n    }\r\n}\r\n\r\nfunction orderSeasonCast(seasons: ISeason){\r\n    for(let episode of seasons.episodes) {\r\n            episode.casts.sort(compareCastType);\r\n    }\r\n}\r\n\r\nexport function compareEpisodes(episode1: IMovie, episode2: IMovie){\r\n    if(new Date(episode1.releaseDate) > new Date(episode2.releaseDate)){\r\n        return 1;\r\n    }\r\n    if(new Date(episode1.releaseDate) < new Date(episode2.releaseDate)){\r\n        return -1;\r\n    }\r\n    if(episode1.releaseDate === episode2.releaseDate){\r\n        if(episode1.id > episode2.id) return 1;\r\n        if(episode1.id < episode2.id) return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from './Score';\r\nimport { normalFormat } from '../../dateParser';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieRow{\r\n    movie: IMovie;\r\n    cutPos?: number;\r\n}\r\n\r\nexport const MovieRow: React.FC<IMovieRow> = ({movie, cutPos = 70}: IMovieRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(movie.summary, cutPos);\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(movie.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n        if(window.screen.width > 600){\r\n\r\n        }\r\n    }, [movie]);\r\n    return (\r\n        <Link className=\"movie-row-grid\" to={`/rewer/movie?movieId=${movie.id}`}>\r\n            <img className={imgClass} src={imgsrc} alt={`poster-${movie.id}`} title={movie.title} onError={onImgError} />\r\n            <div>\r\n                <p className=\"row-title\">{movie.title}</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>\r\n            {(new Date(movie.releaseDate) <= new Date()) ? \r\n            (<Score value={movie.avgScore} />) ? (movie.releaseDate == null) : \r\n            (<p></p>) :\r\n            (<p className=\"movie-row-date\">{normalFormat(movie.releaseDate.toString())}</p>)\r\n            }\r\n        </Link>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Medium, true);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={onImgError} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, {useState, useRef, useEffect } from 'react'\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { useImage } from '../../hooks';\r\nimport \"../movie/movieStyle.css\";\r\n\r\ninterface ISeriesDiv{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesDiv: React.FC<ISeriesDiv> = ({series}: ISeriesDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/seriesposters\", `${series.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [series]);\r\n    \r\n    return (\r\n        <div className=\"movie-container fade\">            \r\n            <img className={imgClass} src={imgsrc} alt={`${series.title}-poster`} onError={onImgError} />                \r\n            <p className=\"movie-title\">{series.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(series.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SeriesDiv;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport MovieDiv from './MovieDiv';\r\n\r\nexport default function FeaturedSides() {\r\n    const[featuredMovies, setFeaturedMovies] = useState<IDetailedMovie[]>([]);\r\n    const [caller, signal] = getCaller(moviePath.selectLatestMoviesJson)\r\n    useEffect(()=>{\r\n        getLatestFeatures();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getLatestFeatures(){\r\n        const movies: IDetailedMovie[] = await caller();\r\n        const rnd = Math.floor(Math.random()*5);\r\n        if(movies) setFeaturedMovies(movies.slice(rnd, rnd+2)); \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Featured Films</h3>\r\n                    <div className=\"double-grid\">\r\n                        {featuredMovies.map(f=> {\r\n                            return (<Link key={`featured-${f.id}`} to={`/rewer/movie?movieId=${f.id}`}>\r\n                                        <MovieDiv movie={f} />\r\n                                    </Link>)\r\n                        })}\r\n                    </div>  \r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IMovie } from '../../../common/movie'\r\nimport { MovieRow } from './MovieRow'\r\n\r\ninterface IMovieRowList{\r\n    movies: IMovie[];\r\n}\r\n\r\nexport const MovieRowList: React.FC<IMovieRowList> = ({movies}: IMovieRowList) => {\r\n    return (\r\n        <div>\r\n            {movies.map(m=>{\r\n                return <MovieRow key={`movie-row-${m.id}`} movie={m} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { seriesPath } from '../../callers/seriesCaller';\r\nimport SeriesDiv from './SeriesDiv';\r\n\r\ninterface IFeaturedSeriesSides{\r\n   // series: ISeries[];\r\n}\r\n\r\nexport const FeaturedSeriesSides: React.FC<IFeaturedSeriesSides> = () => {\r\n    const [featueredSeries, setFeaturedSeries] = useState([]);\r\n    const [seriesCaller, signal] = getCaller(seriesPath.selectLatestPreviewSeriesJson);\r\n    useEffect(()=>{\r\n        requestFeaturedSeries();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function requestFeaturedSeries(){\r\n        const featured: IPreviewSeries[] = await seriesCaller();\r\n        if(featured){\r\n            setFeaturedSeries(featured.slice(0, 2)); //majd random lesz elég adattal\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Featured Series</h3>\r\n                <div className=\"double-grid\">\r\n                    {featueredSeries.map(f=> {\r\n                        return (<Link key={`featured-${f.id}`} to={`/rewer/series?seriesId=${f.id}`}>\r\n                                    <SeriesDiv series={f} />\r\n                                </Link>)\r\n                    })}\r\n                </div>  \r\n        </div>\r\n    )\r\n}\r\nexport default FeaturedSeriesSides;","import { POSTAsynch } from \"./caller\";\r\nimport { ISearchResult } from \"../../common/search\"\r\nexport async function mainSearch(keyword: string, limit: number): Promise<ISearchResult | null>{\r\n    const response = await POSTAsynch(\"/search\", { keyword: keyword, limit: limit});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const searchPath = {\r\n    search: \"/search\",\r\n    autoComplete: \"/auto-complete\"\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\n\r\ninterface IAutoCompleteElement{\r\n    text: string;\r\n    selectedValue: string;\r\n    onClick: (s: string)=>void;\r\n}\r\n\r\nexport const AutoCompleteElement: React.FC<IAutoCompleteElement> = ({text, onClick, selectedValue}: IAutoCompleteElement)=> {\r\n    const [mainClass, setMainClass] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(selectedValue === text){\r\n            setMainClass(\"auto-selected\");\r\n        } else {\r\n            setMainClass(\"\");\r\n        }\r\n    }, [selectedValue])\r\n    return (\r\n        <div className={mainClass} onClick={()=>{ onClick(text) }}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteElement;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useEffect, Fragment, useRef} from 'react'\r\nimport AutoCompleteElement from './AutoCompleteElement';\r\n\r\ninterface IAutoCompleteInput{\r\n    value: string;\r\n    setValue: (s: string)=>void;\r\n    stringList: string[];\r\n    onSubmit: (selectedValue: string)=>void;\r\n    requestAutoComplete: (s: string)=>any;\r\n}\r\n\r\nexport const AutoCompleteInput: React.FC<IAutoCompleteInput> = ({value, setValue, stringList, onSubmit, requestAutoComplete}: IAutoCompleteInput)=> {\r\n    const [showAutoComplete, setShowAutoComplete] = useState(false);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const wrapperRef = useRef<HTMLDivElement>(); //to handle click outside of the component\r\n\r\n    useEffect(()=>{\r\n        addClickListener();\r\n        return ()=>{\r\n            removeClickListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!showAutoComplete) setSelected(\"\");\r\n    }, [showAutoComplete]);\r\n\r\n    const addClickListener = ()=>{\r\n        window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const removeClickListener = ()=>{\r\n        window.removeEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const handleClickOutside = (e)=>{\r\n        if(wrapperRef.current != null && !wrapperRef.current.contains(e.target)){\r\n            setShowAutoComplete(false);\r\n        }\r\n    }\r\n\r\n    const onDivKeyDown = (e)=>{ //it has to be working with keystrokes, since a regular useEffect(,[keyword]) would update too frequently\r\n        if(e.key === \"Enter\"){\r\n            if(showAutoComplete) {\r\n                if(selected !== \"\") {\r\n                    onSubmit(selected);\r\n                    setValue(selected);\r\n                } else {\r\n                    onSubmit(value);\r\n                }\r\n            } else {\r\n                onSubmit(value);\r\n            }\r\n            setShowAutoComplete(false);\r\n        }\r\n        if(e.keyCode === 38){ //up\r\n            if(showAutoComplete && stringList.length > 0) handleUpArrow();\r\n        }\r\n        if(e.keyCode === 40){ //down\r\n            if(showAutoComplete && stringList.length > 0) handleDownArrow();\r\n        }\r\n        if(e.keyCode === 39){ //right\r\n            if(showAutoComplete && stringList.length > 0 && selected !== \"\") {\r\n                setValue(selected);\r\n            }\r\n        }\r\n        if (e.keyCode >= 48 && e.keyCode <= 57) {\r\n            // Number\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n            // Alphabet upper case\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 97 && e.keyCode <= 122) {\r\n            // Alphabet lower case\r\n            autoComplete(e.keyCode);\r\n        } else if(e.keycode === 32 || e.keycode === 8 || e.keyCode === 46){ //space && backspace && delete\r\n            setShowAutoComplete(true);\r\n            setSelected(\"\");\r\n        }\r\n    }\r\n\r\n    const autoComplete = (keyCode: number)=>{\r\n        setShowAutoComplete(true);\r\n        setSelected(\"\");\r\n        if(value.length > 3) requestAutoComplete(value + String.fromCharCode(keyCode).toLowerCase());\r\n    }\r\n\r\n    const handleUpArrow = ()=>{\r\n        if(selected === \"\"){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== 0) setSelected(stringList[currentIndex-1]);\r\n        }\r\n    }\r\n\r\n    const handleDownArrow = ()=>{\r\n        if(selected === \"\" && stringList.length > 0){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== stringList.length-1) setSelected(stringList[currentIndex+1]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapperRef} className=\"autocomplete\" >\r\n            <div className=\"search-grid\">\r\n                <input placeholder=\"Keresés\" className=\"search-input\" autoComplete=\"off\" value={value}  onChange={(e)=>{ setValue(e.target.value); }} onKeyDown={(e)=>{ onDivKeyDown(e); }} onClick={()=>{ setShowAutoComplete(true) }} type=\"text\" list=\"datalist\" />\r\n                <button className=\"search-btn\" onClick={()=>{ onSubmit(value); setShowAutoComplete(false); }}><FontAwesomeIcon icon={faSearch} /></button>\r\n            </div>\r\n            <div className=\"autocomplete-items\">\r\n            {showAutoComplete ? \r\n            (<Fragment>\r\n                {stringList.map(s=>{\r\n                    return <AutoCompleteElement key={`auto-${s}`} text={s} onClick={(s)=>{ setValue(s); setShowAutoComplete(false); onSubmit(s); } } selectedValue={selected} />\r\n                })\r\n             }\r\n            </Fragment> ):\r\n            (<Fragment></Fragment>)}\r\n            </div>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteInput;\r\n","import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport { ESize, useCutter, useImage } from '../../hooks'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./articleStyles.css\"\r\n\r\ninterface IArticleRow{\r\n    article: IArticle;\r\n    cutPos: number;\r\n}\r\n\r\nexport const ArticleRow: React.FC<IArticleRow> = ({article, cutPos}: IArticleRow)=> {\r\n    const [text, isTextCut, cutText] = useCutter(article.text, cutPos);\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/articles\", `${article.id}.jpg`, ESize.Medium);\r\n\r\n    return (\r\n        <div className=\"article-row\">\r\n                <h3>{article.title}</h3>\r\n                <img src={imgsrc} onError={onImgError} alt={`article_${article.title}`} /> \r\n                <p>{text}</p>\r\n                {(isTextCut)?\r\n                (<Fragment><p onClick={()=> { cutText(article.text) }} className=\"show-more\">Show more</p></Fragment>):\r\n                (<Fragment>\r\n                    {(article.text.length > cutPos)?\r\n                    (<Fragment><p className=\"show-more\" onClick={()=>{ cutText(article.text, cutPos) }}>Show less</p></Fragment>):\r\n                    (<Fragment></Fragment>)}\r\n                </Fragment>)\r\n                }\r\n                <p><Link to={`/rewer/user?userName=${article.userName}`}>By <i>{article.userName}</i></Link></p>\r\n                {(article.readMore != null && article.readMore.length > 10)?\r\n                (<a href={article.readMore} target=\"blank\" >Read the full article</a>):\r\n                (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleRow;","import React from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport ArticleRow from './ArticleRow'\r\n\r\ninterface IArticleRowList{\r\n    articles: IArticle[];\r\n    cutPos: number;\r\n}\r\n\r\nexport const ArticleRowList: React.FC<IArticleRowList> = ({articles, cutPos}: IArticleRowList)=> {\r\n    return (\r\n        <div>\r\n            {articles.map(a=>{\r\n                return <ArticleRow key={`article-row-${a.id}`} article={a} cutPos={cutPos} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleRowList;","import React, { useState, useEffect } from 'react'\r\nimport \"../movie/movieStyle.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Score } from '../movie/Score'\r\nimport { IPreviewSeries } from '../../../common/series'\r\nimport { ESize, useCutter, useImage } from '../../hooks'\r\n\r\ninterface ISeriesRow{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesRow: React.FC<ISeriesRow> = ({series}: ISeriesRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/seriesposters\", `${series.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(series.summary, 70);\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(series.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n    }, [series])\r\n    return (\r\n        <div className=\"movie-row-grid\">\r\n            <Link to={`/rewer/series?seriesId=${series.id}`}>\r\n                <img className={imgClass} src={imgsrc} alt={`poster-${series.id}`} title={series.title} onError={onImgError} />\r\n            </Link>\r\n            <div>\r\n                <p className=\"row-title\">{series.title}:</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>        \r\n            <Score value={series.avgScore} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeriesRow;"],"sourceRoot":""}