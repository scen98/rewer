{"version":3,"sources":["components/movie/Score.tsx","dateParser.ts","components/movie/MovieRow.tsx","components/movie/MovieRowList.tsx","components/movie/MovieDiv.tsx","components/movie/MovieSlider.tsx","callers/caller.ts","callers/movieCaller.ts","components/movie/LatestMovies.tsx","components/movie/UpComingMovies.tsx","components/profile/LoginMsg.tsx","hooks.tsx","callers/reviewCaller.ts","components/review/LikeAdder.tsx","components/review/ReviewRow.tsx","components/review/UserReviewRow.tsx","components/review/ReviewRowM.tsx","components/review/FollowedReviews.tsx","components/series/SeriesDiv.tsx","components/series/SeriesSlider.tsx","components/series/SeriesRow.tsx","callers/castCaller.ts","callers/seriesCaller.ts","components/series/LatestSeries.tsx","components/movie/TopRatedSides.tsx","components/cast/SpotlightRow.tsx","components/cast/Spotlight.tsx","components/movie/GenreSelect.tsx","components/movie/GenreSide.tsx","components/SearchSide.tsx","pages/Home.tsx","utils.ts","components/movie/EditMovieDetails.tsx","urlManager.ts","components/artist/ArtistRow.tsx","components/artist/ArtistSelector.tsx","components/cast/CastTypeSelect.tsx","components/cast/EditCastRow.tsx","components/cast/EditCastList.tsx","callers/artistCaller.ts","components/movie/EditCast.tsx","components/movie/GenreAdder.tsx","pages/EditMovie.tsx","callers/authUserCaller.ts","callers/userCaller.ts","components/login/SignUpForm.tsx","components/errorMessenger.ts","components/login/LoginForm.tsx","components/profile/ChangePassword.tsx","components/profile/MyProfile.tsx","components/profile/FollowedUserRow.tsx","components/profile/FollowedUsers.tsx","components/profile/FollowingUsers.tsx","pages/Profile.tsx","components/header/HeaderItem.tsx","components/header/Header.tsx","components/artist/EditDetails.tsx","pages/EditArtist.tsx","components/cast/CastRow.tsx","components/cast/CastList.tsx","components/movie/FeaturedSides.tsx","components/movie/MainScore.tsx","components/movie/MovieInfo.tsx","components/review/ReviewList.tsx","components/review/ReviewOrderBySelect.tsx","components/review/MovieReviewFeed.tsx","components/review/AddedReview.tsx","components/movie/ScoreAdder.tsx","components/review/PostReview.tsx","components/review/MyReview.tsx","pages/Movie.tsx","components/artist/StarInfo.tsx","components/cast/ArtistCastRow.tsx","components/cast/ArtistCastList.tsx","components/cast/ArtistSeriesCastRow.tsx","components/cast/ArtistSeriesCastList.tsx","components/series/FeaturedSeriesSides.tsx","pages/Star.tsx","callers/followCaller.ts","components/profile/PermissionSelect.tsx","components/profile/UserInfo.tsx","components/profile/User.tsx","pages/FollowsPage.tsx","callers/seasonCaller.ts","components/series/EditSeasonRow.tsx","components/series/EditEpisodeRow.tsx","components/series/EpisodeListEditor.tsx","components/series/EditSeasons.tsx","components/series/EditSeriesDetails.tsx","pages/EditSeries.tsx","components/cast/SeriesCastRow.tsx","components/series/SideEpisodeRow.tsx","components/series/EpisodeSelector.tsx","components/series/SeasonSelect.tsx","components/series/SeriesInfo.tsx","pages/Series.tsx","callers/search.ts","components/artist/StandardArtistRow.tsx","components/artist/ArtistRowList.tsx","components/profile/UserRow.tsx","components/profile/UserRowList.tsx","components/series/SeriesRowList.tsx","components/Search.tsx","pages/SearchPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Score","value","useState","scoreClass","setScoreClass","useEffect","className","Math","round","getYear","date","Date","getFullYear","normalFormat","d","getDate","monthNames","getMonth","parseForInput","month","day","toString","MovieRow","movie","id","imgsrc","setImgsrc","imgClass","setImgClass","summary","setSummary","avgScore","window","screen","width","length","substring","to","src","alt","title","onError","releaseDate","MovieRowList","movies","map","m","key","MovieDiv","scoreLine","useRef","current","style","display","ref","MovieSlider","onHover","nextBtn","prevBtn","slice","getMovies","setMovies","pageIndex","setPageIndex","visibility","onClick","ceil","old","icon","faBackward","onMouseEnter","faForward","GETAsynch","url","a","fetch","method","cache","credentials","response","GETAsynchNode","ok","text","console","log","status","UploadFile","data","body","POSTAsynch","mode","headers","redirect","referrerPolicy","JSON","stringify","IsSuccessful","json","parse","msg","isResponse200","err","tryParse","object","getNewId","newId","parseId","selectDetailedMovie","selectLatestMovies","limit","offset","selectLatestMoviesByGenre","genreId","selectMoviesByScore","min","getGenres","insertMovie","updateMovie","uploadPoster","file","insertMovieGenre","movieGenre","deleteMovieGenre","selectUpcomingMovies","compareMovieGenresByName","genre1","genre2","genreName","localeCompare","LatestMovies","onMovieUpdate","casts","genres","selectedMovie","setSelectedMovie","latests","requestMovies","allCasts","getAllCasts","filter","c","castTypeId","artistId","artistName","UpComingMovies","upcoming","LoginMsg","message","useAsyncReference","forceRender","newState","Object","is","s","useBinder","get","set","event","target","name","onEnter","callback","EReviewOrderBy","selectMyReview","movieId","userName","localStorage","getItem","selectReviewsByMovie","request","selectFollowedReviews","selectReviewsByUser","orderby","insertReview","review","deleteReview","updateReview","insertReviewLike","reviewLike","updateReviewLike","LikeAdder","popIndex","getReviewLike","setReviewLike","getPopIndex","setPopIndex","thumbsUpClass","setThumbsUpClass","thumbsDownClass","setThumbsDownClass","likeBtn","dislikeBtn","updatePopIndex","newReviewLike","difference","oldPopIndex","insertLike","toInsert","alert","updateLike","toUpdate","faThumbsUp","faThumbsDown","ReviewRow","getReview","reviewText","setReviewText","briefText","showLess","nickName","score","myLike","UserReviewRow","seriesId","movieTitle","seriesTitle","ReviewRowM","titleClass","setTitleClass","FollowedReviews","reviews","setReviews","errorMsg","setErrorMsg","addWindowListener","addEventListener","windowListener","removeWindowListener","removeEventListener","innerHeight","scrollY","document","offsetHeight","showMore","followedReviews","setTimeout","tryRequestReviews","requestReviews","r","SeriesDiv","series","SeriesSlider","getSeries","setSeries","SeriesRow","lastEpisodeId","lastEpisodeTitle","getCastTypes","insertCast","cast","insertCasts","updateCast","deleteCast","compareCastType","cast1","cast2","insertSeries","updateSeries","uploadSeriesPoster","selectDetailedSeries","sort","orderCasts","seasons","episodes","compareEpisodes","selectLatestPreviewSeries","insertSeriesGenre","seriesGenre","deleteSeriesGenre","getEpisodeCount","sum","forEach","season","getFirstEpisodeDate","getSeriesCast","seriesCast","setSeriesCastFromSeason","setSeriesCastFromEpisode","episode","setSeriesCastFromCast","sc","find","updatedNames","characterNames","push","episodeCount","handleExistingSeriesCast","orderSeasonCast","episode1","episode2","LatestSeries","selectedSeries","setSelectedSeries","latestSeries","TopRatedSides","topRateds","setTopRateds","tops","getTopRateds","t","SpotlightRow","imgSrc","setImgSrc","movieName","Spotlight","mixedCasts","setMixedCasts","fullCasts","mixedLength","i","selected","floor","random","generateMixedCasts","GenreSelect","setSelectedGenre","selectedGenre","any","setGenres","onChange","e","g","parseInt","GenreSide","allGenres","requestGenres","SearchSide","keyword","setKeyword","history","useHistory","search","onKeyDown","placeholder","Home","latestCasts","setLatestsCasts","replacedList","array","oldItem","newItem","item","resizeImageFn","maxWidth","minWidth","quality","Compress","require","compress","size","maxHeight","resize","resizedImage","img","base64str","imgExt","ext","resizedFiile","convertBase64ToFile","EditMovieDetails","movieBinder","posterInput","setMovie","posterSource","setPosterSource","formData","FormData","files","resizedFile","append","getTime","type","runtime","rows","accept","getParameter","queryString","location","urlParams","URLSearchParams","decodeURIComponent","changeParam","newParam","parameter","href","urlparts","split","urlBase","shift","join","prefix","encodeURIComponent","pars","lastIndexOf","splice","pushState","removeParam","addParam","ArtistRow","artist","selectedArtist","divRef","birthPlace","birthDate","ArtistSelector","artistList","onSelectionChanged","undefined","setSelectedArtist","CastTypeSelect","typeList","updateValue","initialValue","select","EditCastRow","castTypes","onDelete","onUpdate","mainClass","setMainClass","updateState","useAsyncBinder","getCast","setCast","castBinder","deleteRow","saveChanges","saved","setCastTypeId","newTypeId","setUnsaved","includes","replace","EditCastList","castList","setCastList","selectedId","selectArtistsByKeyword","selectDetailedArtist","insertArtist","updateArtist","uploadPortrait","EditCast","setEpisodes","setCastTypes","artists","setArtists","bindKeyword","newCast","setNewCast","bindNewCast","Promise","all","requestCastTypes","requestArtists","insertCastRequest","setCasts","newCasts","newEpisodes","fetchRequests","newValue","seasonId","GenreAdder","onAdd","genreList","setGenreList","faTimes","EditMovie","bindMovie","mainMsg","setMainMsg","getHours","getMinutes","genre","newMovieGenre","getMovie","addGenre","removeGenre","login","authUser","autoLogin","caller","clear","loggedInUser","saveUserToStorage","setItem","permission","session","isLoggedIn","defaultResponse","isLoggedin","setNewSession","hasOwnProperty","logOut","updatePassword","user","newPassword","handleLogin","newSession","insertAuthUser","updatePermission","doesExist","selectDetailedUser","uploadAvatar","updateUserInfo","detailedUser","selectFollowers","selectFollowedUsers","SignUpForm","userTakenMsg","setUserTakenMsg","setMsg","password","newUser","bindNewUser","pw2","checkCommand","doesExistResponse","exists","sendSignUpRequest","ErrorMessenger","messages","defaultError","this","statusCode","result","LoginForm","loginMsg","setLoginMsg","signUpLine","setSignUp","signUpForm","checked","loginResponse","errorHandler","getError","action","ChangePassword","oldPw","setOldPw","newPw1","setNewPw1","newPw2","setNewPw2","updatePasswordCommand","clearInput","MyProfile","about","followerCount","myProfile","setMyProfile","bindMyProfile","nickNameMsg","setNickNameMsg","uploadMsg","setUploadMsg","avatarSource","setAvatarSource","imageFile","reload","updateUserInfoCommand","profile","getMyInfo","FollowedUserRow","FollowedUsers","users","setUsers","followed","getFollowedUsers","u","FollowingUsers","following","getFollowingUsers","Login","content","HeaderItem","Header","sticky","headerRef","userIcon","setUserIcon","onscroll","offsetTop","pageYOffset","classList","add","remove","onclick","faUser","faSignInAlt","contains","scrollTop","documentElement","faBars","EditDetails","bindArtist","setArtist","imageInput","portraitSource","setPortraitSource","deathPlace","deathDate","bio","EditArtist","getArtist","CastRow","CastList","FeaturedSides","featuredMovies","setFeaturedMovies","index","getLatestFeatures","f","MainScore","MovieInfo","ReviewList","ReviewOrderBySelect","defaultValue","MovieReviewFeed","orderBy","setOrderBy","reviewHeader","setReviewHeader","getReviews","requestedReviews","getMoreReviews","AddedReview","onEdit","ScoreAdder","startValue","setScore","setValue","oldValue","faPlus","faMinus","PostReview","onPost","myReview","setMyReview","bindMyReview","MyReview","postReview","reviewContent","setReviewContent","startEditing","saveReview","removeReview","toLocaleDateString","getMyReview","Movie","actors","setActors","requestMovie","StarInfo","died","setDied","deathInfo","setBio","briefBio","showAll","showBrief","ArtistCastRow","castName","setCastName","castTypeName","setNonActor","movieDate","ArtistCastList","ArtistSeriesCastRow","firstEpisodeDate","ArtistSeriesCastList","FeaturedSeriesSides","featueredSeries","setFeaturedSeries","featured","requestFeaturedSeries","Star","movieCasts","seriesCasts","detailedArtist","requestArtist","insertFollow","follow","deleteFollow","PermissionSelect","UserInfo","getUser","setUser","followBtn","setFollowBtn","isFollowed","follower","setFollow","newPermission","level","followUser","unFollowUser","toFollow","updateUserPermission","User","userInfo","getUserInfo","userReviews","FollowsPage","insertSeason","deleteSeason","EditSeasonRow","onSelected","order","releaseYear","EditEpisodeRow","onSelect","setClassName","EpisodeListEditor","selectedEpisode","setSelectedEpisode","bindEpisode","newRunTime","newDate","isNaN","newEpisode","episodeId","deleteEpisode","faPlusSquare","EditSeasons","setSeasons","setReleaseYear","selectedSeason","setSelectedSeason","newSeason","lastId","eps","EditSeriesDetaills","bindSeries","EditSeries","newSeriesGenre","newSeasons","SeriesCastRow","SideEpisodeRow","EpisodeSelector","onSelectedChange","SeasonSelect","SeriesInfo","setAvgScore","reviewedEpisodeCount","getAvgSeriesScore","epCount","getAvgRuntime","getSeasonCount","Series","setSeriesCast","innerWidth","mainSearch","StandardArtistRow","ArtistRowList","UserRow","setAbout","UserRowList","SeriesRowList","Search","results","setResults","keywordInput","searchBtnCommand","fetchResults","SearchPage","App","Helmet","from","exact","path","component","render","props","Profile","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.59cd69fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const Score: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"score high\");\r\n        } else if(value > 3){\r\n            setScoreClass(\"score\");\r\n        } else if(value > 1) {\r\n            setScoreClass(\"score\");\r\n        } else {\r\n            setScoreClass(\"score unset\");\r\n        }\r\n    }, [value])\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{Math.round(value*10) / 10}</p>\r\n        </div>\r\n    )\r\n}\r\n","export function parseDateHun(date: Date): string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}. ${parseDatehhdd(date)}`;\r\n}\r\n\r\nexport function parseDateYYYYMMDD(date: Date):string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}`;\r\n}\r\n\r\nexport function parseDatehhdd(date: Date):string{\r\n    if(date.getMinutes() < 10){\r\n        return `${date.getHours()}:0${date.getMinutes()}`;\r\n    } else {\r\n        return `${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n}\r\n\r\nexport function getYear(date: string){\r\n    return new Date(date).getFullYear();\r\n}\r\n\r\nexport function getMonth(date: string){\r\n    return monthNames[new Date(date).getMonth()]; \r\n}\r\n\r\nexport function getDay(date: string){\r\n    return new Date(date).getDate();\r\n}\r\n\r\nexport function normalFormat(date: string): string{\r\n    let d = new Date(date);\r\n    return `${d.getDate()} ${monthNames[d.getMonth()]} ${d.getFullYear()}`;\r\n}\r\n\r\nexport function parseForInput(date: Date): string{\r\n    let month: string;\r\n    let day: string;\r\n    if(date.getMonth() < 9){\r\n        month = `0${date.getMonth()+1}`;\r\n    } else {\r\n        month = (date.getMonth()+1).toString();\r\n    }\r\n    if(date.getDate() < 10){\r\n        day = `0${date.getDate()}`;\r\n    } else {\r\n        day = date.getDate().toString();\r\n    }\r\n\r\n    return `${date.getFullYear()}-${month}-${day}`;\r\n}\r\n\r\nexport let monthNames = [\"Janury\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from './Score';\r\nimport { normalFormat } from '../../dateParser';\r\nimport { IMovie } from '../../../common/movie';\r\n\r\ninterface IMovieRow{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieRow: React.FC<IMovieRow> = ({movie}: IMovieRow) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/posters/${movie.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary, setSummary] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(movie.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n        if(window.screen.width > 600){\r\n            if(movie.summary.length > 120){\r\n                setSummary(`${movie.summary.substring(0, 120)}...`);\r\n            } else {\r\n                setSummary(movie.summary);\r\n            }\r\n        }\r\n    }, [movie]);\r\n    return (\r\n        <Link className=\"movie-row-grid\" to={`/movie?movieId=${movie.id}`}>\r\n            <img className={imgClass} src={imgsrc} alt={`poster-${movie.id}`} title={movie.title} onError={()=>{ setImgsrc(`/rewer/uploads/posters/0.jpg`) }} />\r\n            <div>\r\n                <p className=\"row-title\">{movie.title}</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>\r\n            {(new Date(movie.releaseDate) >= new Date()) ? \r\n            (<Score value={movie.avgScore} />) :\r\n            (<p className=\"movie-row-date\">{normalFormat(movie.releaseDate.toString())}</p>)\r\n            }\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IMovie } from '../../../common/movie'\r\nimport { MovieRow } from './MovieRow'\r\n\r\ninterface IMovieRowList{\r\n    movies: IMovie[];\r\n}\r\n\r\nexport const MovieRowList: React.FC<IMovieRowList> = ({movies}: IMovieRowList) => {\r\n    return (\r\n        <div>\r\n            {movies.map(m=>{\r\n                return <MovieRow key={`movie-row-${m.id}`} movie={m} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, setImgsrc] = useState(\"\");\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n        setImgsrc(`/rewer/uploads/posters/${movie.id}.jpg`);\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/posters/0.jpg`)}} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./movieStyle.css\";\r\nimport MovieDiv from './MovieDiv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\nimport { IDetailedMovie } from '../../../common/movie';\r\n\r\ninterface IMovieSlider{\r\n    movies: IDetailedMovie[];\r\n    onHover: (movie: IDetailedMovie) => void;\r\n}\r\n\r\nexport const MovieSlider: React.FC<IMovieSlider> = ({movies, onHover}: IMovieSlider) => {\r\n    const nextBtn = useRef<HTMLButtonElement>();\r\n    const prevBtn = useRef<HTMLButtonElement>();\r\n    const [getMovies, setMovies] = useState(movies.slice(0, 3));\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(0, 3));\r\n        if(movies.length <= 3){\r\n            nextBtn.current.style.visibility = \"hidden\";\r\n            prevBtn.current.style.visibility = \"hidden\";\r\n        } else {\r\n            nextBtn.current.style.visibility = \"visible\";\r\n            prevBtn.current.style.visibility = \"visible\";\r\n        }\r\n    }, [movies]);\r\n\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(pageIndex * 3, (pageIndex * 3)+3));\r\n    }, [pageIndex])\r\n\r\n    function next(){\r\n        if((pageIndex+1) * 3 >= movies.length){\r\n            setPageIndex(0);\r\n        } else {\r\n            setPageIndex(old => { return old + 1} );\r\n        }\r\n    }\r\n\r\n    function prev(){\r\n        if((pageIndex-1) < 0 ){\r\n            setPageIndex(Math.ceil(movies.length / 3)-1);\r\n        } else {\r\n            setPageIndex(old => { return old - 1} );\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className=\"slide-grid\">\r\n            <button ref={nextBtn} className=\"slide-btn\" onClick={prev}><FontAwesomeIcon icon={faBackward} /></button>\r\n            <div className=\"movie-grid\">\r\n                {getMovies.map(m=>{\r\n                    return <div onMouseEnter={()=>{onHover(m)}} key={`latest-${m.id}`} ><Link to={`/movie?movieId=${m.id}`} className=\"movie-anchor\" ><MovieDiv movie={m} /></Link></div>\r\n                })}\r\n            </div>\r\n            <button ref={prevBtn} className=\"slide-btn\" onClick={next}><FontAwesomeIcon icon={faForward} /></button> \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieSlider;","//const def: string = \"/rewer/php/requests\";\r\nexport async function GETAsynch(url: string): Promise<Response>{\r\n    const response = await fetch(url, {\r\n        method: \"GET\",\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n    });\r\n    return response;\r\n}\r\n\r\nexport async function GETAsynchNode(url: string): Promise<string>{\r\n    const response = await fetch(url, {\r\n        method: \"GET\",\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n    });\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        console.log(response);\r\n        return response.status.toString();\r\n    }\r\n}\r\n\r\nexport async function UploadFile(url, data: FormData): Promise<Response>{\r\n    const response = await fetch(url, {\r\n        method: \"POST\",\r\n        cache: 'no-cache',\r\n        body: data\r\n    });\r\n    if(response.ok){\r\n        return response;\r\n    } else {\r\n        console.log(response);\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function POSTAsynch(url: string, data: any){\r\n    // Default options are marked with *\r\n    const response = await fetch(url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    if(response.ok){\r\n        return response;\r\n    } else {\r\n        console.log(response);\r\n        return response;\r\n    }\r\n}\r\n\r\nexport function IsSuccessful(json: string){\r\n    if(JSON.parse(json).msg === \"success\"){\r\n        return true;\r\n    }\r\n    console.log(json);\r\n    return false;\r\n}\r\n\r\nexport function isResponse200(response: string){\r\n    try{\r\n        if(JSON.parse(response).response === 200) return true;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n}\r\n\r\nexport function tryParse(response: string){\r\n    try{\r\n        return JSON.parse(response).object;\r\n    }catch(err) {\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNewId(object: any, response: string){\r\n    try{\r\n        object.id = JSON.parse(response).newId;\r\n        if(object.id != null) return true;\r\n        console.log(response);\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function parseId(response: string): number{\r\n    try{\r\n        return JSON.parse(response).newId;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return null;\r\n}\r\n","import { IGenre, IMovieGenre, ISeriesGenre } from \"../../common/genre\";\r\nimport { IDetailedMovie, IMovie } from \"../../common/movie\";\r\nimport { POSTAsynch, GETAsynch, UploadFile } from \"../callers/caller\";\r\n\r\nexport async function selectDetailedMovie(id: number): Promise<IDetailedMovie | null>{\r\n    const response = await POSTAsynch(\"/movie/select_detailed_movie\", { id: id});\r\n    if(response.status !== 200){\r\n        return null;\r\n    }\r\n    return await response.json();\r\n}\r\n\r\nexport async function selectLatestMovies(limit: number, offset: number): Promise<IDetailedMovie[] | null>{\r\n    const response = await POSTAsynch(\"/movie/select_latest_movies\", {limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function selectLatestMoviesByGenre(genreId: number, limit: number, offset: number): Promise<IDetailedMovie[] | null>{\r\n    const response = await POSTAsynch(\"/movie/select_latest_movies_by_genre\", { genreId: genreId, limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function selectMoviesByScore(min: number, limit: number, offset: number): Promise<IDetailedMovie[] | null>{\r\n    const response = await POSTAsynch(\"/movie/select_movies_by_score\", { min: min, limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function getGenres(): Promise<IGenre[] | null>{\r\n    const response = await GETAsynch(\"/genre/select_genres\");\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertMovie(movie: IMovie): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/movie/insert_movie\", movie);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function updateMovie(movie: IMovie): Promise<boolean>{\r\n    const reponse = await await POSTAsynch(\"/movie/update_movie\", movie);\r\n    if(reponse.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function uploadPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/movie/upload_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function insertMovieGenre(movieGenre: IMovieGenre): Promise<number | null >{\r\n    const response = await POSTAsynch(\"/genre/insert_movie_genre\", movieGenre);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteMovieGenre(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/genre/delete_movie_genre\", { id: id });\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function selectUpcomingMovies(limit: number, offset: number): Promise<IDetailedMovie[] | null>{\r\n    const response = await POSTAsynch(\"/movie/select_upcoming_movies\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function compareGenresByName(genre1: IGenre, genre2: IGenre){\r\n    return genre1.name.localeCompare(genre2.name);\r\n}\r\n\r\nexport function compareMovieGenresByName(genre1: IMovieGenre | ISeriesGenre, genre2: IMovieGenre | ISeriesGenre){\r\n    return genre1.genreName.localeCompare(genre2.genreName);\r\n}","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { MovieRowList } from './MovieRowList';\r\nimport MovieSlider from './MovieSlider'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./movieStyle.css\"\r\nimport { selectLatestMovies } from '../../callers/movieCaller';\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { ICast } from '../../../common/cast';\r\n\r\ninterface ILatestMovies{\r\n    onMovieUpdate?: (movies: ICast[]) => void;\r\n}\r\n\r\nexport const LatestMovies: React.FC<ILatestMovies> = ({onMovieUpdate}: ILatestMovies) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState({id: 0, title: \"\", summary: \"\", casts: [], genres: [], releaseDate: \"\"});\r\n    useEffect(()=>{\r\n        requestMovies();\r\n    }, []);\r\n    async function requestMovies(){\r\n        let latests = await selectLatestMovies(9, 0);\r\n        if(latests){\r\n            setMovies(latests);\r\n            setSelectedMovie(latests[0]);\r\n        } else {\r\n            //TODO goto 404\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(onMovieUpdate){    \r\n            onMovieUpdate(getAllCasts());\r\n        }\r\n    }, [movies]);\r\n\r\n\r\n    function getAllCasts(){\r\n        let allCasts: ICast[] = [];\r\n        for(let movie of movies) {\r\n            allCasts = [...allCasts, ...movie.casts];\r\n        }\r\n        return allCasts;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            (<Fragment>\r\n\r\n                <div className=\"highlight-grid\">\r\n                    <MovieSlider movies={movies} onHover={(movie: IDetailedMovie)=> { setSelectedMovie(movie) }} />\r\n                    <div className=\"highlighted-movie fade\">\r\n                        <h3>{selectedMovie.title}</h3>\r\n                        <p className=\"highlight-text\">{selectedMovie.summary}</p>\r\n                        <p>Directed by:</p>\r\n                        <ul>\r\n                            {selectedMovie.casts.filter(c=> c.castTypeId === 1).map(d=>{\r\n                                return <li key={`latest-${d.artistId}`}><Link to={`/star?artistId=${d.artistId}`}>{d.artistName}</Link></li>\r\n                            })}\r\n                        </ul>\r\n                        <p>Starring: </p>\r\n                        <ul>\r\n                            {selectedMovie.casts.filter(c=> c.castTypeId > 3).slice(0, 3).map(d=>{\r\n                                return <li key={`latest-${d.artistId}`}><Link to={`/star?artistId=${d.artistId}`}>{d.artistName}</Link></li>\r\n                            })}\r\n                        </ul>\r\n                        <Link to={`/movie?movieId=${selectedMovie.id}`}>Read more</Link>\r\n                    </div>\r\n                </div> \r\n            </Fragment>) :\r\n            (<MovieRowList movies={movies} />)\r\n            }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatestMovies;","import React, { useState, useEffect } from 'react'\r\nimport { MovieRowList } from './MovieRowList';\r\nimport { MovieSlider } from './MovieSlider'\r\nimport { Link } from \"react-router-dom\"\r\nimport { normalFormat } from '../../dateParser';\r\nimport { selectUpcomingMovies } from '../../callers/movieCaller';\r\nimport { IDetailedMovie } from '../../../common/movie';\r\n\r\nexport default function UpComingMovies() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState({id: 0, title: \"\", summary: \"\", casts: [], genres: [], releaseDate: \"\"});\r\n    useEffect(()=>{\r\n        requestMovies();\r\n    }, []);\r\n    async function requestMovies(){\r\n        let upcoming = await selectUpcomingMovies(3, 0);\r\n        if(upcoming){\r\n            setMovies(upcoming);\r\n            setSelectedMovie(upcoming[0]);\r\n        } else {\r\n            //TODO\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            \r\n            (<div className=\"highlight-grid\">\r\n                <MovieSlider movies={movies} onHover={(movie: IDetailedMovie)=> { setSelectedMovie(movie) }} />\r\n                <div className=\"highlighted-movie fade\">\r\n                    <h3>{selectedMovie.title}</h3>\r\n                    <p className=\"highlight-text\">{selectedMovie.summary}</p>\r\n                    <p>Directed by:</p>\r\n                    <ul>\r\n                        {selectedMovie.casts.filter(c=> c.castTypeId === 1).map(d=>{\r\n                            return <li key={`upcoming-${d.artistId}`}><Link to={`/star?artistId=${d.artistId}`}>{d.artistName}</Link></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Starring: </p>\r\n                    <ul>\r\n                        {selectedMovie.casts.filter(c=> c.castTypeId > 3).slice(0, 3).map(d=>{\r\n                            return <li key={`upcoming-${d.artistId}`}><Link to={`/star?artistId=${d.artistId}`}>{d.artistName}</Link></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Coming: <b>{normalFormat(selectedMovie.releaseDate)}</b></p>\r\n                    <Link to={`/movie?movieId=${selectedMovie.id}`}>Read more</Link>\r\n                </div>\r\n            </div> \r\n            \r\n            ) :\r\n            (<MovieRowList movies={movies} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface ILoginMsg{\r\n    message: string;\r\n}\r\n\r\nexport const LoginMsg: React.FC<ILoginMsg> = ({message}: ILoginMsg) => {\r\n    return (\r\n    <p>You must be <Link to=\"/profile\">logged in</Link> {message}</p>\r\n    )\r\n}\r\n\r\nexport default LoginMsg;","import { useState, useRef, SyntheticEvent } from \"react\";\r\nexport function useAsyncReference(value: any): [React.MutableRefObject<any>, (any: any)=>void] {\r\n    const ref:React.MutableRefObject<any> = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    return [ref, updateState];\r\n}\r\n\r\nexport function useBinder(value:any): [any, (any:any)=> void, (event: any)=>void]{\r\n    const [get, set] = useState(value);\r\n    const bind = (event)=>{\r\n        set({...get, [event.target.name]: event.target.value});\r\n    }\r\n    return [get, set, bind];\r\n}\r\n\r\nexport function useAsyncBinder(value: any): [React.MutableRefObject<any>, (any: any)=>void, (event: any)=>void]{\r\n    const ref:React.MutableRefObject<any> = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    const bind = (event) => {\r\n        updateState({...ref.current, [event.target.name]: event.target.value});\r\n    }\r\n    return [ref, updateState, bind];\r\n}\r\n\r\nexport function setBinder(event, object, setter: (any)=> void){\r\n    setter({...object.current, [event.target.name]: event.target.value});\r\n}\r\n\r\nexport function onEnter(event, callback){\r\n    if (event.key === 'Enter') {\r\n        callback();\r\n    }\r\n}","import { IReview, IUserReview, WSelectReviewsByMovieRequest } from \"../../common/review\";\r\nimport { IReviewLike } from \"../../common/reviewLike\";\r\nimport { POSTAsynch } from \"./caller\";\r\nexport enum EReviewOrderBy{\r\n    popIndex = \"popIndex\",\r\n    date = \"date\"\r\n}\r\n\r\nexport async function selectMyReview(movieId: number): Promise<Response>{\r\n    const response = await POSTAsynch(\"/review/select_review_by_user_and_movie\", {userName: localStorage.getItem(\"userName\"), movieId: movieId, limit: 1, offset: 0});\r\n    return response;\r\n}\r\n\r\nexport async function selectReviewsByMovie(request: WSelectReviewsByMovieRequest): Promise<IReview[] | null>{\r\n    const response = await POSTAsynch(\"/review/select_reviews_by_movie\", request);\r\n  //  console.log(await response.json())\r\n    if(response.status === 200){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function selectFollowedReviews(limit: number, offset: number): Promise<IReview[] | null>{\r\n    const response = await POSTAsynch(\"/review/select_followed_reviews\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function selectReviewsByUser(userName: string, limit: number, offset: number, orderby: EReviewOrderBy): Promise<IUserReview[] | null>{\r\n    const response = await POSTAsynch(\"/review/select_reviews_by_user\", { userName: userName, limit: limit, offset: offset, orderby: orderby });\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertReview(review: IReview): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/review/insert_review\", review);\r\n    if(response.status === 200){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteReview(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/review/delete_review\", { id: id });\r\n    if(response.status === 200){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function updateReview(review: IReview): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/review/update_review\", review);\r\n    if(response.status === 200){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function insertReviewLike(reviewLike: IReviewLike): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/review/insert_reviewlike\", reviewLike);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function updateReviewLike(reviewLike: IReviewLike): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/review/update_reviewlike\", reviewLike);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return true;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./reviewStyle.css\"\r\nimport { IReviewLike } from '../../../common/reviewLike'\r\nimport { insertReviewLike, updateReviewLike } from '../../callers/reviewCaller'\r\n\r\ninterface ILikeAdder{\r\n    reviewLike: IReviewLike;\r\n    popIndex: number;\r\n    //onUpdate: (newPopIndex: number) => void;\r\n}\r\n\r\nexport const LikeAdder: React.FC<ILikeAdder> = ({reviewLike, popIndex}: ILikeAdder) => {\r\n    const [getReviewLike, setReviewLike] = useState(reviewLike);\r\n    const [getPopIndex, setPopIndex] = useState(popIndex);\r\n    const [thumbsUpClass, setThumbsUpClass] = useState(\"\");\r\n    const [thumbsDownClass, setThumbsDownClass] = useState(\"\");\r\n    const likeBtn = useRef<HTMLDivElement>();\r\n    const dislikeBtn = useRef<HTMLDivElement>();\r\n\r\n    function upVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === 1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        } else { //===-1\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            likeBtn.current.style.display = \"none\";\r\n            dislikeBtn.current.style.display = \"none\";\r\n        }\r\n    }, []);\r\n\r\n    function downVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === -1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        } else { //=== 1\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    function updatePopIndex(newReviewLike: IReviewLike){ //has to be called before updating the reviewlike, since it is dependant on the old value\r\n        const difference = newReviewLike.value - getReviewLike.value;\r\n        setPopIndex(oldPopIndex => { return oldPopIndex + difference});\r\n    }\r\n\r\n    async function insertLike(toInsert: IReviewLike){\r\n        let newId = await insertReviewLike(toInsert);\r\n        let newReviewLike = {...getReviewLike, id: newId, value: toInsert.value};\r\n        updatePopIndex(newReviewLike);\r\n        setReviewLike(newReviewLike);\r\n        if(newReviewLike == null || newReviewLike.id < 1){\r\n            alert(\"Server error: could not like/dislike the selected review.\");\r\n        }\r\n    }\r\n\r\n    async function updateLike(toUpdate: IReviewLike){\r\n        setReviewLike(toUpdate);\r\n        updatePopIndex(toUpdate);\r\n        if(!await updateReviewLike(toUpdate)){  \r\n            alert(\"Server error: could not like/dislike the selected review.\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setDefaultColor();\r\n        if(getReviewLike){\r\n            if(getReviewLike.value === 1){\r\n                setThumbsUpClass(\"up-arrow liked\");\r\n            } else if(getReviewLike.value === -1){\r\n                setThumbsDownClass(\"down-arrow disliked\");\r\n            } \r\n        }\r\n        \r\n    }, [getReviewLike]); \r\n\r\n    function setDefaultColor(){\r\n        setThumbsUpClass(\"up-arrow unliked\");\r\n        setThumbsDownClass(\"down-arrow unliked\");\r\n    }\r\n    return (\r\n        <div>\r\n            <span ref={likeBtn} className={thumbsUpClass} ><FontAwesomeIcon onClick={upVote} icon={faThumbsUp} /></span>            \r\n            <span className=\"pop-index\">{getPopIndex}</span>\r\n            <span ref={dislikeBtn} className={thumbsDownClass} ><FontAwesomeIcon onClick={downVote} icon={faThumbsDown} /></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeAdder;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./reviewStyle.css\"\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Score } from '../movie/Score'\r\nimport LikeAdder from './LikeAdder'\r\nimport { IReview } from '../../../common/review'\r\n\r\ninterface IReviewRow{\r\n    review: IReview;\r\n}\r\n\r\nexport const ReviewRow: React.FC<IReviewRow> = ({review}: IReviewRow) => {\r\n    const [getReview, setReview] = useState(review);\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                <Link className=\"nick-name\" to={`/user?userName=${getReview.userName}`}>{getReview.nickName}</Link>\r\n                <p className=\"review-date\">{normalFormat(getReview.date)}</p>\r\n                <Score value={getReview.score} />\r\n            </div>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={getReview.myLike} popIndex={getReview.popIndex} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { ReviewRow } from './ReviewRow'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IUserReview } from '../../../common/review';\r\n\r\ninterface IUserReviewRow{\r\n    review: IUserReview;\r\n}\r\n\r\nexport const UserReviewRow: React.FC<IUserReviewRow> = ({review}: IUserReviewRow)=> {\r\n    const [imgsrc, setImgsrc] = useState(``);\r\n    useEffect(()=>{\r\n        if(review.seriesId != null){\r\n            setImgsrc(`/rewer/uploads/seriesPosters/${review.seriesId}.jpg`);\r\n        } else {\r\n            setImgsrc(`/rewer/uploads/posters/${review.movieId}.jpg`);\r\n        }\r\n    }, [review]); \r\n    \r\n    return (\r\n        <div className=\"followed-review-grid\">\r\n            <div className=\"review-poster-container\">\r\n                \r\n                    {(review.seriesId != null)?\r\n                    (<Fragment><Link  to={`/series?seriesId=${review.seriesId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/seriesPosters/0.jpg`)}} />\r\n                        <p>{review.seriesTitle}</p>\r\n                        </Link>\r\n                        <Link to={`/movie?movieId=${review.movieId}`}><p>{review.movieTitle}</p></Link>\r\n                    </Fragment>\r\n                    ):\r\n                    (<Link to={`/movie?movieId=${review.movieId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/posters/0.jpg`)}} />\r\n                        <p>{review.movieTitle}</p>\r\n                    </Link>)}\r\n            </div>\r\n            <div>\r\n                <ReviewRow review={review} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserReviewRow;","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from '../movie/Score';\r\nimport LikeAdder from './LikeAdder';\r\nimport { normalFormat } from '../../dateParser';\r\nimport \"./reviewStyle.css\";\r\nimport { IUserReview } from '../../../common/review';\r\n\r\ninterface IReviewRowM{\r\n    review: IUserReview;\r\n}\r\n\r\nexport const ReviewRowM: React.FC<IReviewRowM> = ({review}: IReviewRowM)=> {\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    const [titleClass, setTitleClass] = useState(\"movie-title\");\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n        if(review.score > 6){\r\n            setTitleClass(\"movie-title title-high\");\r\n        } else if(review.score > 3){\r\n            setTitleClass(\"movie-title title-medium\");\r\n        } else {\r\n            setTitleClass(\"movie-title title-low\");\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                <Link className=\"nick-name\" to={`/user?userName=${review.userName}`}>{review.nickName}</Link>\r\n                <p className=\"review-date\" >{normalFormat(review.date)}</p>\r\n                <Score value={review.score} />\r\n            </div>\r\n            {(review.seriesId) ?\r\n            (<Fragment>\r\n                <Link className={titleClass} to={`/series?seriesId=${review.seriesId}`}>{review.seriesTitle}:</Link><br/><br/>              \r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n            <Link className={titleClass} to={`/movie?movieId=${review.movieId}`}>{review.movieTitle}</Link>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={review.myLike} popIndex={review.popIndex} />\r\n        </div>\r\n    )\r\n}\r\nexport default ReviewRowM;\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useAsyncReference } from '../../hooks';\r\nimport UserReviewRow from './UserReviewRow';\r\nimport ReviewRowM from './ReviewRowM';\r\nimport LoginMsg from '../profile/LoginMsg';\r\nimport { selectFollowedReviews } from '../../callers/reviewCaller';\r\n\r\nexport default function FollowedReviews() {\r\n    const [reviews, setReviews] = useAsyncReference([]); //for the listeners\r\n    const downloadCount = 10;\r\n    const [errorMsg, setErrorMsg] = useState(<Fragment></Fragment>);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            requestReviews();\r\n        }\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function windowListener(){\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            showMore();\r\n        }\r\n    }\r\n\r\n    async function showMore(){\r\n        removeWindowListener(); //make sure the listener doenst fire again until we downloaded the new reviews\r\n        let followedReviews = await selectFollowedReviews(downloadCount, reviews.current.length);\r\n        if(followedReviews){\r\n            setReviews([...reviews.current, ...followedReviews]);\r\n            if(followedReviews.length === downloadCount){\r\n                addWindowListener();\r\n            }\r\n        } else {\r\n            alert(\"Server error: could not download review data.\");\r\n        }\r\n    }\r\n    \r\n    async function requestReviews(){\r\n        let followedReviews = await selectFollowedReviews(10, 0);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addWindowListener();\r\n            }\r\n        } else {\r\n            if(localStorage.getItem(\"userName\") != null)  setTimeout(tryRequestReviews, 2000);\r\n        }\r\n    }\r\n\r\n    async function tryRequestReviews(){\r\n        let followedReviews = await selectFollowedReviews(downloadCount, 0);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addWindowListener();\r\n            }\r\n        } else {\r\n            setErrorMsg(<LoginMsg message=\"manage your followers.\" />);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {reviews.current.map(r=> {\r\n                return <UserReviewRow key={`followed-${r.id}`} review={r} />\r\n                })}\r\n                \r\n            </Fragment>) : \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {reviews.current.map(r=> {\r\n                return <ReviewRowM key={`followed-${r.id}`} review={r} />\r\n                })}\r\n            </Fragment>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef, useEffect } from 'react'\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport \"../movie/movieStyle.css\";\r\n\r\ninterface ISeriesDiv{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesDiv: React.FC<ISeriesDiv> = ({series}: ISeriesDiv) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/seriesPosters/${series.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [series]);\r\n    \r\n    return (\r\n        <div className=\"movie-container fade\">            \r\n            <img className={imgClass} src={imgsrc} alt={`${series.title}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/seriesPosters/0.jpg`)}} />                \r\n            <p className=\"movie-title\">{series.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(series.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SeriesDiv;","import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../movie/movieStyle.css\"\r\nimport SeriesDiv from './SeriesDiv'\r\nimport { IPreviewSeries } from '../../../common/series'\r\n\r\ninterface ISeriesSlider{ \r\n    series: IPreviewSeries[];\r\n    onHover: (series: IPreviewSeries) => void;\r\n}\r\n\r\nexport const SeriesSlider: React.FC<ISeriesSlider> = ({series, onHover}: ISeriesSlider) => {\r\n    const nextBtn = useRef<HTMLButtonElement>();\r\n    const prevBtn = useRef<HTMLButtonElement>();\r\n    const [getSeries, setSeries] = useState([]);\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    useEffect(()=>{\r\n        setSeries(series.slice(0, 3));\r\n        if(series.length <= 3){\r\n            nextBtn.current.style.visibility = \"hidden\";\r\n            prevBtn.current.style.visibility = \"hidden\";\r\n        } else {\r\n            nextBtn.current.style.visibility = \"visible\";\r\n            prevBtn.current.style.visibility = \"visible\";\r\n        }\r\n    }, [series]);\r\n\r\n    useEffect(()=>{\r\n        setSeries(series.slice(pageIndex * 3, (pageIndex * 3)+3));\r\n    }, [pageIndex])\r\n\r\n    function next(){\r\n        if((pageIndex+1) * 3 >= series.length){\r\n            setPageIndex(0);\r\n        } else {\r\n            setPageIndex(old => { return old + 1} );\r\n        }\r\n    }\r\n\r\n    function prev(){\r\n        if((pageIndex-1) < 0 ){\r\n            setPageIndex(Math.ceil(series.length / 3)-1);\r\n        } else {\r\n            setPageIndex(old => { return old - 1} );\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className=\"slide-grid\">\r\n            <button ref={nextBtn} className=\"slide-btn\" onClick={prev}><FontAwesomeIcon icon={faBackward} /></button>\r\n            <div className=\"movie-grid\">\r\n                {getSeries.map(s=>{\r\n                    return <div key={`series-${s.id}`} onMouseEnter={()=> { onHover(s) }} ><Link className=\"movie-anchor\"  to={`/series?seriesId=${s.id}`}><SeriesDiv series={s} /></Link></div>\r\n                })}\r\n            </div>\r\n            <button ref={prevBtn} className=\"slide-btn\" onClick={next}><FontAwesomeIcon icon={faForward} /></button> \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SeriesSlider;","import React, { useState, useEffect } from 'react'\r\nimport \"../movie/movieStyle.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Score } from '../movie/Score'\r\nimport { IPreviewSeries } from '../../../common/series'\r\n\r\ninterface ISeriesRow{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesRow: React.FC<ISeriesRow> = ({series}: ISeriesRow) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/seriesPosters/${series.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(series.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n    }, [series])\r\n    return (\r\n        <div className=\"movie-row-grid\">\r\n            <Link to={`/series?seriesId=${series.id}`}>\r\n                <img className={imgClass} src={imgsrc} alt={`poster-${series.id}`} title={series.title} onError={()=>{ setImgsrc(`/rewer/uploads/seriesPosters/0.jpg`) }} />\r\n            </Link>\r\n            <div>\r\n                <p className=\"row-title\">{series.title}:</p>\r\n                <p>{series.summary}</p>\r\n                <Link className=\"episode-title\" to={`movie?movieId=${series.lastEpisodeId}`}>{series.lastEpisodeTitle}</Link>\r\n            </div>\r\n            \r\n            <Score value={series.avgScore} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeriesRow;","import { ICast, ICastType, IMovieCast, ISeriesCast } from \"../../common/cast\";\r\nimport { GETAsynch, POSTAsynch } from \"./caller\";\r\n\r\nexport async function getCastTypes(): Promise<ICastType[] | null >{\r\n    const response = await GETAsynch(\"/cast/select_cast_types\");\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertCast(cast: ICast): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/cast/insert_cast\", cast);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertCasts(casts: ICast[]): Promise<ICast[] | null>{\r\n    const response = await POSTAsynch(\"/cast/insert_casts\", { casts: casts });\r\n    if(response.ok){\r\n        return (await response.json());\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function updateCast(cast: ICast): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/cast/update_cast\", cast);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function deleteCast(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/cast/delete_cast\", { id: id});\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;;\r\n}\r\n\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function compareDate(cast1: IMovieCast, cast2: IMovieCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}","import { ICast, ISeriesCast } from \"../../common/cast\";\r\nimport { IMovie } from \"../../common/movie\";\r\nimport { ISeason } from \"../../common/season\";\r\nimport { IDetailedSeries, IPreviewSeries, ISeries, ISeriesGenre } from \"../../common/series\";\r\nimport { POSTAsynch, UploadFile } from \"./caller\";\r\nimport { compareCastType } from \"./castCaller\";\r\nimport { compareMovieGenresByName } from \"./movieCaller\";\r\n\r\nexport async function insertSeries(series: ISeries): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/series/insert_series\", series);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function updateSeries(series: ISeries): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/series/update_series\", series);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function uploadSeriesPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/series/upload_series_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function selectDetailedSeries(id: number): Promise<IDetailedSeries | null>{\r\n    const response = await POSTAsynch(\"/series/select_detailed_series\", { id: id });\r\n\r\n    if(!response.ok){\r\n        return null;\r\n    }\r\n    let series: IDetailedSeries = await response.json();\r\n    series.genres.sort(compareMovieGenresByName);\r\n    orderCasts(series);\r\n    for(let season of series.seasons) {\r\n        season.episodes.sort(compareEpisodes);\r\n    }\r\n    return series;\r\n}\r\n\r\nexport async function selectLatestPreviewSeries(limit: number, offset: number): Promise<IPreviewSeries[] | null >{\r\n    const response = await POSTAsynch(\"/series/select_latest_preview_series\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertSeriesGenre(seriesGenre: ISeriesGenre): Promise<number | null>{\r\n    const response = await POSTAsynch(\"genre/insert_series_genre\", seriesGenre);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteSeriesGenre(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"genre/delete_series_genre\", { id: id});\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getSeasonCount(series: ISeries): number{\r\n    return series.seasons.filter(s=> s.episodes.length > 0).length;\r\n}\r\n\r\nexport function getEpisodeCount(series: ISeries): number{\r\n    let sum: number = 0;\r\n    series.seasons.forEach(season => {\r\n        sum += season.episodes.length;\r\n    });\r\n    return sum;\r\n}\r\n\r\n\r\nexport function getFirstEpisodeDate(series: ISeries): string{\r\n    if(series.seasons.length > 0 && series.seasons[0].episodes.length > 0){\r\n        return series.seasons[0].episodes[0].releaseDate;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getAvgRuntime(series: ISeries): number{\r\n    let epCount: number = getEpisodeCount(series);\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.runtime > 0) sum += episode.runtime;\r\n        }\r\n    }\r\n    return sum / epCount;\r\n}\r\n\r\nexport function getSeriesCast(series: ISeries): ISeriesCast[]{\r\n    let seriesCast: ISeriesCast[] = [];\r\n    for(let season of series.seasons) {\r\n        setSeriesCastFromSeason(season, seriesCast);\r\n    }\r\n    return seriesCast;\r\n}\r\n\r\nfunction compareSeriesCastByEpisodeCount(scast1: ISeriesCast, scast2: ISeriesCast){\r\n    if(scast1.episodeCount > scast2.episodeCount){\r\n        return -1;\r\n    }\r\n    if(scast1.episodeCount < scast2.episodeCount){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function getAvgSeriesScore(series: ISeries){\r\n    let reviewedEpisodeCount: number = 0;\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.avgScore > 0){\r\n                sum = sum + episode.avgScore;\r\n                reviewedEpisodeCount++;\r\n            } \r\n        }\r\n    }\r\n    return sum / reviewedEpisodeCount;\r\n}\r\n\r\nfunction setSeriesCastFromSeason(season: ISeason, seriesCast: ISeriesCast[]){\r\n    for(let episode of season.episodes) {\r\n        setSeriesCastFromEpisode(episode, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromEpisode(episode: IMovie, seriesCast: ISeriesCast[]){\r\n    for(let cast of episode.casts) {\r\n        setSeriesCastFromCast(cast, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromCast(cast: ICast, seriesCast: any[]){\r\n    let sc: ISeriesCast = seriesCast.find(a=> a.artistId === cast.artistId);\r\n    if(sc != null){\r\n        handleExistingSeriesCast(cast, sc);\r\n    } else {\r\n        seriesCast.push({ \r\n            artistId: cast.artistId, \r\n            artistName: cast.artistName, \r\n            episodeCount: 1, \r\n            characterNames: [cast.name], \r\n            castTypeId: cast.castTypeId } );\r\n    }\r\n}\r\n\r\nfunction handleExistingSeriesCast(cast: ICast, sc: any){\r\n     let updatedNames = sc.characterNames;\r\n     if(sc.characterNames.filter(a=> a === cast.name).length === 0){\r\n         updatedNames.push(cast.name);\r\n     }\r\n     sc = {...sc, episodeCount: sc.episodeCount++, characterNames: updatedNames };\r\n}\r\n\r\nfunction orderCasts(series: ISeries){\r\n    for(let season of series.seasons) {\r\n        orderSeasonCast(season);\r\n    }\r\n}\r\n\r\nfunction orderSeasonCast(seasons: ISeason){\r\n    for(let episode of seasons.episodes) {\r\n            episode.casts.sort(compareCastType);\r\n    }\r\n}\r\n\r\nfunction compareEpisodes(episode1: IMovie, episode2: IMovie){\r\n    if(new Date(episode1.releaseDate) > new Date(episode2.releaseDate)){\r\n        return 1;\r\n    }\r\n    if(new Date(episode1.releaseDate) < new Date(episode2.releaseDate)){\r\n        return -1;\r\n    }\r\n    if(episode1.releaseDate === episode2.releaseDate){\r\n        if(episode1.id > episode2.id) return 1;\r\n        if(episode1.id < episode2.id) return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport SeriesSlider from './SeriesSlider';\r\nimport {Link} from \"react-router-dom\"\r\nimport SeriesRow from './SeriesRow';\r\nimport { selectLatestPreviewSeries } from '../../callers/seriesCaller';\r\nimport { IPreviewSeries } from '../../../common/series';\r\n\r\nexport default function LatestSeries() {\r\n    const [series, setSeries] = useState([]);\r\n    const [selectedSeries, setSelectedSeries] = useState({id: 0, title: \"\", summary: \"\", lastEpisodeId: 0, lastEpisodeTitle: \"\"});\r\n    useEffect(()=>{\r\n        getSeries();\r\n    }, []);\r\n    async function getSeries(){\r\n        let latestSeries = await selectLatestPreviewSeries(6, 0);\r\n        if(series){\r\n            setSeries(latestSeries);\r\n            setSelectedSeries(latestSeries[0]);\r\n        } else {\r\n            //TODO\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"highlight-grid\">\r\n                <SeriesSlider series={series} onHover={(s: IPreviewSeries)=> { setSelectedSeries(s) }} />\r\n                <div className=\"highlighted-movie fade\">\r\n                    <h3>{selectedSeries.title}</h3>\r\n                    <p className=\"highlight-text\">{selectedSeries.summary}</p>\r\n                    <p>Last episode: </p>\r\n                    <Link to={`/movie?movieId=${selectedSeries.lastEpisodeId}`}>{selectedSeries.lastEpisodeTitle}</Link><br/><br/>\r\n                    <Link to={`/movie?movieId=${selectedSeries.id}`}>Read more</Link>\r\n                </div>\r\n            </div> ) : \r\n            (<Fragment>{series.map(s=> {\r\n                return <SeriesRow key={`series-row${s.id}`} series={s} />\r\n            })}</Fragment>)}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { selectMoviesByScore } from '../../callers/movieCaller';\r\nimport { MovieRow } from './MovieRow'\r\n\r\nexport default function TopRatedSides() {\r\n    const[topRateds, setTopRateds] = useState([]);\r\n    useEffect(()=>{\r\n        getTopRateds();\r\n    }, []);\r\n\r\n    async function getTopRateds(){\r\n        let tops = await selectMoviesByScore(3, 4, 0);\r\n        if(tops){\r\n            setTopRateds(tops);\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n             <h3 className=\"center-text\">Top Rated</h3>      \r\n                    {topRateds.map(t=>{\r\n                        return <MovieRow key={`top-rated-${t.id}`} movie={{...t, summary: \"\"}} />\r\n                    })} \r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { ICast } from '../../../common/cast';\r\n\r\ninterface ISpotlightRow{\r\n    cast: ICast;\r\n}\r\n\r\nexport const SpotlightRow: React.FC<ISpotlightRow> = ({cast}: ISpotlightRow) => {\r\n    const [imgSrc, setImgSrc] = useState(\"\");\r\n    useEffect(()=>{\r\n        setImgSrc(`/rewer/uploads/portraits/${cast.artistId}.jpg`);\r\n    }, []);\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={imgSrc} onError={()=>{ setImgSrc(`/rewer/uploads/portraits/0.jpg`); }} alt={`star-${cast.artistName}`} />\r\n            <Link to={`/star?artistId=${cast.artistId}`} className=\"line-start\" >{cast.artistName}: </Link>\r\n            {window.screen.width >= 1280 ?\r\n            ( <Link to={`/movie?movieId=${cast.movieId}`} className=\"line-end\" >{cast.movieName}</Link>):\r\n            (<Fragment></Fragment>)}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpotlightRow;","import React, { useState, useEffect } from 'react'\r\nimport { ICast } from '../../../common/cast';\r\nimport SpotlightRow from './SpotlightRow';\r\n\r\ninterface ISpotlight{\r\n    casts: ICast[];\r\n    length: number;\r\n}\r\n\r\nexport const Spotlight: React.FC<ISpotlight> = ({casts, length}: ISpotlight) => {\r\n    const [mixedCasts, setMixedCasts] = useState([]);\r\n\r\n    useEffect(()=>{\r\n         setMixedCasts(generateMixedCasts(casts));\r\n    }, [casts]);\r\n    \r\n    function generateMixedCasts(fullCasts: ICast[]){\r\n        let mixedLength: number;\r\n        if(fullCasts.length < length){\r\n            mixedLength = fullCasts.length;\r\n        } else {\r\n            mixedLength = length;\r\n        }\r\n        let ref = fullCasts.filter(c=> c.castTypeId === 4 || c.castTypeId === 5);\r\n        let mixedCasts: ICast[] = [];\r\n        let i: number;\r\n        let selected: ICast;\r\n        for(i=0; mixedLength > i; i++){\r\n            selected = ref[Math.floor(Math.random()*ref.length)];\r\n            mixedCasts.push(selected);\r\n            ref = ref.filter(c=> c.artistId !== selected.artistId);\r\n        }\r\n        return mixedCasts;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Spotlight</h3>\r\n            {mixedCasts.map(c=>{\r\n                return <SpotlightRow key={`sportlight-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Spotlight;","import React, { useState, useEffect } from 'react'\r\nimport { IGenre } from '../../../common/genre';\r\n\r\ninterface IGenreSelect{\r\n    selectedGenre: IGenre;\r\n    setSelectedGenre: (g: IGenre) => void;\r\n    genres: IGenre[];\r\n    any?: boolean;\r\n}\r\n\r\nexport const GenreSelect: React.FC<IGenreSelect> = ({genres, setSelectedGenre, selectedGenre, any}: IGenreSelect)=> {\r\n    const [getGenres, setGenres] = useState([]);\r\n    useEffect(()=>{\r\n        if(any){\r\n            setGenres([{id: 0, name: \"Any\"}, ...genres]);\r\n        } else {\r\n            setGenres(genres);\r\n        }\r\n    }, [genres]);\r\n    return (\r\n        <select value={selectedGenre.id.toString()} onChange={(e)=> { setSelectedGenre(getGenres.find(g=> g.id === parseInt(e.target.value))) }} >\r\n            {getGenres.map(g=> {\r\n                return <option key={`opt${g.id}`} value={g.id}>{g.name}</option>\r\n            })}\r\n        </select>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { selectLatestMoviesByGenre, getGenres } from \"../../callers/movieCaller\";\r\nimport { GenreSelect } from './GenreSelect';\r\nimport { MovieRowList } from './MovieRowList';\r\n\r\ninterface IGenreSide{\r\n    length: number;\r\n}\r\n\r\nexport const GenreSide: React.FC<IGenreSide> = ({length}: IGenreSide) => {\r\n    const [genres, setGenres] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState({id: 0, name: \"\"});\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        requestGenres();\r\n    }, []);\r\n\r\n    async function requestGenres(){\r\n        let allGenres = await getGenres();\r\n        if(allGenres){\r\n            setGenres(allGenres);\r\n        }\r\n    }\r\n\r\n    async function requestMovies(){\r\n        let movies = await selectLatestMoviesByGenre(selectedGenre.id, length, 0);\r\n        if(movies){\r\n            setMovies(movies);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(genres.length > 0){\r\n            setSelectedGenre(genres[Math.floor(Math.random()*genres.length)]);\r\n        }\r\n    }, [genres]);\r\n\r\n    useEffect(()=>{\r\n        if(selectedGenre.id > 0){\r\n            requestMovies();\r\n        }\r\n    }, [selectedGenre])\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Fresh of \r\n                <GenreSelect selectedGenre={selectedGenre} genres={genres} setSelectedGenre={(g)=> { setSelectedGenre(g) }} />\r\n            </h3>\r\n            <MovieRowList movies={movies.map(m=> { return {...m, summary: \"\"} })} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreSide;","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { onEnter } from '../hooks';\r\n\r\nexport default function SearchSide() {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n    const history = useHistory();\r\n    function search(){\r\n        history.push(`/search?keyword=${keyword}`);\r\n    }\r\n    return (\r\n        <div>\r\n             <input onChange={(e)=> { setKeyword(e.target.value) }} onKeyDown={(e)=> { onEnter(e, search) }} placeholder={\"search\"} />\r\n             <button onClick={search}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport LatestMovies from '../components/movie/LatestMovies';\r\nimport UpComingMovies from '../components/movie/UpComingMovies';\r\nimport LoginMsg from '../components/profile/LoginMsg';\r\nimport FollowedReviews from '../components/review/FollowedReviews';\r\nimport LatestSeries from '../components/series/LatestSeries';\r\nimport \"../main.css\";\r\nimport TopRatedSides from '../components/movie/TopRatedSides';\r\nimport Spotlight from '../components/cast/Spotlight';\r\nimport GenreSide from '../components/movie/GenreSide';\r\nimport SearchSide from '../components/SearchSide';\r\nimport { ICast } from '../../common/cast';\r\n\r\nexport default function Home() {\r\n    const [latestCasts, setLatestsCasts] = useState([]);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ? \r\n            (<div className=\"home-grid\">\r\n            <div className=\"main-item\">\r\n                <h2 className=\"main-title\">In Theatres</h2>\r\n                <LatestMovies onMovieUpdate={(casts: ICast[]) => { setLatestsCasts(casts); }} />\r\n                <h2 className=\"main-title\">Upcoming</h2>\r\n                <UpComingMovies />\r\n                <h2 className=\"main-title\">Shows with new episodes</h2>\r\n                <LatestSeries />\r\n                <h2 className=\"main-title\">Follows</h2>\r\n                {(localStorage.getItem(\"userName\") != null) ? \r\n                (<FollowedReviews />):\r\n                (<LoginMsg message={\"to follow other users.\"} />)\r\n                }\r\n            </div>\r\n            <div className=\"right-item\">\r\n                <div className=\"side-container medium-side\" >\r\n                    <SearchSide />                \r\n                </div>  \r\n                <div className=\"side-container medium-side\" >\r\n                    <TopRatedSides />                 \r\n                </div>  \r\n                <div className=\"side-container medium-side\" >\r\n                    <Spotlight casts={latestCasts} length={5} />                 \r\n                </div>  \r\n                <div className=\"side-container medium-side\" >\r\n                    <GenreSide length={5} />\r\n                </div>  \r\n            </div>\r\n         </div>):\r\n            (<div className=\"main-container\">\r\n            <h2 className=\"main-title\">In Theatres</h2>\r\n            <LatestMovies />\r\n            <h2 className=\"main-title\">Upcoming</h2>\r\n            <UpComingMovies />\r\n            <h2 className=\"main-title\">Shows with new episodes</h2>\r\n            <LatestSeries />\r\n            <h2 className=\"main-title\">Follows</h2>\r\n            {(localStorage.getItem(\"userName\") != null) ? \r\n            (<FollowedReviews />):\r\n            (<LoginMsg message={\"to follow other users.\"} />)\r\n            }\r\n    </div>)}\r\n        </Fragment>\r\n    \r\n    ) \r\n}\r\n","export const itemReplacer = (array, oldItem, newItem) => {\r\n  array.map(item=> item === oldItem? newItem : item);\r\n}\r\n\r\nexport const replacedList = (array, oldItem, newItem) => {\r\n  return array.map(item=> item === oldItem? newItem : item);\r\n}\r\n\r\nexport async function resizeImageFn(file, maxWidth: number, minWidth: number, quality = 1) {\r\n  const Compress = require('compress.js')\r\n  const compress = new Compress()\r\n  const resizedImage = await compress.compress([file], {\r\n    size: 1, // the max size in MB, defaults to 2MB\r\n    quality: quality, // the quality of the image, max is 1,\r\n    maxWidth: maxWidth, // the max width of the output image, defaults to 1920px\r\n    maxHeight: minWidth, // the max height of the output image, defaults to 1920px\r\n    resize: true // defaults to true, set false if you do not want to resize the image width and height\r\n  })\r\n  const img = resizedImage[0];\r\n  const base64str = img.data\r\n  const imgExt = img.ext\r\n  const resizedFiile = Compress.convertBase64ToFile(base64str, imgExt)\r\n  return resizedFiile;\r\n}","import React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport \"./movieStyle.css\";\r\nimport { resizeImageFn } from \"../../utils\";\r\nimport { uploadPoster } from \"../../callers/movieCaller\";\r\nimport { IMovie } from \"../../../common/movie\";\r\nimport { parseForInput } from \"../../dateParser\";\r\n\r\ninterface IEditMovieDetails{\r\n    movie: IMovie;\r\n    setMovie: (movie: IMovie)=>void;\r\n    movieBinder: (e)=>void;\r\n}\r\n\r\nexport const EditMovieDetails: React.FC<IEditMovieDetails> = ({movie, movieBinder, setMovie}: IEditMovieDetails) =>{\r\n    const posterInput = useRef<HTMLInputElement>();\r\n    const [posterSource, setPosterSource] = useState(\"\");\r\n    useEffect(()=>{\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(movie.id > 0){\r\n            setPosterSource(`/rewer/uploads/posters/${movie.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            setPosterSource(`/rewer/uploads/posters/0.jpg?`)\r\n        }\r\n    }, [movie.id])\r\n\r\n    async function savePoster(){\r\n        const formData = new FormData();\r\n        //formData.append(\"imageFile\", posterInput.current.files[0], `${movie.id}.jpg`);\r\n        const resizedFile = await resizeImageFn(posterInput.current.files[0], 400, 600, 0.9);\r\n        formData.append(\"poster\", resizedFile, `${movie.id}.jpg`);\r\n        if(await uploadPoster(formData)){\r\n            setPosterSource(`/rewer/uploads/posters/${movie.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            alert(\"Upload unsuccessful\");\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Fragment>\r\n      <div className=\"detail-grid\">\r\n        <div className=\"span-2\">\r\n            <input value={movie.title} onChange={movieBinder} name=\"title\" type=\"text\" placeholder=\"Title\" className=\"title-input\" /><br/>\r\n            <label>Runtime:</label>\r\n            <input value={movie.runtime} onChange={movieBinder} name=\"runtime\" type=\"text\" /><br/>\r\n            <label>Release date:</label>\r\n            <input value={parseForInput(new Date(movie.releaseDate))} onChange={movieBinder} name=\"releaseDate\" type=\"date\" />\r\n            <textarea value={movie.summary} onChange={movieBinder} name=\"summary\" placeholder=\"Write something about the story...\" rows={20} />\r\n        </div>\r\n        <div>\r\n            <img src={posterSource} onError={()=> { setPosterSource(\"/rewer/uploads/posters/0.jpg\")}} alt=\"Poster\" title=\"Poster\" className=\"edit-poster\"/>\r\n            {(movie.id > 0) ? \r\n            (<Fragment>\r\n                <p>It is recommended to use an image with a standard poster image ratio</p>\r\n                <input ref={posterInput} type=\"file\" accept=\".png,.jpg,.jpeg\" className=\"file-input\" />\r\n                <button onClick={savePoster}>Upload</button>\r\n            </Fragment>):\r\n            (<Fragment>\r\n                <p>Create the movie's page to edit this picture.</p>\r\n            </Fragment>)}\r\n        </div>\r\n      </div>\r\n    </Fragment>)\r\n}\r\n\r\nexport default EditMovieDetails;","import { url } from \"inspector\";\r\n\r\nexport interface UrlParam{\r\n    name: string;\r\n    value : string;\r\n}\r\nexport function getParameter(url: string): string{\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return decodeURIComponent(urlParams.get(url));    \r\n}\r\n\r\nexport function createUrl(url: string, params: UrlParam[]){\r\n    let preparedUrl = url;\r\n    if(params.length > 0){\r\n        preparedUrl = setParams(preparedUrl, params);\r\n    }\r\n    return encodeURI(preparedUrl);\r\n}\r\n\r\nexport function setParams(url: string, params: UrlParam[]){\r\n    url += \"?\";\r\n    for(let param of params) {\r\n        url += `${param.name}=${encodeURIComponent(param.value)}`;\r\n        if(param.name !== params[params.length - 1].name){\r\n            url += \"&\";\r\n        }\r\n    }\r\n    return url;\r\n}\r\n\r\nexport function addParam(newParam: UrlParam){\r\n    const splitUrl = window.location.href.split('?');\r\n    if(splitUrl.length > 1){\r\n        window.history.pushState(\"\", \"\",  `${window.location.href}&${newParam.name}=${newParam.value}`);\r\n    } else {\r\n        window.history.pushState(\"\", \"\",  `${window.location.href}?${newParam.name}=${newParam.value}`);\r\n    }\r\n}\r\n\r\nexport function changeParam(newParam: UrlParam){\r\n    removeParam(newParam.name);\r\n    addParam(newParam);\r\n}\r\n\r\nexport function removeParam(parameter)\r\n{\r\n  var url=document.location.href;\r\n  var urlparts= url.split('?');\r\n\r\n if (urlparts.length>=2)\r\n {\r\n  var urlBase=urlparts.shift(); \r\n  var queryString=urlparts.join(\"?\"); \r\n\r\n  var prefix = encodeURIComponent(parameter)+'=';\r\n  var pars = queryString.split(/[&;]/g);\r\n  for (var i= pars.length; i-->0;)               \r\n      if (pars[i].lastIndexOf(prefix, 0)!==-1)   \r\n          pars.splice(i, 1);\r\n  url = urlBase+'?'+pars.join('&');\r\n  window.history.pushState('',document.title,url); // added this line to push the new url directly to url bar .\r\n}\r\n}","import React, { useRef } from 'react'\r\nimport { IArtist } from '../../../common/artist';\r\nimport { parseDateYYYYMMDD } from '../../dateParser'\r\ninterface IArtistRow{\r\n    artist: IArtist;\r\n    onClick: ()=> void;\r\n    selectedArtist: IArtist;\r\n}\r\n\r\nexport const ArtistRow: React.FC<IArtistRow> = ({artist, onClick, selectedArtist}: IArtistRow) => {\r\n    const divRef = useRef<HTMLDivElement>();\r\n    const select = () =>{\r\n        onClick();\r\n    } \r\n    function setSelection(): string{\r\n        if(selectedArtist == null){\r\n            return \"artist-row\";\r\n        }\r\n        if(selectedArtist.id === artist.id){\r\n            return \"artist-row selected-row\";\r\n        }\r\n        return \"artist-row\";\r\n    }\r\n    return (\r\n        <div ref={divRef} onClick={select} className={setSelection()}>\r\n                <img src={`/rewer/uploads/portraits/${artist.id}.jpg`} alt={\"NOT SET\"} />\r\n                <p>{artist.name}</p>\r\n                <p title={artist.birthPlace}>{parseDateYYYYMMDD(new Date(artist.birthDate))}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistRow;\r\n","import React from 'react'\r\nimport { IArtist } from '../../../common/artist'\r\nimport { useAsyncReference } from '../../hooks'\r\nimport ArtistRow from './ArtistRow'\r\nimport \"./artistStyle.css\"\r\n\r\ninterface IArtistSelector{\r\n    artistList: IArtist[];\r\n    onSelectionChanged: (selectedArtist: IArtist)=> void;\r\n}\r\n\r\nexport const ArtistSelector: React.FC<IArtistSelector> = ({artistList, onSelectionChanged}: IArtistSelector)=>{\r\n    const [selectedArtist, setSelectedArtist] = useAsyncReference(undefined);\r\n    function selectArtist(artist: IArtist){\r\n        setSelectedArtist(artist);\r\n        onSelectionChanged(selectedArtist.current);\r\n    }\r\n    return (\r\n        <div>\r\n            {artistList.map(a=> {\r\n                return <ArtistRow key={`artist-row-${a.id}`} selectedArtist={selectedArtist.current} artist={a} onClick={()=>{ selectArtist(a); }} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ArtistSelector;","import React, { useEffect, useRef } from 'react'\r\nimport { ICastType } from '../../../common/cast';\r\n\r\ninterface ICastTypeSelect{\r\n    typeList: ICastType[];\r\n    updateValue: (selectedValue: string)=>void;\r\n    initialValue?: string;\r\n}\r\n\r\nexport const CastTypeSelect: React.FC<ICastTypeSelect> = ({typeList, updateValue, initialValue = null}: ICastTypeSelect)=>{\r\n    const select = useRef<HTMLSelectElement>();\r\n    function updateSelected(){\r\n        updateValue(select.current.value);\r\n    }\r\n    useEffect(()=>{\r\n        if(initialValue != null){\r\n            select.current.value = initialValue;\r\n        }\r\n    },[]);\r\n    return (\r\n        <select ref={select} onChange={updateSelected}>\r\n            {typeList.map(t=> {\r\n            return <option key={`castType_${t.value}`} value={t.value}>{t.name}</option>\r\n        })}\r\n        </select>\r\n       \r\n    )\r\n}\r\nexport default CastTypeSelect;\r\n","import React, { useState } from 'react'\r\nimport CastTypeSelect from './CastTypeSelect'\r\nimport \"./castStyle.css\";\r\nimport { useAsyncBinder } from '../../hooks'\r\nimport { ICast, ICastType } from '../../../common/cast';\r\nimport { deleteCast, updateCast } from '../../callers/castCaller';\r\n\r\ninterface IEditCastRow{\r\n    cast: ICast;\r\n    castTypes: ICastType[];\r\n    onDelete: ()=>void;\r\n    onUpdate: (updated: ICast)=>void;\r\n}\r\n\r\nexport const EditCastRow: React.FC<IEditCastRow> = ({cast, castTypes, onDelete, onUpdate}: IEditCastRow) => {\r\n    const [mainClass, setMainClass] = useState(\"edit-cast-row-container\");\r\n    const [getCast, setCast, castBinder] = useAsyncBinder(cast);\r\n    async function deleteRow(){\r\n        if(await deleteCast(cast.id)){\r\n            onDelete();\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    async function saveChanges(){\r\n        if(await updateCast(getCast.current)){\r\n            onUpdate(getCast.current); \r\n            saved();\r\n        } else {\r\n            alert(\"Server error: could not save your work.\");\r\n        }\r\n    }\r\n\r\n    const setCastTypeId = (newTypeId: string) =>{\r\n        setCast({...getCast.current, castTypeId: parseInt(newTypeId)});\r\n    }\r\n\r\n    const setUnsaved = ()=>{\r\n        if(!mainClass.includes(\"unsaved\")){\r\n            setMainClass(mainClass + \" unsaved\");\r\n        }\r\n    }\r\n\r\n    const saved = ()=>{\r\n        if(mainClass.includes(\"unsaved\")){\r\n            setMainClass(mainClass.replace(\" unsaved\", \"\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={mainClass}>\r\n        {window.screen.width > 600 ?\r\n        (<div className=\"edit-cast-row\">\r\n            <img src={`/rewer/uploads/portraits/${getCast.current.artistId}.jpg`} alt={cast.artistName} />\r\n            <p>{getCast.current.artistName}</p>\r\n            <input name=\"name\" value={getCast.current.name} onChange={(e)=>{ castBinder(e); setUnsaved(); } } />\r\n            <CastTypeSelect typeList={castTypes} initialValue={getCast.current.castTypeId} updateValue={(newTypeId: string)=>{ setCastTypeId(newTypeId); setUnsaved();} } />\r\n            <button onClick={saveChanges} >Update</button>\r\n            <button onClick={deleteRow}>Delete</button>\r\n        </div>) :\r\n        ( <div>\r\n            <div className=\"edit-cast-row-mobile-row-1\">\r\n                <img src={`/rewer/uploads/portraits/${getCast.current.artistId}.jpg`} alt={cast.artistName} />\r\n                <p>{getCast.current.artistName}</p>\r\n                <input name=\"name\" value={getCast.current.name} onChange={(e)=>{ castBinder(e); setUnsaved(); } } />\r\n            </div>\r\n            <div  className=\"edit-cast-row-mobile-row-2\">\r\n                <CastTypeSelect typeList={castTypes} initialValue={getCast.current.castTypeId} updateValue={(newTypeId: string)=>{ setCastTypeId(newTypeId); setUnsaved();} } />\r\n                <button onClick={saveChanges} >Update</button>\r\n                <button onClick={deleteRow}>Delete</button>\r\n            </div>\r\n        </div>)}\r\n        </div>         \r\n    )\r\n}\r\n\r\nexport default EditCastRow;\r\n","import React from 'react'\r\nimport { ICast, ICastType } from '../../../common/cast';\r\nimport { replacedList } from '../../utils'\r\nimport EditCastRow from './EditCastRow'\r\ninterface IEditCastList{\r\n    castList: ICast[];\r\n    setCastList: (state: ICast[])=>void;\r\n    castTypes: ICastType[];\r\n}\r\nexport const EditCastList: React.FC<IEditCastList> = ({castList, setCastList, castTypes}: IEditCastList) => {\r\n    function onDelete(selectedId: number){\r\n        setCastList(castList.filter(c=> c.id !== selectedId));\r\n    }\r\n    function onUpdate(toUpdate: ICast){\r\n        setCastList(replacedList(castList, castList.find(c=> c.id === toUpdate.id), toUpdate));\r\n    }\r\n    return (\r\n        <div>\r\n            {castList.map(c=> {\r\n                return <EditCastRow key={`edit-cast-${c.id}`} onDelete={()=> { onDelete(c.id)}} cast={c} onUpdate={onUpdate} castTypes={castTypes} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import { POSTAsynch, UploadFile } from \"../callers/caller\";\r\nimport { IArtist, IDetailedArtist } from \"../../common/artist\";\r\n\r\nexport async function selectArtistsByKeyword(keyword: string, limit: number, offset: number): Promise<IArtist[]>{\r\n    const response = await POSTAsynch(\"/artist/select_artists_by_keyword\", { keyword: keyword, limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function selectDetailedArtist(id: number): Promise<IDetailedArtist | null>{\r\n    const response = await POSTAsynch(\"/artist/select_detailed_artist\", { id: id });\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertArtist(artist: IArtist): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/artist/insert_artist\", artist);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function updateArtist(artist: IArtist): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/artist/update_artist\", artist);\r\n    if(response.ok){\r\n        return true\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function uploadPortrait(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/artist/upload_portrait\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { onEnter, useBinder } from '../../hooks'\r\nimport { compareCastType, getCastTypes, insertCast, insertCasts } from '../../callers/castCaller';\r\nimport ArtistSelector from '../artist/ArtistSelector';\r\nimport CastTypeSelect from '../cast/CastTypeSelect'\r\nimport { EditCastList } from '../cast/EditCastList';\r\nimport { Link } from  \"react-router-dom\";\r\nimport { IMovie } from \"../../../common/movie\";\r\nimport { selectArtistsByKeyword } from '../../callers/artistCaller';\r\nimport { IArtist } from '../../../common/artist';\r\nimport { ICast } from \"../../../common/cast\";\r\nimport { ISeason } from '../../../common/season';\r\ninterface IEditCastList{\r\n    movie: IMovie;\r\n    setMovie: (movie: IMovie) => void;\r\n    season?: ISeason;\r\n    setEpisodes?: (episodes: IMovie[]) => void; \r\n}\r\nexport const EditCast: React.FC<IEditCastList> = ({movie, setMovie, season, setEpisodes}: IEditCastList) => {\r\n    const [castTypes, setCastTypes] = useState([]);\r\n    const [artists, setArtists] = useState([]);\r\n    const [keyword, setKeyword, bindKeyword] = useBinder({search: \"\"});\r\n    const [newCast, setNewCast, bindNewCast] = useBinder({id: 0, movieId: movie.id, artistId: 0, castTypeId: 1, name: \"\", artistName: \"Not selected\"});\r\n    useEffect(()=>{\r\n        fetchRequests();\r\n    }, []);\r\n    async function fetchRequests(){\r\n        await Promise.all([requestCastTypes(), requestArtists()]);\r\n    }\r\n    async function requestCastTypes(){\r\n        setCastTypes(await getCastTypes());\r\n    }\r\n    async function requestArtists(){\r\n        setArtists(await selectArtistsByKeyword(keyword.search, 25, 0));\r\n    }\r\n\r\n    async function addCast(){\r\n        if(movie.id === 0 || movie.id == null){\r\n            alert(\"You must create the movie's page first.\");\r\n            return false;\r\n        }\r\n        if(newCast.artistId === 0 || newCast.artistId == null){\r\n            alert(\"Choose an artist!\");\r\n            return false;\r\n        } else{\r\n            return await insertCastRequest();\r\n        } \r\n    }\r\n\r\n    async function insertCastRequest(){\r\n        let newId = await insertCast(newCast);\r\n        if(newId){\r\n            setCasts([...movie.casts, { ...newCast, id: newId }].sort(compareCastType));\r\n            setNewCast({...newCast, id: 0, name: \"\"});\r\n            return true;\r\n        } else {\r\n            alert(\"Server error.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function addToEachSeason(){\r\n        if(movie.id === 0 || movie.id == null){\r\n            alert(\"You must create the movie's page first.\");\r\n            return false;\r\n        }\r\n        if(newCast.artistId === 0 || newCast.artistId == null){\r\n            alert(\"Choose an artist!\");\r\n            return false;\r\n        }\r\n        let newCasts = [];\r\n        for(let episode of season.episodes) {\r\n            newCasts.push({...newCast, movieId: episode.id })\r\n        }\r\n        newCasts = await insertCasts(newCasts);\r\n        let newEpisodes = season.episodes;\r\n        for(let episode of newEpisodes) {\r\n            episode.casts.push(newCasts.find(c=> c.movieId === episode.id));\r\n        }\r\n        setEpisodes(newEpisodes); \r\n    }\r\n\r\n    function setCasts(newCasts: ICast[]){\r\n        setMovie({...movie, casts: newCasts});\r\n    }\r\n\r\n    function updateNewCastArtist(artist: IArtist){\r\n        setNewCast({...newCast, artistId: artist.id, artistName: artist.name});\r\n    }\r\n\r\n    function updateNewCastType(newValue: string){\r\n        setNewCast({...newCast, castTypeId: parseInt(newValue)});\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNewCast({...newCast, movieId: movie.id});\r\n    }, [movie.id]);\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Cast: </h2>\r\n                <EditCastList castList={movie.casts} setCastList={setCasts} castTypes={castTypes} />\r\n            </div>\r\n            <div className=\"adder-panel\">\r\n                <h3>Add cast member:</h3>\r\n                <span className=\"artist-name\" >{newCast.artistName}</span>\r\n                <CastTypeSelect typeList={castTypes} updateValue={updateNewCastType} />\r\n                <input value={newCast.name} onChange={bindNewCast} name=\"name\" placeholder=\"As\" />\r\n                <button onClick={addCast}>Add</button>\r\n                {(movie.seasonId > 0)?\r\n                (<button onClick={addToEachSeason}>Add to each episode</button>):\r\n                (<Fragment></Fragment>)}\r\n                <br/>\r\n                <Link to=\"/editartist?artistId=0\">Create new star</Link>\r\n            </div>\r\n            <div>\r\n                <input value={keyword.search} name=\"search\" onChange={bindKeyword} onKeyDown={(e)=> { onEnter(e, requestArtists); }} placeholder=\"Search\" />\r\n                <button onClick={requestArtists}>Search</button>\r\n                <ArtistSelector artistList={artists} onSelectionChanged={updateNewCastArtist} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*      */","import React, { useState, useEffect } from 'react'\r\nimport { GenreSelect } from './GenreSelect';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { getGenres } from '../../callers/movieCaller';\r\nimport { IGenre } from '../../../common/genre';\r\n\r\ninterface IGenreAdder{\r\n    movie: any;\r\n    onAdd: (genre: IGenre) => void;\r\n    onDelete: (id: number) => void;\r\n}\r\nexport const GenreAdder: React.FC<IGenreAdder> = ({movie, onAdd, onDelete}: IGenreAdder)=> {\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [selectedGenre, setSelectedGenre] = useState({id: 0, name: \"\"});\r\n    useEffect(()=>{\r\n        requestGenres();\r\n    },[]);\r\n\r\n    async function requestGenres(){\r\n        let genres = await getGenres();\r\n        if(genres != null){\r\n            setGenreList(genres);\r\n        } else {\r\n            alert(\"Server error: could not download the list of genres\");\r\n        }\r\n    }\r\n\r\n    function addGenre(){\r\n        if(selectedGenre.id > 0){\r\n            onAdd(selectedGenre);\r\n        } else {\r\n            onAdd(genreList[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Genres:</h3>\r\n            <div className= \"edit-genre-container\">\r\n            {movie.genres.map(g=> {\r\n                return <div key={`genre-${g.id}`} className=\"edit-genre\"><span>{g.genreName}</span><button onClick={()=> { onDelete(g.id); }} ><FontAwesomeIcon icon={faTimes} /></button></div>\r\n            })}\r\n            </div>          \r\n            <GenreSelect genres={genreList} selectedGenre={selectedGenre} setSelectedGenre={(g: IGenre)=> { setSelectedGenre(g) }} />\r\n            <button onClick={()=>{ addGenre() }}>Add</button><br/>\r\n        </div>\r\n    )\r\n}\r\nexport default GenreAdder;","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"../main.css\";\r\nimport EditMovieDetails from \"../components/movie/EditMovieDetails\";\r\nimport { selectDetailedMovie, updateMovie, insertMovie, insertMovieGenre, deleteMovieGenre } from \"../callers/movieCaller\";\r\nimport { useBinder } from \"../hooks\";\r\nimport { changeParam, getParameter } from \"../urlManager\";\r\nimport { EditCast, } from \"../components/movie/EditCast\";\r\nimport GenreAdder from \"../components/movie/GenreAdder\";\r\nimport { IGenre, IMovieGenre } from \"../../common/genre\";\r\n\r\nexport default function EditMovie(){\r\n    const [movie, setMovie, bindMovie] = useBinder({id: parseInt(getParameter(\"movieId\")), title: \"\", releaseDate: new Date(), summary: \"\", runtime: 0, casts: [], genres: []});\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(movie.id > 0){\r\n            getMovie();\r\n        }\r\n    }, []);\r\n    useEffect(()=>{\r\n        setMainMsg(\"\");\r\n    }, [movie.id]);\r\n    \r\n    async function getMovie(){\r\n        let selectedMovie = await selectDetailedMovie(movie.id);\r\n        if(selectedMovie){\r\n            setMovie(selectedMovie);\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    async function saveMovie(){\r\n        if(await updateMovie(movie)){\r\n            setMainMsg(`Movie details saved: ${new Date().getHours()} : ${new Date().getMinutes()}`)\r\n        } else {\r\n            setMainMsg(\"Internal error: movie details could not be saved.\");\r\n        }\r\n    }\r\n\r\n    async function createMovie(){\r\n        const newId = await insertMovie(movie);\r\n        if(newId){\r\n            setMovie({...movie, id: newId});\r\n            changeParam({name: \"movieId\", value: newId.toString()});\r\n        } else {\r\n            setMainMsg(\"Internal error: movie could not be created.\");\r\n        }\r\n    }\r\n\r\n    async function addGenre(genre: IGenre){\r\n        let newMovieGenre: IMovieGenre = { \r\n            id: 0,\r\n            movieId: movie.id, \r\n            genreId: genre.id, \r\n            genreName: genre.name };\r\n        newMovieGenre.id = await insertMovieGenre(newMovieGenre);\r\n        if(newMovieGenre.id > 0){\r\n            setMovie({...movie, genres: [...movie.genres, newMovieGenre]});\r\n        } else {\r\n            alert(\"Server error: could not add genre.\");\r\n        }\r\n    }\r\n\r\n    async function removeGenre(id: number){\r\n        if(await deleteMovieGenre(id)){\r\n            setMovie({...movie, genres: movie.genres.filter(g=> g.id !== id)})\r\n        } else {\r\n            alert(\"Server error: could not delete genre.\");\r\n        }\r\n    }\r\n \r\n    return (\r\n    <Fragment>\r\n        <div className=\"main-container\">\r\n            {(movie.id > 0)?\r\n            (<button onClick={saveMovie}>Save</button>) :\r\n            (<button onClick={createMovie}>Create</button>)}\r\n            {mainMsg}\r\n            <EditMovieDetails movie={movie} setMovie={setMovie} movieBinder={bindMovie} />\r\n            {(movie.id > 0)?\r\n            (<Fragment>\r\n                <GenreAdder movie={movie} onAdd={(genre: IGenre)=> { addGenre(genre) }} onDelete={(id:number)=> { removeGenre(id) }} />\r\n                <EditCast movie={movie} setMovie={setMovie} />\r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    </Fragment>)\r\n}","import * as caller from \"./caller\";\r\nimport { IAuthUser, IUserPermission, WIsLoggedinResponse, WLoginRequest, WUpdatePasswordRequest } from \"../../common/user\";\r\n\r\n\r\nexport async function login(authUser: IAuthUser, autoLogin: boolean): Promise<Response>{\r\n    const data: WLoginRequest = {\r\n        authUser: authUser,\r\n        autoLogin: autoLogin\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/login\", data);\r\n    if(response.status !== 200){\r\n        localStorage.clear();\r\n        return response;\r\n    }\r\n    const loggedInUser: IAuthUser = await response.json();\r\n    if(loggedInUser){\r\n        saveUserToStorage(loggedInUser);\r\n    }\r\n    return response;\r\n}\r\n\r\nfunction saveUserToStorage(authUser: IAuthUser){\r\n    localStorage.clear();\r\n    localStorage.setItem(\"userName\", authUser.userName);\r\n    localStorage.setItem(\"nickName\", authUser.nickName);\r\n    localStorage.setItem(\"permission\", authUser.permission.toString());\r\n    if(authUser){\r\n        localStorage.setItem(\"session\", authUser.session);\r\n    } \r\n}\r\n\r\nexport async function isLoggedIn(): Promise<WIsLoggedinResponse>{\r\n    const defaultResponse = { isLoggedin: false, setNewSession: false}\r\n    if(!localStorage.hasOwnProperty(\"userName\")){\r\n        return defaultResponse;\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/is_logged_in\", { userName: localStorage.getItem(\"userName\"), session: localStorage.getItem(\"session\")});\r\n    try{\r\n        return JSON.parse(await response.text());\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n        logOut();\r\n    }\r\n    return defaultResponse; \r\n}\r\n\r\nexport async function updatePassword(user: IAuthUser, newPassword: string): Promise<boolean>{\r\n    let data: WUpdatePasswordRequest = {\r\n        authUser: user,\r\n        newPassword: newPassword\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/update_password\", data);\r\n    return caller.isResponse200(await response.text());\r\n}\r\n\r\nexport async function handleLogin(): Promise<Boolean>{\r\n    const response:WIsLoggedinResponse = await isLoggedIn();\r\n    if(response.isLoggedin === false){\r\n        localStorage.clear();\r\n        return false;\r\n    }\r\n    if(response.setNewSession){\r\n        localStorage.setItem(\"session\", response.newSession);\r\n    }\r\n    return true; \r\n}\r\n\r\nexport async function logOut(){\r\n    await caller.GETAsynch(\"/user/log_out\");\r\n    localStorage.clear();\r\n}\r\n\r\nexport async function insertAuthUser(authUser: IAuthUser): Promise<Response>{\r\n    const response = await caller.POSTAsynch(\"/user/insert_user\", authUser);\r\n    return response;\r\n} \r\n\r\nexport async function updatePermission(permission: IUserPermission): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/update_permission\", permission);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}","import { IDetailedUser, IUser, WDoesUserExistRequest, WSelectFollowedUsersRequest, WSelectFollowersRequest } from \"../../common/user\";\r\nimport * as caller from \"./caller\";\r\n\r\nexport async function doesExist(userName: string): Promise<Response>{\r\n    const request: WDoesUserExistRequest = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/does_exist\", request);\r\n    return response;\r\n}\r\n\r\nexport async function selectDetailedUser(userName: string): Promise<IDetailedUser | null>{\r\n    const request = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/select_detailed_user\", request);\r\n    if(response.status === 200){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function uploadAvatar(file: FormData){\r\n    const response = await caller.UploadFile(\"/user/upload_avatar\", file);\r\n    return response;\r\n}\r\n\r\nexport async function updateUserInfo(detailedUser: IDetailedUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/update_user_info\", detailedUser);\r\n    if(response.status === 200){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function selectFollowers(data: WSelectFollowersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followers\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}\r\n\r\nexport async function selectFollowedUsers(data: WSelectFollowedUsersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followed_users\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}","import React, { useState, useRef } from 'react'\r\nimport \"./login.css\";\r\nimport { useBinder } from '../../hooks';\r\nimport { insertAuthUser } from '../../callers/authUserCaller';\r\nimport { doesExist } from '../../callers/userCaller';\r\nimport { WDoesUserExistResponse } from '../../../common/user';\r\ninterface SignUpForm{\r\n\r\n}\r\n\r\nexport const SignUpForm: React.FC<SignUpForm> = ()=> {\r\n    const [userTakenMsg, setUserTakenMsg] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [newUser, setNewUser, bindNewUser] = useBinder({userName: \"\", nickName: \"\", password: \"\", permission: 0});\r\n    const pw2 = useRef<HTMLInputElement>();\r\n\r\n    async function checkCommand(){\r\n        const doesExistResponse = await doesExist(newUser.userName);\r\n        if(doesExistResponse.status !== 200){\r\n            setUserTakenMsg(\"Server error: invalid response from the server.\");\r\n            return true;\r\n        }\r\n        if((await doesExistResponse.json() as WDoesUserExistResponse).exists){\r\n            setMsg(\"Username already taken.\");\r\n            setUserTakenMsg(\"Taken\");\r\n            return true;\r\n        } \r\n        setUserTakenMsg(\"Free\");\r\n        return false;\r\n    }\r\n    async function signUpCommand(){\r\n        if(newUser.userName.length === 0){\r\n            setMsg(\"The username must be at least one character long.\");\r\n            return false;\r\n        }\r\n        if(newUser.userName.length > 255){\r\n            setMsg(\"The username is too long.\");\r\n            return false;\r\n        }\r\n        if(await checkCommand()){\r\n            return false;\r\n        } \r\n        if(newUser.password !== pw2.current.value){\r\n            setMsg(\"The two passwords don't match.\");\r\n            return false;\r\n        }\r\n        console.log(\"requesting\");\r\n        await sendSignUpRequest();\r\n        return true;\r\n    }\r\n\r\n    async function sendSignUpRequest(){\r\n        console.log(\"sending request\")\r\n        const response = await insertAuthUser(newUser);\r\n        if(response.status === 201){\r\n            setMsg(\"You have successfully signed up to our website!\");\r\n            return true;\r\n        } else {\r\n            setMsg(\"Server error: process failed.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sign up</h2>\r\n                <div className=\"form-container\">\r\n                    <label className=\"form-item\">New username:</label>\r\n                    <input value={newUser.userName} onChange={bindNewUser} className=\"form-item\" name=\"userName\" placeholder=\"to log in\" />\r\n                    <div className=\"form-item\"></div><div className=\"form-item\"><span className=\"form-item\">{userTakenMsg}</span><button onClick={checkCommand}>Check</button></div>\r\n                    <label className=\"form-item\">New nickname:</label>\r\n                    <input value={newUser.nickName} onChange={bindNewUser} className=\"form-item\" name=\"nickName\" placeholder=\"seen by others\" />\r\n                    <label className=\"form-item\">New password:</label>\r\n                    <input value={newUser.password} onChange={bindNewUser} className=\"form-item\" type=\"password\" name=\"password\" placeholder=\"new password\" />\r\n                    <label className=\"form-item\">New password again:</label>\r\n                    <input ref={pw2} className=\"form-item\" type=\"password\" name=\"newPassword2\" placeholder=\"new password again\" />\r\n                </div>\r\n                <p>{msg}</p>\r\n                <button onClick={signUpCommand} className=\"login-btn\" type=\"button\">Sign Up</button>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm","export class ErrorMessenger{\r\n    messages: IMessage[];\r\n    defaultError: string;\r\n    constructor(messages: IMessage[], defaultError?: string){\r\n        this.messages = messages;\r\n        if(defaultError) {\r\n            this.defaultError = defaultError;\r\n        } else {\r\n            this.defaultError = \"Unknown error\";\r\n        }\r\n    }\r\n    getError(statusCode: number): string{\r\n        let result = this.messages.find(m=> m.statusCode === statusCode);\r\n        if(result) return result.message;\r\n        return this.defaultError;\r\n    }\r\n\r\n}\r\n\r\nexport interface IMessage{\r\n    statusCode: number;\r\n    message: string;\r\n}","import React, { useRef, useState, Fragment } from 'react'\r\nimport \"./login.css\";\r\nimport { SignUpForm } from './SignUpForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../callers/authUserCaller';\r\nimport { ErrorMessenger } from '../errorMessenger';\r\ninterface ILoginForm{\r\n    \r\n}\r\n\r\nexport const LoginForm: React.FC<ILoginForm> = ()=> {\r\n    const [loginMsg, setLoginMsg] = useState(\"\");\r\n    const userName = useRef<HTMLInputElement>();\r\n    const password = useRef<HTMLInputElement>();\r\n    const autoLogin = useRef<HTMLInputElement>();\r\n    const signUpLine = \r\n    <Fragment>\r\n        <p>Not signed up yet?<button onClick={addSignUp}>Do it now!</button></p> \r\n        <div className=\"bottom-border\" />\r\n    </Fragment>\r\n    const [signUpForm, setSignUp] = useState(signUpLine);\r\n    const history = useHistory();\r\n\r\n    function addSignUp(){\r\n        setSignUp(<><div className=\"bottom-border\" /><SignUpForm /></>);\r\n    }\r\n\r\n    async function loginCommand(){\r\n        const loginResponse = await login({userName: userName.current.value, nickName: undefined, permission: 1, password: password.current.value}, autoLogin.current.checked); //csak hogy ne egy sorban legyen már\r\n        let errorHandler = new ErrorMessenger([\r\n            {\r\n                statusCode: 200,\r\n                message: \"Login successful.\"\r\n            },\r\n            {\r\n                statusCode: 403,\r\n                message: \"Incorrect password.\"\r\n            },\r\n            {\r\n                statusCode: 404,\r\n                message: \"Incorrect username.\" \r\n            },\r\n            {\r\n                statusCode: 404,\r\n                message: \"Server error: could not finish user authentication.\" \r\n            }\r\n            ]);\r\n        setLoginMsg(errorHandler.getError(loginResponse.status));\r\n        if(loginResponse.status === 200){\r\n           // history.push(\"/rewer\");\r\n            console.log(\"success\");\r\n           // window.location.reload(); //ezt a header beállítása végett csináljuk\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form action=\"\">\r\n                <div className=\"form-container\">\r\n                    <label className=\"form-item\">Username:</label>\r\n                    <input className=\"form-item\" ref={userName} name=\"userName\" placeholder=\"username\" />\r\n                    <label className=\"form-item\">Password:</label>\r\n                    <input className=\"form-item\" ref={password} type=\"password\" placeholder=\"password\" name=\"password\" />\r\n                    <div className=\"form-item\"><label>Keep me logged in</label><input ref={autoLogin} type=\"checkbox\" /></div>\r\n                    <button onClick={loginCommand} className=\"login-btn form-item\" type=\"button\" name=\"submit\" >Login</button>\r\n                </div>\r\n                <p>{loginMsg}</p>\r\n            </form>\r\n                {signUpForm}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Fragment, useState } from 'react'\r\nimport { updatePassword } from '../../callers/authUserCaller';\r\nimport \"../login/login.css\";\r\ninterface IChangePassword{\r\n\r\n}\r\n\r\nexport const ChangePassword: React.FC<IChangePassword> = ()=> {\r\n    const [oldPw, setOldPw] = useState(\"\");\r\n    const [newPw1, setNewPw1] = useState(\"\");\r\n    const [newPw2, setNewPw2] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    async function updatePasswordCommand(){\r\n        if(newPw1 !== newPw2){\r\n            setMsg(\"The two passwords don't match\");\r\n            clearInput();\r\n            return false;\r\n        }\r\n        if(await updatePassword({ userName: localStorage.getItem(\"userName\"), password: oldPw, permission: 0, nickName: localStorage.getItem(\"nickName\")}, newPw1)){\r\n            setMsg(\"You password has been updated.\");\r\n            clearInput();\r\n            return true;\r\n        } else {\r\n            setMsg(\"Access denied.\");\r\n            clearInput();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function clearInput(){\r\n        setOldPw(\"\");\r\n        setNewPw1(\"\");\r\n        setNewPw2(\"\");\r\n    }\r\n\r\n    function handleKeyDown(e){\r\n        if(e.key === 'Enter'){\r\n            updatePasswordCommand();\r\n        }\r\n    }\r\n\r\n    return (\r\n       <Fragment>\r\n            <h2>Update password</h2>\r\n            <div className=\"form-container\">\r\n                <label className=\"form-item\">Current password:</label>\r\n                <input value={oldPw} onChange={e=> setOldPw(e.target.value)} type=\"password\" className=\"form-item\" placeholder=\"old password\" />\r\n                <label className=\"form-item\">New password:</label>\r\n                <input value={newPw1} onChange={e=> setNewPw1(e.target.value)} type=\"password\" className=\"form-item\" placeholder=\"new password\" />\r\n                <label className=\"form-item\">New password again:</label>\r\n                <input value={newPw2} onChange={e=> setNewPw2(e.target.value)} onKeyDown={handleKeyDown} type=\"password\" className=\"form-item\" placeholder=\"new password to check\" />\r\n                <p>{msg}</p>\r\n            </div>\r\n            <button onClick={updatePasswordCommand} type=\"button\">Update password</button>\r\n       </Fragment>\r\n    )\r\n}\r\nexport default ChangePassword;","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useBinder } from '../../hooks';\r\nimport { logOut } from '../../callers/authUserCaller';\r\nimport { selectDetailedUser, uploadAvatar, updateUserInfo } from \"../../callers/userCaller\"\r\nimport { resizeImageFn } from '../../utils';\r\nimport ChangePassword from './ChangePassword';\r\nimport \"./profileStyle.css\";\r\n\r\nexport default function MyProfile() {\r\n    const [myProfile, setMyProfile, bindMyProfile] = useBinder({ userName: localStorage.getItem(\"userName\"), nickName: localStorage.getItem(\"nickName\"), permission: 1, about: \"\", followerCount: 0 })\r\n    const [nickNameMsg, setNickNameMsg] = useState(\"\");\r\n    const [uploadMsg, setUploadMsg] = useState(\"\");\r\n    const [avatarSource, setAvatarSource] = useState(`/rewer/uploads/avatars/${localStorage.getItem(\"userName\")}.jpg`);\r\n    const imageFile = useRef<HTMLInputElement>();\r\n\r\n    useEffect(()=>{\r\n        getMyInfo();\r\n    }, []);\r\n\r\n    async function logoutCommand(){\r\n        await logOut();\r\n        window.location.reload();\r\n    }\r\n\r\n    async function updateUserInfoCommand(){\r\n        if(await updateUserInfo(myProfile)){\r\n            setNickNameMsg(\"Your profile has been updated\");\r\n        } else {\r\n            setNickNameMsg(\"Request failed.\");\r\n        } \r\n    }\r\n\r\n    async function getMyInfo(){\r\n        let profile = await selectDetailedUser(localStorage.getItem(\"userName\"));\r\n        if(profile){\r\n            setMyProfile(profile);\r\n        } else {\r\n            //TODO 404\r\n        }\r\n    }\r\n\r\n    function handleKeyDown(e){\r\n        if(e.key === 'Enter'){\r\n            updateUserInfoCommand();\r\n        }\r\n    }\r\n\r\n    async function uploadImageFileCommand(){\r\n        const formData = new FormData();\r\n        if(!imageFile.current.files[0]){\r\n            setUploadMsg(\"No file selected.\");\r\n            return;\r\n        }\r\n        const resizedFile = await resizeImageFn(imageFile.current.files[0], 300, 300, 0.8);\r\n        formData.append(\"avatar\", resizedFile, `${localStorage.getItem(\"userName\")}.jpg`);\r\n        if((await uploadAvatar(formData)).status === 200){\r\n            setUploadMsg(\"Avatar updated.\");\r\n            setAvatarSource(`/rewer/uploads/avatars/${localStorage.getItem(\"userName\")}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            setUploadMsg(\"Process failed. Make sure file's size is not bigger than 10MB.\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>User settings</p>\r\n            <button onClick={logoutCommand}>Log out</button>\r\n            <div className=\"profile-grid\">\r\n                <div className=\"profile-grid-item\">    \r\n                    <img \r\n                        src={avatarSource} \r\n                        onError={()=> {setAvatarSource(`/rewer/uploads/avatars/default.jpg`)} }\r\n                        className=\"image\" \r\n                        alt=\"Avatar\" \r\n                        title=\"Avatar\"  />\r\n                    <input ref={imageFile}  className=\"file-input\" type=\"file\" />\r\n                    <button onClick={uploadImageFileCommand} type=\"button\">Upload</button>\r\n                    <p>{uploadMsg}</p>\r\n                </div>\r\n                <div className=\"profile-grid-item\">\r\n                    <h1>{localStorage.getItem(\"userName\")}</h1>  \r\n                    <textarea name=\"about\" value={myProfile.about} onChange={bindMyProfile} rows={10} ></textarea>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label>My nickname: </label>\r\n                <input type=\"text\" name=\"nickName\" value={myProfile.nickName} onKeyDown={handleKeyDown} accept=\".png,.jpg\" onChange={bindMyProfile} />\r\n                <button onClick={updateUserInfoCommand}  type=\"button\" className=\"save\" >Save</button>\r\n            </div>\r\n            <p>{nickNameMsg}</p>\r\n            <div className=\"bottom-border\"></div>\r\n            <ChangePassword />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IUser } from '../../../common/user';\r\n\r\ninterface IFollowedUserRow{\r\n    user: IUser;\r\n}\r\n\r\nexport const FollowedUserRow: React.FC<IFollowedUserRow> = ({user}: IFollowedUserRow) => {\r\n    const [imgSrc, setImgsrc] = useState(\"\");\r\n    useEffect(()=>{\r\n        setImgsrc(`/rewer/uploads/avatars/${user.userName}.jpg`);\r\n    }, [user])\r\n    return (\r\n        <Link to={`/user?userName=${user.userName}`}>\r\n            <div className=\"followed-user-row highlight\">\r\n                <img src={imgSrc} onError={()=> { setImgsrc(\"/rewer/uploads/avatars/default.jpg\") }} className=\"followed-user-row-item\" alt=\"user-poster\" />\r\n                <p className=\"followed-user-row-item\">{user.nickName}</p>\r\n            </div>\r\n        </Link>            \r\n    )\r\n}\r\nexport default FollowedUserRow;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { selectFollowedUsers } from '../../callers/userCaller'\r\nimport FollowedUserRow from './FollowedUserRow';\r\n\r\ninterface IFollowedUsers{\r\n    //users: User[];\r\n}\r\n\r\nexport const FollowedUsers: React.FC<IFollowedUsers> = () => {\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            getFollowedUsers();\r\n        }\r\n    }, []);\r\n\r\n    async function getFollowedUsers(){\r\n        let followed = await selectFollowedUsers({userName: localStorage.getItem(\"userName\")});\r\n        if(followed){\r\n            setUsers(followed);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Followed</h3>\r\n            {users.map(u=>{\r\n                return <FollowedUserRow key={`followed-${u.userName}`} user={u} />\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default FollowedUsers;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { selectFollowers } from '../../callers/userCaller'\r\nimport FollowedUserRow from './FollowedUserRow';\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IFollowingUsers{\r\n    length: number;\r\n}\r\n\r\nexport const FollowingUsers: React.FC<IFollowingUsers> = ({length}: IFollowingUsers) => {\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            getFollowingUsers();\r\n        }\r\n    }, []);\r\n\r\n    async function getFollowingUsers(){\r\n        let following = await selectFollowers({userName: localStorage.getItem(\"userName\"), limit: length});\r\n        if(following){\r\n            setUsers(following);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">My Followers</h3>\r\n            {users.slice(0, 8).map(u=>{\r\n                return <FollowedUserRow key={`followed-${u.userName}`} user={u} />\r\n            })}\r\n            {users.length > length ?\r\n            (<Link to={\"TODO\"}>More</Link>):\r\n            (<Fragment></Fragment>)}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default FollowingUsers;","import React, { Fragment } from 'react'\r\nimport \"../main.css\";\r\nimport LoginForm from '../components/login/LoginForm';\r\nimport MyProfile from '../components/profile/MyProfile';\r\nimport FollowedUsers from '../components/profile/FollowedUsers';\r\nimport FollowingUsers from '../components/profile/FollowingUsers';\r\n\r\nexport default function Login() {\r\n    let content: any;\r\n    if(localStorage.getItem(\"userName\") != null){ //ha lesznek\r\n        content = <MyProfile />\r\n    } else {\r\n        content = <LoginForm />\r\n    }\r\n    return (\r\n        <>\r\n        {window.screen.width > 700 ?\r\n        (<div className=\"main-container\">\r\n            {localStorage.getItem(\"userName\") != null ?\r\n            (<Fragment>\r\n                <MyProfile />\r\n                <FollowedUsers />\r\n                    <div className=\"bottom-border\" />\r\n                    <FollowingUsers length={10000} />\r\n            </Fragment>):\r\n            (<LoginForm />)}\r\n        </div>\r\n        ):\r\n        (<div className=\"main-container\"> \r\n            {content}\r\n        </div>)} \r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport interface IHeaderItem{\r\n    to: string;\r\n    content: any;\r\n}\r\n\r\nexport const HeaderItem: React.FC<IHeaderItem> = ({to, content})=> {\r\n    return (\r\n            <Link to={to}>{content}</Link>\r\n    )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport \"./headerStyle.css\";\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faUser, faSignInAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { HeaderItem } from './HeaderItem';\r\n\r\ninterface INavList{\r\n\r\n}\r\n\r\nexport const Header: React.FC<INavList> = ()=> {\r\n   const headerRef = useRef<HTMLDivElement>(null);\r\n   const [userIcon, setUserIcon] = useState(null);\r\n    let sticky: number;\r\n    window.onscroll = function(){\r\n        headerHandler();\r\n    }\r\n\r\n    function headerHandler(){\r\n        sticky = headerRef.current.offsetTop;\r\n        if(window.pageYOffset > sticky){\r\n            headerRef.current.classList.add(\"sticky\");\r\n        } else {\r\n            headerRef.current.classList.remove(\"sticky\");\r\n        }\r\n    } \r\n    function displayMenu(){\r\n        if(!headerRef.current.classList.contains(\"responsive\")){\r\n            headerRef.current.classList.add(\"responsive\");\r\n            document.body.scrollTop = 0; // For Safari\r\n            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        } else {\r\n            headerRef.current.classList.remove(\"responsive\");\r\n        }\r\n    }\r\n\r\n    window.onclick = ()=>{\r\n      //  headerRef.current.classList.remove(\"responsive\");\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(localStorage.getItem(\"userName\"));\r\n        console.log(localStorage.getItem(\"nickName\"));\r\n        console.log(localStorage.getItem(\"session\"));\r\n        console.log(localStorage.getItem(\"permission\"));\r\n        if(localStorage.getItem(\"userName\") != null){\r\n            setUserIcon(<FontAwesomeIcon icon={faUser} />);\r\n        } else {\r\n            setUserIcon(<FontAwesomeIcon icon={faSignInAlt} />);\r\n        }\r\n    }, []);\r\n\r\n    function closeHeader(){\r\n        setTimeout(()=>{\r\n            headerRef.current.classList.remove(\"responsive\");\r\n        }, 250)\r\n    }\r\n\r\n    //<FontAwesomeIcon icon={faUser} />\r\n    return (        \r\n           <header>\r\n                <div ref={headerRef} className=\"topnav\">\r\n                    <div onClick={closeHeader}>\r\n                    <HeaderItem to=\"/profile\" content={userIcon} />\r\n                    <HeaderItem to=\"/rewer\" content=\"Home\" />\r\n                    <HeaderItem to={\"/follows\"} content=\"Follows\" />\r\n                    </div>\r\n                    <a onClick={displayMenu} className=\"icon\"><FontAwesomeIcon icon={faBars} /></a>\r\n                </div>\r\n            </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport { IArtist } from '../../../common/artist';\r\nimport { uploadPortrait } from '../../callers/artistCaller';\r\nimport { parseForInput } from '../../dateParser';\r\nimport { resizeImageFn } from '../../utils';\r\nimport \"./artistStyle.css\";\r\n\r\ninterface IEditDetails{\r\n    artist: IArtist;\r\n    setArtist: (artist: IArtist) => void;\r\n    bindArtist: (e) => void;\r\n}\r\n\r\nexport const EditDetails: React.FC<IEditDetails> = ({artist, setArtist, bindArtist}: IEditDetails) => {\r\n    const imageInput = useRef<HTMLInputElement>();\r\n    const [portraitSource, setPortraitSource] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        setPortraitSource(`/rewer/uploads/portraits/${artist.id}.jpg`);\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    async function uploadImage(){\r\n        const formData = new FormData();\r\n        const resizedFile = await resizeImageFn(imageInput.current.files[0], 300, 400, 0.8);\r\n        formData.append(\"portrait\", resizedFile, `${artist.id}.jpg`);\r\n        if(await uploadPortrait(formData)){\r\n            setPortraitSource(`/rewer/uploads/portraits/${artist.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            alert(\"Process failed.\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <input value={artist.name} onChange={bindArtist} type=\"text\" name=\"name\" placeholder=\"Name\" className=\"name-input\" />\r\n            <div className=\"detail-grid\">\r\n                <div className=\"detail-grid-item span-2\">\r\n                    <h3>Born: </h3>\r\n                    <input value={artist.birthPlace} type=\"text\" onChange={bindArtist} name=\"birthPlace\" className=\"place-input\" placeholder=\"Birthplace\"/>\r\n                    <input value={parseForInput(new Date(artist.birthDate))} type=\"date\" onChange={bindArtist} name=\"birthDate\" /><br/>\r\n                    <h3>Died: </h3>\r\n                    <input value={artist.deathPlace} type=\"text\" onChange={bindArtist} name=\"deathPlace\" className=\"place-input\" placeholder=\"leave empty if irrelevant\" title=\"leave empty if irrelevant\"/>\r\n                    <input value={parseForInput(new Date(artist.deathDate)).toString()} type=\"date\" onChange={bindArtist} name=\"deathDate\" />\r\n                    <textarea value={artist.bio} onChange={bindArtist} name=\"bio\" placeholder=\"Biography\" rows={30} />\r\n                </div>\r\n                <div className=\"detail-grid-item first\" >\r\n                    <img className=\"portrait\" src={portraitSource} onError={()=> {setPortraitSource(\"/rewer/uploads/portraits/0.jpg\")}} alt=\"Portrait\" /><br />\r\n                    {(artist.id > 0)?\r\n                    (<Fragment>\r\n                        <input ref={imageInput} type=\"file\" accept=\".png,.jpg\" className=\"file-input\" />\r\n                        <p>It is recommended to use pictures with the standard portrait image ratio (9:16)</p>\r\n                        <button onClick={uploadImage} >Upload</button>\r\n                    </Fragment>):\r\n                    (<Fragment>\r\n                        <p>Create the artist's page to modify their portrait.</p>\r\n                    </Fragment>)}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDetails;","import React, { useState, useEffect } from 'react'\r\nimport { insertArtist, selectDetailedArtist, updateArtist } from '../callers/artistCaller'\r\nimport EditDetails from '../components/artist/EditDetails'\r\nimport { useBinder } from '../hooks'\r\nimport { changeParam, getParameter } from '../urlManager'\r\n\r\nexport default function EditArtist() {\r\n    const [artist, setArtist, bindArtist] = useBinder({id: parseInt(getParameter(\"artistId\")), name: \"\", birthPlace: \"\", birthDate: new Date(), deathPlace: \"\", deathDate: new Date(), bio: \"\"})\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(artist.id > 0){\r\n            getArtist();\r\n        }\r\n    }, []);\r\n\r\n    async function getArtist(){\r\n        const selectedArtist = await selectDetailedArtist(artist.id);\r\n        if(selectedArtist){\r\n            setArtist(selectedArtist);\r\n        } else {\r\n            alert(\"Server error: could not download artist data.\");\r\n        }\r\n    }\r\n\r\n    async function createArtist(){\r\n        const newId = await insertArtist(artist);\r\n        if(newId){\r\n            setMainMsg(\"Artist's page successfully created.\");\r\n            changeParam({name: \"artistId\", value: newId.toString()});\r\n            setArtist({...artist, id: newId});\r\n        } else{\r\n            setMainMsg(\"Internal error: the server was unable to fulfill your request.\");\r\n        } \r\n    }\r\n\r\n    async function saveArtist(){\r\n        if(await updateArtist(artist)){\r\n            setMainMsg(`Changes saved: ${new Date().getHours()} : ${new Date().getMinutes()}`);\r\n        } else {\r\n            setMainMsg(\"WARNING: your last attempt to save your work was declined by the server.\");\r\n            alert(\"Request failed: server error.\");\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {mainMsg}\r\n            <br/>\r\n            {(artist.id > 0)? \r\n            (<button onClick={saveArtist}>Save changes</button>): \r\n            (<button onClick={createArtist}>Create artist's page</button>)}\r\n            <EditDetails artist={artist} setArtist={setArtist} bindArtist={bindArtist} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { ICast } from '../../../common/cast';\r\n\r\ninterface ICastRow{\r\n    cast: ICast;\r\n}\r\n\r\nexport const CastRow: React.FC<ICastRow> = ({cast}: ICastRow) => {\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/portraits/${cast.artistId}.jpg`} alt={cast.artistName} />\r\n            <span><Link to={`/star?artistId=${cast.artistId}`} >{cast.artistName}</Link></span>\r\n            <p className=\"cast-row-item\">{cast.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastRow;","import React from 'react'\r\nimport { ICast } from '../../../common/cast';\r\nimport CastRow from './CastRow';\r\n\r\ninterface ICastList{\r\n    casts: ICast[];\r\n}\r\n\r\nexport const CastList: React.FC<ICastList> = ({casts}: ICastList) => {\r\n    return (\r\n        <div>\r\n            {casts.map(c=> {\r\n                return <CastRow key={`cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { selectLatestMovies } from '../../callers/movieCaller';\r\nimport MovieDiv from './MovieDiv';\r\n\r\nexport default function FeaturedSides() {\r\n    const[featuredMovies, setFeaturedMovies] = useState([]);\r\n    useEffect(()=>{\r\n        getLatestFeatures();\r\n    }, []);\r\n\r\n    async function getLatestFeatures(){\r\n        const index = Math.floor(Math.random()*5);\r\n        let movies = await selectLatestMovies(2, index);\r\n        if(movies){\r\n            setFeaturedMovies(movies);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Featured Films</h3>\r\n                    <div className=\"double-grid\">\r\n                        {featuredMovies.map(f=> {\r\n                            return (<Link key={`featured-${f.id}`} to={`/movie?movieId=${f.id}`}>\r\n                                        <MovieDiv movie={f} />\r\n                                    </Link>)\r\n                        })}\r\n                    </div>  \r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const MainScore: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"main-score high\");\r\n        } else if(value < 4){\r\n            setScoreClass(\"main-score low\");\r\n        } else {\r\n            setScoreClass(\"main-score\");\r\n        }\r\n    }, [value]);\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{Math.round(value * 10)/10}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScore;","import React, { Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IMovie } from '../../../common/movie';\r\nimport { getDay, getMonth, getYear } from '../../dateParser'\r\nimport MainScore from './MainScore'\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieInfo{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieInfo: React.FC<IMovieInfo> = ({movie}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"title-grid\">\r\n                <p className=\"title\">{movie.title}</p>\r\n                <MainScore value={movie.avgScore} />\r\n            </div>\r\n            <div>\r\n            { parseInt(localStorage.getItem(\"permission\")) > 1 ?\r\n                    (<Link to={`/editmovie?movieId=${movie.id}`} >Edit this movie's page</Link>) : \r\n                    (<Fragment></Fragment>)\r\n                    }\r\n            </div>                     \r\n            {(movie.genres != null)?\r\n            (movie.genres.map(g=> {\r\n                return <Link key={`genre-${g.id}`} className=\"genre\" to={\"todo\"}>{g.genreName}</Link>\r\n            })):\r\n            (<Fragment></Fragment>)\r\n            }\r\n        \r\n            <div className=\"movie-info-grid\">               \r\n                <div className=\"movie-info-grid-item\">\r\n                    <p>{movie.summary}</p>\r\n                    <p>Premier: {`${getDay(movie.releaseDate.toString())} ${getMonth(movie.releaseDate.toString())}  ${getYear(movie.releaseDate.toString())}`}</p>\r\n                    <p>Runtime: {`${movie.runtime} minutes`}</p>\r\n                    <p>Directed by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 1).map(m=>{\r\n                            return <li key={`director-link-${m.artistId}`} ><Link className=\"star\" to={`/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Written by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 3).map(m=> {\r\n                            return <li key={`director-link-${m.artistId}`}><Link className=\"star\" to={`/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link><br/></li>\r\n                        })} \r\n                    </ul>                        \r\n                </div>\r\n                {window.screen.width > 800 ?\r\n                (<img src={`/rewer/uploads/posters/${movie.id}.jpg`} className=\"poster\" title={movie.title} alt={`${movie.title}-poster`} />):\r\n                (<Fragment></Fragment>)}\r\n                   \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default MovieInfo;\r\n","import React from 'react'\r\nimport { IReview } from '../../../common/review';\r\nimport { ReviewRow } from './ReviewRow';\r\n\r\ninterface IReviewList{\r\n    reviews: IReview[];\r\n}\r\n\r\nexport const ReviewList: React.FC<IReviewList> = ({reviews}: IReviewList) => {\r\n    return (\r\n        <div>\r\n            {reviews.map(r=>{\r\n                return <ReviewRow key={`review-${r.id}`} review={r} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewList;","import React, { useRef } from 'react'\r\nimport { EReviewOrderBy } from '../../callers/reviewCaller';\r\n\r\ninterface IReviewOrderBySelect{\r\n   defaultValue: EReviewOrderBy;\r\n   onUpdate: (newValue: EReviewOrderBy) => void;\r\n}\r\n\r\nexport const ReviewOrderBySelect: React.FC<IReviewOrderBySelect> = ({defaultValue, onUpdate}: IReviewOrderBySelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function update(){\r\n        onUpdate(EReviewOrderBy[select.current.value]);\r\n    }\r\n    return (\r\n        <select ref={select} onChange={update} value={defaultValue}>\r\n            <option value={EReviewOrderBy.popIndex}>Most popular</option>\r\n            <option value={EReviewOrderBy.date}>Latest</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ReviewOrderBySelect;\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { normalFormat } from '../../dateParser';\r\nimport { useAsyncReference } from '../../hooks';\r\nimport { EReviewOrderBy, selectReviewsByMovie } from \"../../callers/reviewCaller\";\r\nimport ReviewList from './ReviewList';\r\nimport ReviewOrderBySelect from './ReviewOrderBySelect';\r\nimport { IMovie } from '../../../common/movie';\r\n\r\n\r\ninterface IMovieReviewFeed{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieReviewFeed: React.FC<IMovieReviewFeed> = ({movie}: IMovieReviewFeed) => {\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const [orderBy, setOrderBy] = useState(undefined);\r\n    const [reviewHeader, setReviewHeader] = useState(\"\");\r\n    const reviewPerPage = 5;\r\n    useEffect(()=>{\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n    useEffect(()=>{\r\n        if(new Date().getTime() >= new Date(movie.releaseDate).getTime()){\r\n            if(orderBy === EReviewOrderBy.popIndex){\r\n                if(movie.id > 0) getReviews();\r\n            } else {\r\n                setOrderBy(EReviewOrderBy.popIndex);\r\n            }          \r\n        } else {\r\n            setReviewHeader(`Reviews will be available on ${normalFormat(movie.releaseDate.toString())}`);\r\n        } \r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, [movie.id, movie.releaseDate]);\r\n\r\n    useEffect(()=>{\r\n        if(movie.id > 0 && orderBy != null){\r\n            getReviews();\r\n        }\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, [orderBy]);\r\n\r\n    async function getReviews(){\r\n        let requestedReviews = await selectReviewsByMovie({ movieId: movie.id, limit: reviewPerPage, offset: 0, orderby: orderBy});\r\n        if(requestedReviews){\r\n            setReviews(requestedReviews);\r\n            setReviewHeader(\"Reviews\");\r\n            if(requestedReviews.length === reviewPerPage) addWindowListener();                \r\n        } else {\r\n            setReviewHeader(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeWindowListener();\r\n        let requestedReviews = await selectReviewsByMovie({ movieId: movie.id, limit: reviewPerPage, offset: reviews.current.length, orderby: orderBy});\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) addWindowListener();\r\n        } else {\r\n            alert(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function windowListener(){\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            getMoreReviews();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"center-text\">{reviewHeader}</h2>\r\n            {new Date().getTime() >= new Date(movie.releaseDate).getTime() ? \r\n            (<Fragment>\r\n                <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                <ReviewList reviews={reviews.current} />\r\n            </Fragment>): \r\n            (<Fragment></Fragment>)}    \r\n        </div>\r\n    )\r\n}\r\nexport default MovieReviewFeed;","import React, { Fragment } from 'react'\r\nimport { IReview } from '../../../common/review'\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Score } from '../movie/Score'\r\nimport \"./reviewStyle.css\"\r\n\r\ninterface IEditableReview{\r\n    review: IReview;\r\n    onEdit: (rev: IReview) => void;\r\n    onDelete: (toDelete: IReview)=> void;\r\n}\r\n\r\nexport const AddedReview: React.FC<IEditableReview> = ({review, onEdit, onDelete}: IEditableReview)=> {\r\n    function edit(){\r\n        onEdit(review);\r\n    }\r\n\r\n    function removeReview(){\r\n        onDelete(review);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"review-grid\">\r\n                <div>\r\n                    <button onClick={edit} >Edit</button>\r\n                    <button onClick={removeReview}>Delete</button>\r\n                </div>               \r\n                <p className=\"review-date\">{normalFormat(review.date)}</p>\r\n                <Score value={review.score} />\r\n            </div>\r\n            <p>{review.text}</p>\r\n            <p>{review.popIndex} points</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddedReview;","import React, { useState, useEffect } from 'react'\r\nimport \"./movieStyle.css\"\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Score } from './Score'\r\ninterface IScoreAdder{\r\n    startValue: number;\r\n    setScore: (newValue: number)=> void;\r\n}\r\n\r\nexport const ScoreAdder: React.FC<IScoreAdder> = ({startValue, setScore}: IScoreAdder)=> {\r\n    const [value, setValue] = useState(startValue);\r\n    function increment(){\r\n        if(value < 10){\r\n            setValue(oldValue => { return oldValue + 1});\r\n        }\r\n    }\r\n\r\n    function decrement(){\r\n        if(value > 1){\r\n            setValue(oldValue => { return oldValue - 1});\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setScore(value);\r\n    }, [value]);\r\n\r\n    return (\r\n        <div>\r\n            <Score value={value} />\r\n            <button onClick={increment} className=\"score-btn plus\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n            <button onClick={decrement} className=\"score-btn minus\">\r\n                <FontAwesomeIcon icon={faMinus} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IReview } from '../../../common/review';\r\nimport { useBinder } from '../../hooks'\r\nimport { ScoreAdder } from '../movie/ScoreAdder'\r\n\r\ninterface IPostReview{\r\n    review: IReview;\r\n    onPost: (currentReview: IReview) => void;\r\n}\r\n\r\nexport const PostReview: React.FC<IPostReview> = ({review, onPost}: IPostReview) => {\r\n    const [myReview, setMyReview, bindMyReview] = useBinder(review);\r\n    function updateScore(newValue: number){\r\n        setMyReview({...myReview, score: newValue});\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"score-grid\">\r\n                <textarea className=\"score-item\" name=\"text\" rows={10} value={myReview.text} onChange={bindMyReview} />  \r\n                <div className=\"score-item\"><ScoreAdder startValue={review.score} setScore={updateScore}/></div>                                \r\n            </div>\r\n        <button onClick={()=>{ onPost(myReview) }}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { selectMyReview, insertReview, deleteReview, updateReview } from \"../../callers/reviewCaller\"\r\nimport LoginMsg from '../profile/LoginMsg';\r\nimport { AddedReview } from './AddedReview';\r\nimport { PostReview } from './PostReview';\r\nimport { IReview } from \"../../../common/review\"\r\nimport { IMovie } from '../../../common/movie';\r\n\r\ninterface IMyReview{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MyReview: React.FC<IMyReview> = ({movie}: IMyReview) => { \r\n    const [reviewContent, setReviewContent] = useState(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: localStorage.getItem(\"userName\")}} onPost={postReview} />);\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            setReviewContent(<LoginMsg message={\"post a review\"} />);\r\n        } else {\r\n            if(movie.id > 0){\r\n                getMyReview();\r\n            }\r\n        }\r\n        async function getMyReview(){\r\n            const response = await selectMyReview(movie.id);\r\n            if(response.status == 404){\r\n                setMainMsg(\"You haven't posted a review for this movie yet.\");\r\n                setReviewContent(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: \"\"}} onPost={postReview} />);   \r\n            } else if(response.status === 200){\r\n                let review = await response.json();\r\n                setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            } else {\r\n                alert(\"Server error\");\r\n                setMainMsg(\"Your review info could not bet downloaded from the server.\");\r\n            }\r\n        }  \r\n    }, [movie.id]);\r\n\r\n    useEffect(()=>{\r\n        if(new Date().getTime() < new Date(movie.releaseDate).getTime()){\r\n            setReviewContent(<p>This movie has not been released yet.</p>);\r\n            setMainMsg(\"\");\r\n        }\r\n    }, [movie]);\r\n\r\n    function startEditing(review: IReview){\r\n        setReviewContent(<PostReview review={review} onPost={saveReview} /> );\r\n        setMainMsg(\"Editing your review:\");\r\n    }\r\n\r\n    async function saveReview(review: IReview){\r\n        if(await updateReview(review)){\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            setMainMsg(\"Review has been updated.\");\r\n        }\r\n    }\r\n\r\n    async function postReview(review: IReview){\r\n        const newId = await insertReview(review);\r\n        if(newId){\r\n            review = {...review, id: newId, date: new Date().toLocaleDateString(\"hu-HU\"), popIndex: 1};\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            setMainMsg(\"Your review has been posted.\");\r\n        } else {\r\n            alert(\"Server error: could not post your review.\");\r\n        }\r\n    }\r\n\r\n    async function removeReview(review: IReview){\r\n        if(await deleteReview(review.id)){\r\n            setMainMsg(\"Your review has been deleted.\");\r\n            setReviewContent(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: \"\"}} onPost={postReview} /> );\r\n        } else {\r\n            alert(\"Server error: could not delete your review.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">My Review</h3>\r\n            <p>{mainMsg}</p>\r\n            <div className=\"review-container\">\r\n                {reviewContent}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport CastList from '../components/cast/CastList';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport GenreSide from '../components/movie/GenreSide';\r\nimport MovieInfo from '../components/movie/MovieInfo'\r\nimport MovieReviewFeed from '../components/review/MovieReviewFeed';\r\nimport { MyReview } from '../components/review/MyReview';\r\nimport { selectDetailedMovie } from '../callers/movieCaller';\r\nimport { getParameter } from '../urlManager';\r\nimport { IDetailedMovie } from '../../common/movie';\r\nimport { ICast } from '../../common/cast';\r\ninterface IMoviePage{\r\n\r\n}\r\nexport default function Movie() {\r\n    const [movie, setMovie] = useState<IDetailedMovie>({id: parseInt(getParameter(\"movieId\")), title: \"\", releaseDate: \"\", summary: \"\", genres: [], casts: [], avgScore: 0});\r\n    const [actors, setActors] = useState<ICast[]>([]);\r\n    useEffect(()=>{\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        requestMovie(); \r\n    }, []);\r\n\r\n    async function requestMovie(){\r\n        let selectedMovie = await selectDetailedMovie(movie.id);\r\n        if(selectedMovie){\r\n            setMovie(selectedMovie);\r\n            setActors(selectedMovie.casts.filter(c=> c.castTypeId > 3));\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <FeaturedSides />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <GenreSide length={3} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <MovieInfo movie={movie} />\r\n                    <MovieReviewFeed movie={movie} />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <h3 className=\"center-text\">Cast</h3> \r\n                        <CastList casts={actors} /> \r\n                    </div>         \r\n                    <div className=\"side-container medium-side\">     \r\n                        <MyReview movie={movie} />\r\n                    </div>               \r\n                </div>\r\n             </div>) : \r\n            (<div className=\"main-container\" >\r\n            <MovieInfo movie={movie} />\r\n            <h2>Cast</h2>\r\n            <CastList casts={actors} />\r\n            <MyReview movie={movie} />\r\n            <MovieReviewFeed movie={movie} />\r\n        </div>) }\r\n        </Fragment>\r\n           \r\n    )\r\n/*\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <FeaturedSides />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <GenreSide length={3} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <MovieInfo movie={movie} />\r\n                    <MovieReviewFeed movie={movie} />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <h3 className=\"center-text\">Cast</h3> \r\n                        <CastList casts={actors} /> \r\n                    </div>         \r\n                    <div className=\"side-container medium-side\">     \r\n                        <MyReview movie={movie} />\r\n                    </div>               \r\n                </div>\r\n             </div>) : \r\n            (<div className=\"main-container\" >\r\n            <MovieInfo movie={movie} />\r\n            <h2>Cast</h2>\r\n            <CastList casts={actors} />\r\n            <MyReview movie={movie} />\r\n            <MovieReviewFeed movie={movie} />\r\n        </div>) }\r\n        </Fragment>\r\n           \r\n    ) */\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedArtist } from '../../../common/artist';\r\n\r\ninterface IStarInfo{\r\n    artist: IDetailedArtist;\r\n}\r\n//ebbe már annyiszor nyúltam bele, hogy végül sikerült teljesen követhetetlenné tenni\r\nexport const StarInfo: React.FC<IStarInfo> = ({artist}: IStarInfo) => {\r\n    const [died, setDied] = useState(null);\r\n    const deathInfo = \r\n    <Fragment>\r\n        <p>Died: <i>{`${normalFormat(artist.deathDate.toString())},`}</i></p>\r\n        <p><i>{artist.deathPlace}</i></p>\r\n    </Fragment>;\r\n\r\n    const [bio, setBio] = useState(<p></p>);\r\n    const briefBio = <Fragment><p>{`${artist.bio.substring(0, 1500)}...`}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    useEffect(()=>{\r\n        if(artist.deathPlace != null && artist.deathPlace !== \"\"){\r\n            setDied(deathInfo);\r\n        } else {\r\n            setDied(<Fragment></Fragment>);\r\n        }\r\n    }, [artist]);\r\n\r\n    useEffect(()=>{\r\n        if(artist.bio.length > 1500){\r\n            showBrief();\r\n        } else {\r\n            showAll();\r\n        }\r\n    }, [artist])\r\n\r\n    function showAll(){\r\n        setBio(<Fragment>\r\n            <p>{artist.bio}</p>\r\n            {artist.bio.length > 1500 ?\r\n            (<p onClick={showBrief} className=\"show-more\">Show less</p>):\r\n            (<Fragment></Fragment>)}\r\n        </Fragment>);\r\n    }\r\n\r\n    function showBrief(){\r\n        setBio(briefBio);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {window.screen.width > 600 ? \r\n        (<div className=\"info-grid\">\r\n                <div className=\"info-grid-item\">\r\n                    <h2>{artist.name}</h2>\r\n                    <p>\r\n                    {parseInt(localStorage.getItem(\"permission\")) > 1 ?\r\n                    (<Link to={`/editartist?artistId=${artist.id}`}>Edit this star's page</Link>) : \r\n                    (<Fragment></Fragment>)\r\n                    }\r\n                    </p>\r\n                    {bio}\r\n                </div>\r\n                <div>\r\n                    <img className=\"info-portrait\" src={`/rewer/uploads/portraits/${artist.id}.jpg`} alt={`${artist.name}_portrait`} />\r\n                    <p>Born: <i>{`${normalFormat(artist.birthDate.toString())},`}</i></p>\r\n                    <p><i>{artist.birthPlace}</i></p>  \r\n                    {died}\r\n                </div>\r\n            </div>) :\r\n            (<div className=\"info-grid-item\">\r\n                <h2>{artist.name}</h2>\r\n                <p>\r\n                    {parseInt(localStorage.getItem(\"permission\")) > 1 ?\r\n                    (<Link to={`/editartist?artistId=${artist.id}`}>Edit this star's page</Link>) : \r\n                    (<Fragment></Fragment>)\r\n                    }\r\n                </p>\r\n                <img className=\"info-portrait\" src={`/rewer/uploads/portraits/${artist.id}.jpg`} alt={`${artist.name}_portrait`} />\r\n                <p>Born: <i>{`${normalFormat(artist.birthDate.toString())},`}</i></p>\r\n                <p><i>{artist.birthPlace}</i></p>  \r\n                {died}\r\n                {bio}\r\n            </div>\r\n           )\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IMovieCast } from '../../../common/cast';\r\nimport { getYear } from '../../dateParser'\r\ninterface IArtistCastRow{\r\n    cast: IMovieCast;\r\n}\r\nexport const ArtistCastRow: React.FC<IArtistCastRow> = ({cast}: IArtistCastRow)=> {\r\n    const [castName, setCastName] = useState(cast.name);\r\n    useEffect(()=>{\r\n        if(cast.castTypeId > 3){\r\n            setCastName(cast.name);\r\n        } else {\r\n           setNonActor();\r\n        }\r\n        function setNonActor(){\r\n        if(cast.name === \"\"){\r\n            setCastName(cast.castTypeName);\r\n        } else {\r\n            setCastName(`${cast.castTypeName} (${cast.name})`);\r\n        }\r\n        console.log(\"FAST\");\r\n    }\r\n    }, [cast]);\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/posters/${cast.movieId}.jpg`} alt={cast.movieName} />\r\n            <span><Link to={`/movie?movieId=${cast.movieId}`} >{`${cast.movieTitle} (${getYear(cast.movieDate)})`}</Link></span>\r\n            <p>{castName}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistCastRow;\r\n","import React from 'react'\r\nimport { IMovieCast } from '../../../common/cast'\r\nimport ArtistCastRow from './ArtistCastRow'\r\n\r\ninterface IArtistCastList{\r\n    casts: IMovieCast[];\r\n}\r\n\r\nexport const ArtistCastList: React.FC<IArtistCastList> = ({casts}: IArtistCastList) => {\r\n    return (\r\n        <div>\r\n            {casts.map(c=>{\r\n                return <ArtistCastRow key={`artist-cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistCastList;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { getYear } from '../../dateParser'\r\nimport { ISeriesCast } from '../../../common/cast'\r\ninterface IArtistSeriesCastRow{\r\n    cast: ISeriesCast;\r\n}\r\nexport const ArtistSeriesCastRow: React.FC<IArtistSeriesCastRow> = ({cast}: IArtistSeriesCastRow)=> {\r\n    const [castName, setCastName] = useState(cast.name);\r\n    useEffect(()=>{\r\n        if(cast.castTypeId > 3){\r\n            setCastName(cast.name);\r\n        } else {\r\n           setNonActor();\r\n        }\r\n        function setNonActor(){\r\n        if(cast.name === \"\"){\r\n            setCastName(cast.castTypeName);\r\n        } else {\r\n            setCastName(`${cast.castTypeName} (${cast.name})`);\r\n        }\r\n    }\r\n    }, [cast]);\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/seriesposters/${cast.seriesId}.jpg`} alt={cast.movieName} />\r\n            <span><Link to={`/series?seriesId=${cast.seriesId}`} >{`${cast.seriesTitle} (${getYear(cast.firstEpisodeDate)})`}</Link></span>\r\n            <p>{castName}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistSeriesCastRow;\r\n","import React from 'react'\r\nimport { ISeriesCast } from '../../../common/cast'\r\nimport ArtistSeriesCastRow from './ArtistSeriesCastRow'\r\n\r\ninterface IArtistSeriesCastList{\r\n    casts: ISeriesCast[];\r\n}\r\n\r\nexport const ArtistSeriesCastList: React.FC<IArtistSeriesCastList> = ({casts}: IArtistSeriesCastList) => {\r\n    return (\r\n        <div>\r\n            {casts.map(c=>{\r\n                return <ArtistSeriesCastRow key={`artist-cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistSeriesCastList;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { selectLatestPreviewSeries } from '../../callers/seriesCaller';\r\nimport SeriesDiv from './SeriesDiv';\r\n\r\ninterface IFeaturedSeriesSides{\r\n   // series: ISeries[];\r\n}\r\n\r\nexport const FeaturedSeriesSides: React.FC<IFeaturedSeriesSides> = () => {\r\n    const [featueredSeries, setFeaturedSeries] = useState([]);\r\n    useEffect(()=>{\r\n        requestFeaturedSeries();\r\n    }, []);\r\n\r\n    async function requestFeaturedSeries(){\r\n        let featured: IPreviewSeries[] = await selectLatestPreviewSeries(2, 0);\r\n        if(featured){\r\n            setFeaturedSeries(featured);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Featured Series</h3>\r\n                <div className=\"double-grid\">\r\n                    {featueredSeries.map(f=> {\r\n                        return (<Link key={`featured-${f.id}`} to={`series?seriesId=${f.id}`}>\r\n                                    <SeriesDiv series={f} />\r\n                                </Link>)\r\n                    })}\r\n                </div>  \r\n        </div>\r\n    )\r\n}\r\nexport default FeaturedSeriesSides;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { selectDetailedArtist } from '../callers/artistCaller';\r\nimport { StarInfo } from '../components/artist/StarInfo';\r\nimport ArtistCastList from '../components/cast/ArtistCastList';\r\nimport ArtistSeriesCastList from '../components/cast/ArtistSeriesCastList';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport GenreSide from '../components/movie/GenreSide';\r\nimport TopRatedSides from '../components/movie/TopRatedSides';\r\nimport SearchSide from '../components/SearchSide';\r\nimport FeaturedSeriesSides from '../components/series/FeaturedSeriesSides';\r\nimport { getParameter } from '../urlManager';\r\n\r\nexport default function Star() {\r\n    const [artist, setArtist] = useState({id: parseInt(getParameter(\"artistId\")), name: \"\", birthPlace: \"\", birthDate: new Date(), deathPlace: \"\", deathDate: new Date(), bio: \"\", movieCasts: [], seriesCasts: []});\r\n    useEffect(()=>{\r\n        requestArtist();\r\n    }, []);\r\n    async function requestArtist(){\r\n        const detailedArtist = await selectDetailedArtist(artist.id);\r\n        if(detailedArtist){\r\n            setArtist(detailedArtist);\r\n        } else {\r\n            alert(\"Server error.\");\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 1100 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container large-side\">\r\n                       {Math.random() > 0.5 ?\r\n                       (<FeaturedSides />):                        \r\n                       (<FeaturedSeriesSides />)}\r\n                    </div>\r\n                    <div className=\"side-container medium-side\">\r\n                        <GenreSide length={5} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <StarInfo artist={artist} />\r\n                    <ArtistCastList casts={artist.movieCasts} />\r\n                    <ArtistSeriesCastList casts={artist.seriesCasts} />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <SearchSide />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\">\r\n                        <TopRatedSides />\r\n                    </div>\r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <StarInfo artist={artist} />\r\n                <ArtistCastList casts={artist.movieCasts} />\r\n            </div>)    \r\n        } \r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","import { IFollow } from \"../../common/follow\";\r\nimport { POSTAsynch } from \"./caller\";\r\n\r\nexport async function insertFollow(follow: IFollow): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/follow/insert_follow\", follow);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteFollow(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/follow/delete_follow\", { id: id });\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React, { useRef } from 'react'\r\n\r\ninterface IPermissionSelect{\r\n    defaultValue: string;\r\n    onUpdate: (newValue: string) => void;\r\n}\r\n\r\nexport const PermissionSelect: React.FC<IPermissionSelect> = ({defaultValue, onUpdate}: IPermissionSelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function change(){\r\n        onUpdate(select.current.value);\r\n    }\r\n    return (\r\n        <select ref={select} value={defaultValue} onChange={change} >\r\n            <option value=\"0\">Banned</option>\r\n            <option value=\"1\">User</option>\r\n            <option value=\"2\">Moderator</option>\r\n            <option value=\"3\">Admin</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default PermissionSelect;\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { IDetailedUser } from '../../../common/user';\r\nimport { updatePermission } from '../../callers/authUserCaller';\r\nimport { insertFollow, deleteFollow } from '../../callers/followCaller';\r\nimport PermissionSelect from './PermissionSelect';\r\nimport \"./profileStyle.css\"\r\n\r\ninterface IUserInfo{\r\n    user: IDetailedUser;\r\n}\r\n\r\nexport const UserInfo: React.FC<IUserInfo> = ({user}: IUserInfo) => {\r\n    const [getUser, setUser] = useState<IDetailedUser>({...user});\r\n    const [followBtn, setFollowBtn] = useState(<Fragment></Fragment>);\r\n    const [imgSrc, setImgSrc] = useState(`/rewer/uploads/avatars/${getUser.userName}.jpg`);\r\n    const [follow, setFollow] = useState({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n   \r\n   async function updateUserPermission(newValue: string){\r\n        const newPermission = { id:0, userName: getUser.userName, level: parseInt(newValue) };\r\n        if(await updatePermission(newPermission)){\r\n            setUser({...getUser, permission: newPermission.level});\r\n        } else {\r\n            alert(\"Server error\");\r\n        }  \r\n        setUser( {...getUser, permission: parseInt(newValue)});\r\n    } \r\n\r\n    useEffect(()=>{\r\n        setUser(user);\r\n    }, [user])\r\n\r\n    useEffect(()=>{\r\n        if(canBeFollowed(user)){\r\n            placeFollowBtn();\r\n        }\r\n    }, [follow]);\r\n\r\n    useEffect(()=>{\r\n        setFollow({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n    }, [getUser])\r\n\r\n    function canBeFollowed(toFollow: IDetailedUser){\r\n        return localStorage.getItem(\"userName\") != null && localStorage.getItem(\"userName\") !== toFollow.userName;\r\n    }\r\n\r\n    function placeFollowBtn(){\r\n        if(follow.id > 0){\r\n            setFollowBtn(<button onClick={unFollowUser} className=\"unfollow\">Unfollow</button>);\r\n        } else {\r\n            setFollowBtn(<button onClick={followUser} className=\"follow\">Follow</button>);\r\n        }\r\n    }\r\n\r\n    async function followUser(){\r\n        setFollowBtn(<button className=\"follow\">Follow</button>); //prevent double clicking   \r\n\r\n        let newId = await insertFollow(follow);\r\n        if(newId){\r\n            setFollow({...follow, id: newId});\r\n        } else {\r\n            alert(\"Server error.\");\r\n        } \r\n    }\r\n\r\n    async function unFollowUser(){\r\n        setFollowBtn(<button className=\"unfollow\">Unfollow</button>);\r\n        if(await deleteFollow(follow.id)){\r\n            setFollow({...follow, id: 0});\r\n        } else {\r\n            alert(\"Server error.\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{getUser.nickName}</h1>\r\n            {followBtn}\r\n            <span>{user.followerCount} followers</span>\r\n            {parseInt(localStorage.getItem(\"permission\")) === 3 && user.userName !== localStorage.getItem(\"userName\") ? \r\n                        (<PermissionSelect defaultValue={getUser.permission.toString()} onUpdate={(newValue: string)=>{updateUserPermission(newValue)}} />): \r\n                        (<Fragment></Fragment>)}\r\n            <div className=\"user-grid\">\r\n                <div>\r\n                    <img src={imgSrc} onError={()=>{ setImgSrc(`/rewer/uploads/avatars/default.jpg`) }} alt=\"user-avatar\" />                   \r\n                </div>\r\n                <div>\r\n                    <p>{getUser.about}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { useAsyncReference } from '../../hooks';\r\nimport { getParameter } from '../../urlManager';\r\nimport UserReviewRow from \"../review/UserReviewRow\";\r\nimport ReviewOrderBySelect from '../review/ReviewOrderBySelect';\r\nimport UserInfo from './UserInfo';\r\nimport ReviewRowM from '../review/ReviewRowM';\r\nimport SearchSide from '../SearchSide';\r\nimport FeaturedSeriesSides from '../series/FeaturedSeriesSides';\r\nimport FeaturedSides from '../movie/FeaturedSides';\r\nimport { selectDetailedUser } from '../../callers/userCaller';\r\nimport { EReviewOrderBy, selectReviewsByUser } from '../../callers/reviewCaller';\r\nimport { IUserReview } from '../../../common/review';\r\n\r\nexport default function User() {\r\n    const [user, setUser] = useState({userName: getParameter(\"userName\"), nickName: \"\", permission: 1, about: \"\"});\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const reviewPerPage = 5;\r\n    const [orderBy, setOrderBy] = useState(EReviewOrderBy.date);\r\n    useEffect(()=>{\r\n        getUserInfo();\r\n        return ()=>{\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        requestReviews();\r\n        return ()=>{\r\n            removeWindowListener();\r\n        }\r\n    }, [orderBy]);\r\n\r\n    async function getUserInfo(){\r\n        let userInfo = await selectDetailedUser(getParameter(\"userName\"));\r\n        console.log(userInfo);\r\n        if(userInfo){\r\n            setUser(userInfo);\r\n        } else {\r\n            //TODO\r\n        }\r\n    }\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    var windowListener = function() {\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            window.removeEventListener(\"scroll\", windowListener);\r\n            getMoreReviews();\r\n        }\r\n    } \r\n\r\n    async function requestReviews(){\r\n        removeWindowListener();\r\n        let userReviews: IUserReview[] = await selectReviewsByUser(user.userName, reviewPerPage, 0, orderBy);\r\n        if(userReviews){\r\n            setReviews(userReviews);\r\n            if(userReviews.length === reviewPerPage) {} addWindowListener();\r\n        } \r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeWindowListener(); \r\n        let requestedReviews = await selectReviewsByUser(user.userName, reviewPerPage, reviews.current.length, orderBy);\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) {} //addWindowListener();\r\n        } else {\r\n            alert(\"Server errror: could not download reviewdata.\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSides />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <UserInfo user={user} />\r\n                    <br/>\r\n                    <h2>{user.nickName}'s reviews</h2>\r\n                    <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                    {window.screen.width > 600 ? \r\n                    (<Fragment>{reviews.current.map(r=> {\r\n                        return <UserReviewRow key={`review-${r.id}`} review={{...r, nickName: \"\"}} />\r\n                    })}</Fragment>) :\r\n                    (<Fragment>{reviews.current.map(r=>{\r\n                        return <ReviewRowM key={`review-${r.id}`} review={{...r, nickName: \"\"}} />\r\n                    })}</Fragment>)\r\n                    }\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <SearchSide />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>\r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <UserInfo user={user} />\r\n                <br/>\r\n                <h2>{user.nickName}'s reviews</h2>\r\n                <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                {window.screen.width > 600 ? \r\n                (<Fragment>{reviews.current.map(r=> {\r\n                    return <UserReviewRow key={`review-${r.id}`} review={{...r, nickName: \"\"}} />\r\n                })}</Fragment>) :\r\n                (<Fragment>{reviews.current.map(r=>{\r\n                    return <ReviewRowM key={`review-${r.id}`} review={{...r, nickName: \"\"}} />\r\n                })}</Fragment>)\r\n                }\r\n            </div>)}\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport FollowedReviews from '../components/review/FollowedReviews'\r\nimport FollowedUsers from '../components/profile/FollowedUsers'\r\nimport TopRatedSides from '../components/movie/TopRatedSides';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport FollowingUsers from '../components/profile/FollowingUsers';\r\nexport default function FollowsPage() {\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 1100 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <FollowedUsers />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\" >\r\n                        <TopRatedSides />                 \r\n                    </div>  \r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <FollowedReviews />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">     \r\n                        <FollowingUsers length={10} />                                    \r\n                    </div>\r\n                    <div className=\"side-container medium-side\">    \r\n                        <FeaturedSides />     \r\n                    </div>                     \r\n                </div>\r\n             </div>):\r\n            (<div className=\"main-container\">\r\n                <FollowedReviews />\r\n            </div>)}\r\n        </Fragment>\r\n    )\r\n}","import { ISeason } from \"../../common/season\";\r\nimport { POSTAsynch } from \"./caller\";\r\n\r\nexport async function insertSeason(season: ISeason): Promise<number | null>{\r\n    const response = await POSTAsynch(\"/season/insert_season\", season);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteSeason(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"/season/delete_season\", { id: id });\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { ISeason } from '../../../common/season';\r\nimport \"./seriesStyle.css\"\r\n\r\ninterface IEditSeasonRow{\r\n    season: ISeason;\r\n    selectedId: number;\r\n    onSelected: ()=> void;\r\n}\r\n\r\nexport const EditSeasonRow: React.FC<IEditSeasonRow> = ({season, selectedId, onSelected}: IEditSeasonRow) => {\r\n    const [mainClass, setMainClass] = useState(\"season-grid\");\r\n    useEffect(()=>{\r\n        if(season.id === selectedId){\r\n            setMainClass(\"season-grid selected-row\");\r\n        } else {\r\n            setMainClass(\"season-grid\");\r\n        }\r\n    }, [selectedId]);\r\n    return (\r\n        <div onClick={()=> {onSelected();}} className={mainClass}>\r\n            <p>Season {season.order}</p>\r\n            <p>{season.releaseYear}</p>\r\n            <p>{season.episodes.length} episodes</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditSeasonRow;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { normalFormat } from '../../dateParser';\r\n\r\ninterface IEditEpisodeRow{\r\n    episode: IMovie;\r\n    selectedId: number;\r\n    onSelect: ()=> void;\r\n    onDelete: ()=> void;\r\n}\r\n\r\nexport const EditEpisodeRow: React.FC<IEditEpisodeRow> = ({episode, selectedId, onSelect, onDelete}: IEditEpisodeRow) => {\r\n    const [className, setClassName] = useState(\"edit-episode-row\")\r\n    useEffect(()=>{\r\n        if(selectedId === episode.id){\r\n            setClassName(\"edit-episode-row selected-row\");\r\n        } else {\r\n            setClassName(\"edit-episode-row\");\r\n        }\r\n    }, [selectedId]);\r\n    return (\r\n        <div onClick={onSelect} className={className}>\r\n            <p>{episode.title}</p>\r\n            <p>{normalFormat(episode.releaseDate.toString())}</p>\r\n            <p><button onClick={onDelete} >Delete</button></p>\r\n        </div>\r\n    )\r\n}\r\nexport default EditEpisodeRow;","import React, { useState, Fragment, useEffect } from 'react'\r\nimport EditEpisodeRow from './EditEpisodeRow';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { useBinder } from '../../hooks';\r\nimport EditMovieDetails from '../movie/EditMovieDetails';\r\nimport { replacedList } from '../../utils';\r\nimport { parseForInput } from '../../dateParser';\r\nimport { EditCast } from '../movie/EditCast';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ISeason } from '../../../common/season';\r\nimport { insertMovie, updateMovie } from '../../callers/movieCaller';\r\ninterface IEpisodeListEditor{\r\n    season: ISeason;\r\n    setEpisodes: (eps: IMovie[]) => void;\r\n    summary: string;\r\n}\r\n\r\nexport const EpisodeListEditor: React.FC<IEpisodeListEditor> = ({season, setEpisodes, summary}) => {\r\n    const [selectedEpisode, setSelectedEpisode, bindEpisode] = useBinder({id: 0, title: \"\", casts: []});\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(selectedEpisode.id > 0){\r\n            setEpisodes(replacedList(season.episodes, season.episodes.find(s=> s.id === selectedEpisode.id), selectedEpisode));\r\n        } \r\n    }, [selectedEpisode.casts]);\r\n\r\n    async function addEpisode(){\r\n        let newId: number;\r\n        let newDate: Date;\r\n        let newRunTime = 45;\r\n        if(season.episodes.length > 0){\r\n            newDate = new Date(season.episodes[season.episodes.length-1].releaseDate);\r\n            newRunTime = season.episodes[season.episodes.length-1].runtime;\r\n        } else if(!isNaN(parseInt(season.releaseYear))){\r\n            newDate = new Date(`${season.releaseYear}-01-01`);\r\n        } else {\r\n            newDate = new Date(\"2015-01-01\");\r\n        }\r\n        let newEpisode: IMovie = {\r\n            id: 0,\r\n            title: `Season ${season.order}: episode ${season.episodes.length+1}`,\r\n            runtime: newRunTime,\r\n            summary: summary,\r\n            genres: [],\r\n            releaseDate: parseForInput(newDate),\r\n            seasonId: season.id,\r\n            casts: []\r\n        }\r\n        newId = await insertMovie(newEpisode);\r\n        if(newId > 0){\r\n            setEpisodes([...season.episodes, {...newEpisode, id: newId}]);\r\n            setSelectedEpisode({...newEpisode, id: newId});\r\n        } else {\r\n            alert(\"Server error: could not add new episode\");\r\n        }\r\n    }\r\n\r\n    async function saveEpisode(){\r\n        if(await updateMovie(selectedEpisode)){\r\n            setMainMsg(`Episode details saved: ${new Date().getHours()} : ${new Date().getMinutes()}`);\r\n            setEpisodes(replacedList(season.episodes, season.episodes.find(s=> s.id === selectedEpisode.id), selectedEpisode));\r\n        } else {\r\n            setMainMsg(\"Internal error: series details could not be saved.\");\r\n        }\r\n    }\r\n\r\n    async function deleteEpisode(episodeId: number){\r\n        /*\r\n        if(await deleteMovie(episodeId)){\r\n            setEpisodes(season.episodes.filter(e=> e.id !== episodeId));\r\n            if(selectedEpisode.id === episodeId) setSelectedEpisode({id: 0, title: \"\"});\r\n        } else {\r\n            alert(\"Server error: could not delete episode.\");\r\n        } */\r\n    }\r\n\r\n    function handleSelection(episode: IMovie){\r\n        setSelectedEpisode(episode);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {season.episodes.map(e=>{\r\n                return <EditEpisodeRow key={`${e.id}`} onDelete={()=>{ deleteEpisode(e.id)}} episode={e} selectedId={selectedEpisode.id} onSelect={()=>{ handleSelection(e)}} />\r\n            })}\r\n            <div onClick={addEpisode} className=\"add-episode\"><FontAwesomeIcon icon={faPlusSquare} /></div>\r\n            {(selectedEpisode.id > 0) ? \r\n            (<Fragment>\r\n                <button onClick={saveEpisode}>Save</button>\r\n                {mainMsg}\r\n                <EditMovieDetails movie={selectedEpisode} setMovie={setSelectedEpisode} movieBinder={bindEpisode} />\r\n                <EditCast movie={selectedEpisode} setMovie={setSelectedEpisode} season={season} setEpisodes={setEpisodes} />\r\n                </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\nexport default EpisodeListEditor;","import React, { useState, Fragment } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ISeason } from '../../../common/season';\r\nimport { ISeries } from '../../../common/series';\r\nimport { deleteSeason, insertSeason } from '../../callers/seasonCaller';\r\nimport { replacedList } from '../../utils';\r\nimport EditSeasonRow from './EditSeasonRow';\r\nimport EpisodeListEditor from './EpisodeListEditor';\r\ninterface IEditSeasons{\r\n    series: ISeries;\r\n    setSeasons: (seasons: ISeason[]) => void;\r\n}\r\n\r\nexport const EditSeasons: React.FC<IEditSeasons> = ({series, setSeasons}: IEditSeasons) => {\r\n    const [releaseYear, setReleaseYear] = useState(\"\");\r\n    const [selectedSeason, setSelectedSeason] = useState({ id: 0, seriesId: series.id, episodes: []});\r\n\r\n    async function addSeason(){\r\n        let newSeason = {\r\n            id: 0,\r\n            seriesId: series.id,\r\n            releaseYear: releaseYear,\r\n            episodes: [],\r\n            order: series.seasons.length+1\r\n        };\r\n        newSeason.id = await insertSeason(newSeason);\r\n        if(newSeason.id){\r\n            setSeasons([...series.seasons, newSeason]);\r\n        }\r\n    }\r\n\r\n    function updateSelectedSeason(newId: number){\r\n        setSelectedSeason(series.seasons.find(s=> s.id === newId));\r\n    }\r\n\r\n    async function removeLastSeason(){\r\n        const lastId = series.seasons[series.seasons.length-1].id;\r\n        if(await deleteSeason(lastId)){\r\n            setSeasons(series.seasons.filter(s=> s.id !== lastId));\r\n        } else {\r\n            alert(\"Server error\");\r\n        } \r\n    }\r\n\r\n    function replaceToSelectedSeason(episodes: IMovie[]){\r\n        //find the season that is selected inside the series, then replaces it to a new season that is constructed by the selected season and its new episodes\r\n        setSeasons(replacedList(series.seasons, series.seasons.find(s=> s.id === selectedSeason.id), {...selectedSeason, episodes: episodes } ));\r\n        setSelectedSeason({...selectedSeason, episodes: episodes });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"adder-panel\">\r\n            <h3>Add new season: </h3>\r\n                <label>Year</label>\r\n                <input value={releaseYear} onChange={(e)=> { setReleaseYear(e.target.value);}} name=\"releaseYear\" placeholder=\"release\" />\r\n                <button onClick={addSeason}>Add new season</button>\r\n                {series.seasons.length > 0 ?\r\n                (<button onClick={removeLastSeason} >Delete last season</button>) :\r\n                (<Fragment></Fragment>)}\r\n                \r\n            </div>\r\n            {series.seasons.map(s=>{\r\n                return <EditSeasonRow key={s.id} selectedId={selectedSeason.id} onSelected={()=> updateSelectedSeason(s.id)} season={s} />\r\n            })}\r\n            {(series.seasons.length > 0) ? \r\n            (<Fragment>\r\n                <h2 className=\"series-title\">Episodes:</h2>\r\n                <div>\r\n                    <EpisodeListEditor season={selectedSeason} setEpisodes={(eps: IMovie[])=> { replaceToSelectedSeason(eps)}} summary={series.summary} />\r\n                </div>\r\n            </Fragment>): \r\n            (<Fragment></Fragment>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default EditSeasons;","import React, { Fragment, useRef, useState, useEffect } from 'react'\r\nimport { IDetailedSeries, ISeries } from '../../../common/series';\r\nimport { uploadSeriesPoster } from '../../callers/seriesCaller';\r\nimport { resizeImageFn } from '../../utils';\r\nimport \"../movie/movieStyle.css\";\r\n\r\ninterface IEditSeriesDetails{\r\n    series: IDetailedSeries;\r\n    setSeries: (s: ISeries) => void;\r\n    bindSeries: (e)=> void;\r\n}\r\n\r\nexport const EditSeriesDetaills: React.FC<IEditSeriesDetails> = ({series, setSeries, bindSeries}: IEditSeriesDetails) => {\r\n    const posterInput = useRef<HTMLInputElement>();\r\n    const [posterSource, setPosterSource] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(series.id > 0){\r\n            setPosterSource(`/rewer/uploads/seriesPosters/${series.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            setPosterSource(`/rewer/uploads/seriesPosters/0.jpg?`)\r\n        }\r\n    },[]);\r\n\r\n    async function savePoster(){\r\n        const formData = new FormData();\r\n        if(!posterInput.current.files[0]){\r\n            alert(\"No file selected.\");\r\n            return;\r\n        }\r\n        const resizedFile = await resizeImageFn(posterInput.current.files[0], 400, 700, 0.8);\r\n        formData.append(\"poster\", resizedFile, `${series.id}.jpg`);\r\n        if(await uploadSeriesPoster(formData)){\r\n            setPosterSource(`/rewer/uploads/seriesposters/${series.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            alert(\"Upload unsuccessful\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className=\"detail-grid\">\r\n            <div className=\"span-2\">\r\n                <input value={series.title} onChange={bindSeries} name=\"title\" type=\"text\" placeholder=\"Title\" className=\"title-input\" /><br/>\r\n                <textarea value={series.summary} onChange={bindSeries} name=\"summary\" placeholder=\"Write something about the story...\" rows={20} />\r\n            </div>\r\n            <div>\r\n                <img src={posterSource} onError={()=> { setPosterSource(\"/rewer/uploads/seriesPosters/0.jpg\")}} alt=\"Poster\" title=\"Poster\" className=\"edit-poster\"/>\r\n                {(series.id > 0)? \r\n                (<Fragment>\r\n                    <p>It is recommended to use an image with a standard poster image ratio</p>\r\n                    <input ref={posterInput} type=\"file\" accept=\".png,.jpg,.jpeg\" className=\"file-input\" />\r\n                    <button onClick={savePoster}>Upload</button>\r\n                </Fragment>):\r\n                (<Fragment>\r\n                    <p>Create the series' page to edit this picture.</p>\r\n                </Fragment>)}\r\n            </div>\r\n        </div>\r\n    </Fragment>)\r\n}\r\n\r\nexport default EditSeriesDetaills;","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { IGenre, ISeriesGenre } from '../../common/genre';\r\nimport { ISeason } from '../../common/season';\r\nimport { deleteSeriesGenre, insertSeries, insertSeriesGenre, selectDetailedSeries, updateSeries } from '../callers/seriesCaller';\r\nimport GenreAdder from '../components/movie/GenreAdder';\r\nimport EditSeasons from '../components/series/EditSeasons';\r\nimport EditSeriesDetaills from '../components/series/EditSeriesDetails';\r\nimport { useBinder } from '../hooks';\r\nimport { changeParam, getParameter } from '../urlManager'\r\n\r\nexport default function EditSeries() {\r\n    const [series, setSeries, bindSeries] = useBinder({id: parseInt(getParameter(\"seriesId\")), title: \"\", summary: \"\", seasons: [], genres: []});\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(series.id > 0){\r\n            getSeries();\r\n        }\r\n    }, []);\r\n    async function getSeries(){\r\n        let selectedSeries = await selectDetailedSeries(series.id);\r\n        if(selectedSeries){\r\n            setSeries(selectedSeries);\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    async function createSeries(){\r\n        const newId = await insertSeries(series);\r\n        if(newId){\r\n            setSeries({...series, id: newId});\r\n            changeParam({name: \"seriesId\", value: newId.toString()});\r\n            setMainMsg(\"Series successfully created.\");\r\n        } else {\r\n            setMainMsg(\"Internal error: could not create series page.\");\r\n        }\r\n    }\r\n\r\n    async function saveSeries(){\r\n        if(await updateSeries(series)){\r\n            setMainMsg(`Series details saved: ${new Date().getHours()} : ${new Date().getMinutes()}`);\r\n        } else {\r\n            setMainMsg(\"Internal error: series details could not be saved.\");\r\n        }\r\n    }\r\n\r\n    async function addGenre(genre: IGenre){\r\n        let newSeriesGenre: ISeriesGenre = {\r\n            id: 0,\r\n            seriesId: series.id,\r\n            genreId: genre.id,\r\n            genreName: genre.name\r\n        }\r\n        newSeriesGenre.id = await insertSeriesGenre(newSeriesGenre);\r\n        if(newSeriesGenre.id > 0){\r\n            setSeries({...series, genres: [...series.genres, newSeriesGenre]});\r\n        } else {\r\n            alert(\"Error: could not add genre\");\r\n        }\r\n    }\r\n\r\n    async function removeGenre(id: number){\r\n        if(await deleteSeriesGenre(id)){\r\n            setSeries({...series, genres: series.genres.filter(s=> s.id !== id)});\r\n        } else {\r\n            alert(\"Server error: could not delete genre\");\r\n        }\r\n    }\r\n\r\n    function setSeasons(newSeasons: ISeason[]){\r\n        setSeries({...series, seasons: newSeasons})\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            {mainMsg}\r\n            <br/>\r\n            {(series.id > 0)?\r\n            (<button onClick={saveSeries}>Save series details</button>):\r\n            (<button onClick={createSeries}>Create series</button>)}\r\n            <EditSeriesDetaills series={series} setSeries={setSeries} bindSeries={bindSeries} />\r\n            {(series.id > 0) ?\r\n            (<Fragment>\r\n                <GenreAdder movie={series} onAdd={(genre: IGenre)=> { addGenre(genre); }} onDelete={(id: number)=> { removeGenre(id) }} />\r\n                <EditSeasons series={series} setSeasons={setSeasons} />\r\n            </Fragment>) :\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { ISeriesCast } from '../../../common/cast'\r\nimport \"./castStyle.css\"\r\n\r\ninterface ISeriesCastRow{\r\n    cast: ISeriesCast;\r\n}\r\n\r\nexport const SeriesCastRow: React.FC<ISeriesCastRow> = ({cast}: ISeriesCastRow) => {\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/portraits/${cast.artistId}.jpg`} alt={cast.artistName} />\r\n            <span><Link to={`/star?artistId=${cast.artistId}`} >{cast.artistName}</Link></span>\r\n            <p className=\"cast-row-item\">{cast.name}({cast.episodeCount})</p>\r\n        </div>\r\n    )\r\n}\r\nexport default SeriesCastRow;","import React, { useState, useEffect } from 'react'\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { Score } from '../movie/Score'\r\n\r\ninterface ISideEpisodeRow{\r\n    episode: IDetailedMovie;\r\n    selectedId: number;\r\n}\r\n\r\nexport const SideEpisodeRow: React.FC<ISideEpisodeRow> = ({episode, selectedId}: ISideEpisodeRow) => {\r\n    const [mainClass, setMainClass] = useState(\"side-row\");\r\n    useEffect(()=>{\r\n        if(selectedId === episode.id){\r\n            setMainClass(\"side-row selected-row\");\r\n        } else {\r\n            setMainClass(\"side-row\");\r\n        }\r\n    }, [selectedId]);\r\n    return (\r\n        <div className={mainClass}>\r\n            <p>{episode.title}</p>\r\n            <Score value={episode.avgScore} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideEpisodeRow;\r\n","import React, { useState, useEffect} from 'react'\r\nimport { IDetailedMovie, IMovie } from '../../../common/movie';\r\nimport SideEpisodeRow from './SideEpisodeRow';\r\n\r\ninterface IEpisodeSelector{\r\n    episodes: IDetailedMovie[];\r\n    onSelectedChange: (ep: IMovie) => void;\r\n}\r\n\r\nexport const EpisodeSelector: React.FC<IEpisodeSelector> = ({episodes, onSelectedChange}: IEpisodeSelector) => {\r\n    const [selectedEpisode, setSelectedEpisode] = useState({id: 0, title: \"\", releaseDate: \"\", casts: [], genres: [], summary: \"\"});\r\n    useEffect(()=>{\r\n        onSelectedChange(selectedEpisode);\r\n    }, [selectedEpisode]);\r\n    return (\r\n        <div>\r\n            {episodes.map(e=>{\r\n                return <div key={`episode-select-${e.id}`} onClick={()=>{ setSelectedEpisode(e) }}><SideEpisodeRow episode={e} selectedId={selectedEpisode.id} /></div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default EpisodeSelector;","import React from 'react'\r\nimport { ISeason } from '../../../common/season'\r\n\r\ninterface ISeasonSelect{\r\n    selectedSeason: ISeason;\r\n    setSelectedSeason: (s: ISeason) => void;\r\n    seasons: ISeason[];\r\n}\r\n\r\nexport const SeasonSelect: React.FC<ISeasonSelect> = ({selectedSeason, setSelectedSeason, seasons}: ISeasonSelect) => {\r\n    return (\r\n       <select value={selectedSeason.id.toString()} onChange={(e)=> { setSelectedSeason(seasons.find(s=> s.id === parseInt(e.target.value))) }}>\r\n           {seasons.map(s=> {\r\n               return <option key={s.id} value={s.id.toString()}>Season {s.order}</option>\r\n           })}\r\n       </select>\r\n    )\r\n}\r\nexport default SeasonSelect;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport MainScore from '../movie/MainScore'\r\nimport \"../movie/movieStyle.css\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { normalFormat } from '../../dateParser'\r\nimport { ISeries } from '../../../common/series'\r\nimport { getAvgRuntime, getAvgSeriesScore, getEpisodeCount, getFirstEpisodeDate, getSeasonCount } from '../../callers/seriesCaller'\r\ninterface ISeriesInfo{\r\n    series: ISeries;\r\n}\r\n\r\nexport const SeriesInfo: React.FC<ISeriesInfo> = ({series}: ISeriesInfo) => {\r\n    const [avgScore, setAvgScore] = useState(0);\r\n    useEffect(()=>{\r\n        if(series.seasons.length > 0 && getEpisodeCount(series) > 0){\r\n            setAvgScore(getAvgSeriesScore(series));\r\n        }\r\n    }, [series]);\r\n    return (\r\n        <div>\r\n            {window.screen.width > 1000 ?\r\n            (<Fragment>\r\n                <div className=\"title-grid\">\r\n                    <p className=\"title\">{series.title}</p>\r\n                    <MainScore value={Math.round(avgScore * 10) / 10} />   \r\n                </div>\r\n                {parseInt(localStorage.getItem(\"permission\")) > 1 ? \r\n                (<div><Link to={`/editseries?seriesId=${series.id}`}>Edit series' page</Link></div>):\r\n                (<Fragment></Fragment>)}\r\n                {series.genres.map(g=> {\r\n                    return <Link key={`genre-${g.id}`} className=\"genre\" to={\"todo\"}>{g.genreName}</Link>\r\n                })}\r\n\r\n                <div className=\"movie-info-grid\">\r\n                    <div className=\"movie-info-grid-item\">\r\n                        <p >{series.summary}</p>\r\n                        {(getFirstEpisodeDate(series) != null)?\r\n                        (<Fragment>\r\n                            <p>Premier: {normalFormat(getFirstEpisodeDate(series))}</p>\r\n                            <p>Average runtime: {Math.round(getAvgRuntime(series))} minutes</p>\r\n                            </Fragment>):\r\n                        (<Fragment></Fragment>)}\r\n                        <p>{getSeasonCount(series)} seasons</p>\r\n                        <p>{getEpisodeCount(series)} episodes</p>\r\n                    </div>\r\n                    <img src={`/rewer/uploads/seriesposters/${series.id}.jpg`} className=\"poster\" title={series.title} alt={`${series.title}-poster`} />\r\n                </div>\r\n            </Fragment>) :\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeriesInfo;","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { IDetailedMovie } from '../../common/movie';\r\nimport { ISeries } from '../../common/series';\r\nimport { selectDetailedSeries, getSeriesCast } from '../callers/seriesCaller';\r\nimport CastList from '../components/cast/CastList';\r\nimport SeriesCastRow from '../components/cast/SeriesCastRow';\r\nimport MovieInfo from '../components/movie/MovieInfo';\r\nimport { MovieRow } from '../components/movie/MovieRow';\r\nimport MovieReviewFeed from '../components/review/MovieReviewFeed';\r\nimport { MyReview } from '../components/review/MyReview';\r\nimport EpisodeSelector from '../components/series/EpisodeSelector';\r\nimport FeaturedSeriesSides from '../components/series/FeaturedSeriesSides';\r\nimport SeasonSelect from '../components/series/SeasonSelect';\r\nimport SeriesInfo from '../components/series/SeriesInfo';\r\nimport { getParameter } from '../urlManager';\r\nexport default function Series() {\r\n    const [series, setSeries] = useState<ISeries>({id: parseInt(getParameter(\"seriesId\")), title: \"\", genres: [], seasons: [], summary: \"\", avgScore: 0});\r\n    const [seriesCast, setSeriesCast] = useState([]);\r\n    const [selectedSeason, setSelectedSeason] = useState({id: 0, seriesId: parseInt(getParameter(\"seriesId\")), episodes: []});\r\n    const [selectedEpisode, setSelectedEpisode] = useState({id: 0, title: \"\", releaseDate: \"\", summary: \"\", genres: [], casts: []});\r\n    useEffect(()=>{\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        if(series.id > 0){\r\n            getSeries();\r\n        }\r\n    }, []);\r\n    async function getSeries(){\r\n        const selectedSeries = await selectDetailedSeries(series.id);\r\n        if(selectedSeries){\r\n            setSeries(selectedSeries);\r\n            setSeriesCast(getSeriesCast(selectedSeries));\r\n            if(selectedSeries.seasons.length > 0) setSelectedSeason(selectedSeries.seasons[0]);\r\n        } else {\r\n            //TODO 404\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            {window.innerWidth > 800 ? \r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                        <div className=\"side-container medium-side\">\r\n                            <SeasonSelect selectedSeason={selectedSeason} seasons={series.seasons} setSelectedSeason={setSelectedSeason} />\r\n                            <EpisodeSelector episodes={selectedSeason.episodes} onSelectedChange={(e: IDetailedMovie)=>{ setSelectedEpisode(e) }} />      \r\n                        </div>\r\n                        {selectedEpisode.casts.length > 0 ?\r\n                            (<div className=\"side-container medium-side\" >\r\n                                <h3 className=\"center-text\">Cast</h3>\r\n                                <CastList casts={selectedEpisode.casts.filter(c=> c.castTypeId === 4 || c.castTypeId === 5)} />\r\n                            </div>):\r\n                        (<Fragment></Fragment>)}\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <div className=\"bottom-border\">\r\n                    <SeriesInfo series={series} />\r\n                   </div>\r\n                    {(selectedEpisode.id > 0) ? \r\n                    (<Fragment><MovieInfo movie={selectedEpisode} />\r\n                        <MyReview movie={selectedEpisode} />\r\n                        <MovieReviewFeed movie={selectedEpisode} />\r\n                    </Fragment>):\r\n                    (<p><i>No episode is selected.</i></p>)}\r\n                    \r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <h3 className=\"center-text\">Cast</h3>\r\n                        {seriesCast.filter(s=> s.castTypeId > 3).map(c => {\r\n                            return <SeriesCastRow key={`${c.artistId}-${c.castTypeId}`} cast={c} />\r\n                        })}\r\n                    </div>     \r\n                    <div className=\"side-container large-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>           \r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <SeriesInfo series={series} />\r\n                <h3>Cast</h3>\r\n                {seriesCast.filter(s=> s.castTypeId > 3).map(c => {\r\n                    return <SeriesCastRow key={`${c.artistId}-${c.castTypeId}`} cast={c} />\r\n                })}\r\n                <SeasonSelect selectedSeason={selectedSeason} seasons={series.seasons} setSelectedSeason={setSelectedSeason} />\r\n                {selectedSeason.episodes.map(e => {\r\n                    return <MovieRow key={`episode-${e.id}`} movie={e} />\r\n                })}\r\n            </div>)}\r\n        </Fragment>\r\n    )\r\n/*\r\n    return (\r\n        <Fragment>\r\n            {window.innerWidth > 800 ? \r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                        <div className=\"side-container medium-side\">\r\n                            <SeasonSelect selectedSeason={selectedSeason} seasons={series.seasons} setSelectedSeason={setSelectedSeason} />\r\n                            <EpisodeSelector episodes={selectedSeason.episodes} onSelectedChange={(e: IDetailedMovie)=>{ setSelectedEpisode(e) }} />      \r\n                        </div>\r\n                        {selectedEpisode.casts.length > 0 ?\r\n                            (<div className=\"side-container medium-side\" >\r\n                                <h3 className=\"center-text\">Cast</h3>\r\n                                <CastList casts={selectedEpisode.casts.filter(c=> c.castTypeId === 4 || c.castTypeId === 5)} />\r\n                            </div>):\r\n                        (<Fragment></Fragment>)}\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <div className=\"bottom-border\">\r\n                    <SeriesInfo series={series} />\r\n                   </div>\r\n                    {(selectedEpisode.id > 0) ? \r\n                    (<Fragment><MovieInfo movie={selectedEpisode} />\r\n                        <MyReview movie={selectedEpisode} />\r\n                        <MovieReviewFeed movie={selectedEpisode} />\r\n                    </Fragment>):\r\n                    (<p><i>No episode is selected.</i></p>)}\r\n                    \r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <h3 className=\"center-text\">Cast</h3>\r\n                        {seriesCast.filter(s=> s.castTypeId > 3).map(c => {\r\n                            return <SeriesCastRow key={`${c.artistId}-${c.castTypeId}`} cast={c} />\r\n                        })}\r\n                    </div>     \r\n                    <div className=\"side-container large-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>           \r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <SeriesInfo series={series} />\r\n                <h3>Cast</h3>\r\n                {seriesCast.filter(s=> s.castTypeId > 3).map(c => {\r\n                    return <SeriesCastRow key={`${c.artistId}-${c.castTypeId}`} cast={c} />\r\n                })}\r\n                <SeasonSelect selectedSeason={selectedSeason} seasons={series.seasons} setSelectedSeason={setSelectedSeason} />\r\n                {selectedSeason.episodes.map(e => {\r\n                    return <MovieRow key={`episode-${e.id}`} movie={e} />\r\n                })}\r\n            </div>)}\r\n        </Fragment>\r\n    ) */\r\n}\r\n","import { POSTAsynch } from \"./caller\";\r\nimport { ISearchResult } from \"../../common/search\"\r\nexport async function mainSearch(keyword: string, limit: number): Promise<ISearchResult | null>{\r\n    const response = await POSTAsynch(\"/search\", { keyword: keyword, limit: limit});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { normalFormat } from '../../dateParser';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./artistStyle.css\"\r\nimport { IArtist } from '../../../common/artist';\r\n\r\ninterface IStandardArtistRow{\r\n    artist: IArtist;\r\n}\r\n\r\nexport const StandardArtistRow: React.FC<IStandardArtistRow> = ({artist}: IStandardArtistRow) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/portraits/${artist.id}.jpg`);\r\n    const [bio, setBio] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(artist.bio.length > 80){\r\n            setBio(`${artist.bio.substring(0, 150)}...`);\r\n        } else {\r\n            setBio(artist.bio);\r\n        }\r\n    }, [artist])\r\n    return (\r\n    <Link className=\"standard-artist-grid highlight\" to={`/star?artistId=${artist.id}`}>\r\n        <img src={imgsrc} className=\"portrait\" alt={`poster-${artist.id}`} title={artist.name} onError={()=>{ setImgsrc(`/rewer/uploads/portraits/0.jpg`) }} />\r\n        <div>\r\n            <p className=\"name\">{artist.name}</p>\r\n            <p>{normalFormat(artist.birthDate.toString())}</p>\r\n            <p >{bio}</p>\r\n        </div>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default StandardArtistRow;","import React from 'react'\r\nimport { IArtist } from '../../../common/artist';\r\nimport StandardArtistRow from './StandardArtistRow';\r\n\r\ninterface IArtistRowList{\r\n    artists: IArtist[];\r\n}\r\n\r\nexport const ArtistRowList: React.FC<IArtistRowList> = ({artists}: IArtistRowList) => {\r\n    return (\r\n        <div>\r\n            {artists.map(a=>{\r\n              return <StandardArtistRow key={`artist-row-${a.id}`} artist={a} />  \r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistRowList;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedUser } from '../../../common/user';\r\ninterface IUserRow{\r\n    user: IDetailedUser;\r\n}\r\n\r\nexport const UserRow: React.FC<IUserRow> = ({user}: IUserRow) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/avatars/${user.userName}.jpg`);\r\n    const [about, setAbout] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(user.about.length > 100){\r\n            setAbout(`${user.about.substring(0, 100)}...`);\r\n        } else {\r\n            setAbout(user.about);\r\n        }\r\n    }, [user])\r\n    return (\r\n        <Link className=\"user-row highlight\" to={`/user?userName=${user.userName}`}>\r\n            <img src={imgsrc} onError={()=>{ setImgsrc(`/rewer/uploads/avatars/default.jpg`)}} alt={`user-${user.nickName}`} />\r\n            <div>\r\n                <p className=\"name\">{user.nickName}</p>\r\n                <p>{about}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default UserRow","import React from 'react'\r\nimport { IDetailedUser } from '../../../common/user'\r\nimport UserRow from './UserRow'\r\n\r\ninterface IUserRowList{\r\n    users: IDetailedUser[];\r\n}\r\n\r\nexport const UserRowList: React.FC<IUserRowList> = ({users}: IUserRowList) => {\r\n    return (\r\n        <div>\r\n            {users.map(u=>{\r\n                return <UserRow key={`user-row-${u.userName}`} user={u} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRowList;","import React from 'react'\r\nimport { IPreviewSeries } from '../../../common/series'\r\nimport SeriesRow from './SeriesRow'\r\n\r\ninterface ISeriesRowList{\r\n    series: IPreviewSeries[];\r\n}\r\n\r\nexport const SeriesRowList: React.FC<ISeriesRowList> = ({series}: ISeriesRowList) => {\r\n    return (\r\n        <div>\r\n            {series.map(s=>{\r\n                return <SeriesRow key={`series-row-${s.id}`} series={s} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useRef} from 'react'\r\nimport { mainSearch } from '../callers/search';\r\nimport { onEnter } from '../hooks';\r\nimport { changeParam, getParameter } from '../urlManager';\r\nimport ArtistRowList from './artist/ArtistRowList';\r\nimport { MovieRowList } from './movie/MovieRowList';\r\nimport UserRowList from './profile/UserRowList';\r\nimport { SeriesRowList } from './series/SeriesRowList';\r\n\r\nexport default function Search() {\r\n    const [results, setResults] = useState({movies: [], series: [], artists: [], users: []});\r\n    const [keyword, setKeyword] = useState(getParameter(\"keyword\"));\r\n    const keywordInput = useRef<HTMLInputElement>();\r\n    useEffect(()=>{\r\n        fetchResults();\r\n        changeParam({name: \"keyword\", value: keyword});\r\n    }, [keyword]);\r\n\r\n    useEffect(()=>{\r\n        keywordInput.current.value = keyword;\r\n    }, []);\r\n\r\n    async function fetchResults(){\r\n        let result = await mainSearch(keyword, 40);\r\n        if(result){\r\n            setResults(result);\r\n        }\r\n    }\r\n\r\n    async function searchBtnCommand(){\r\n        setKeyword(keywordInput.current.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <input ref={keywordInput} onKeyDown={(e)=> { onEnter(e, searchBtnCommand) }} />\r\n            <button onClick={()=>{ searchBtnCommand() }}>Search</button>\r\n            <MovieRowList movies={results.movies} />\r\n            <SeriesRowList series={results.series} />\r\n            <ArtistRowList artists={results.artists} />\r\n            <UserRowList users={results.users} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport Search from '../components/Search';\r\nimport FeaturedSeriesSides from '../components/series/FeaturedSeriesSides';\r\n\r\nexport default function SearchPage() {\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 1000 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <Search />\r\n                </div>\r\n                <div className=\"right-item \">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSides />\r\n                    </div>\r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <Search />\r\n            </div>)}\r\n        </Fragment>    \r\n    )\r\n}","import React, { useEffect} from 'react';\nimport './App.css';\nimport \"./main.css\";\n// @ts-ignore\nimport { Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport EditMovie from \"./pages/EditMovie\";\nimport Profile from \"./pages/Profile\";\nimport Helmet from \"react-helmet\";\nimport { Header } from './components/header/Header';\nimport { handleLogin } from './callers/authUserCaller';\nimport EditArtist from './pages/EditArtist';\nimport Movie from './pages/Movie';\nimport Star from './pages/Star';\nimport User from './components/profile/User';\nimport FollowsPage from './pages/FollowsPage';\nimport EditSeries from './pages/EditSeries';\nimport Series from './pages/Series';\nimport SearchPage from './pages/SearchPage';\nimport { Redirect, useParams } from 'react-router';\nimport { getParameter } from './urlManager';\nfunction App() {\n  useEffect(()=>{\n    log();\n  }, []);\n  async function log(){\n    if(await handleLogin()){\n      console.log(\"user is logged in\");\n    } else {\n      console.log(\"user is not logged in\");\n    } \n  } // <Route exact path=\"/movie\" component={Movie}  />\n  return (\n    <>\n    <Router>\n    <Helmet>\n      <title>Rewer</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    </Helmet>\n    <Header />\n    <div className=\"page\"> \n      <Switch>\n          <Redirect from=\"/link_movie:movieId\" to=\"/movie\" />\n          <Route exact path=\"/rewer\" component={Home} />\n          <Route exact path=\"/movie\" render={(props) => <Movie {...props}  key={new Date().getTime()}/>} />\n          <Route exact path=\"/series\" render={(props) => <Series {...props}  key={new Date().getTime()}/>} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/user\" component={User} />\n          <Route exact path=\"/editartist\" component={EditArtist} />\n          <Route exact path=\"/star\" component={Star} />\n          <Route exact path=\"/editmovie\" component={EditMovie} />\n          <Route exact path=\"/editseries\" component={EditSeries} />\n          <Route exact path=\"/follows\" component={FollowsPage} />\n          <Route exact path=\"/search\" component={SearchPage} />\n          <Route exact path=\"/home\" component={Home} />\n      </Switch>\n      </div>\n    </Router>\n    \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}