{"version":3,"sources":["callers/followCaller.ts","components/profile/PermissionSelect.tsx","components/profile/UserInfo.tsx","pages/User.tsx","callers/castCaller.ts","callers/seriesCaller.ts","components/movie/MovieDiv.tsx","components/series/SeriesDiv.tsx","components/movie/FeaturedSides.tsx","callers/userCaller.ts","components/series/FeaturedSeriesSides.tsx","callers/search.ts","components/AutoCompleteElement.tsx","components/AutoCompleteInput.tsx","components/review/UserReviewRow.tsx","components/review/ReviewRowM.tsx","components/SearchSide.tsx","components/review/ReviewOrderBySelect.tsx"],"names":["followPath","PermissionSelect","defaultValue","onUpdate","select","useRef","ref","value","onChange","current","UserInfo","user","useState","getUser","setUser","followBtn","setFollowBtn","useImage","userName","imgsrc","onImgError","postCaller","followCaller","followSignal","id","isFollowed","follower","localStorage","getItem","followed","follow","setFollow","showModal","useContext","ModalContext","newValue","a","newPermission","level","parseInt","authUserPath","updatePermission","ECallType","ISOK","permission","alert","abort","followUser","className","INSERT","newId","unFollowUser","deleteFollow","title","content","nickName","acceptButton","refuseButton","useEffect","toFollow","onClick","icon","faUserMinus","followerCount","toString","updateUserPermission","src","onError","alt","about","length","User","getParameter","useAsyncReference","reviews","setReviews","EReviewOrderBy","date","orderBy","setOrderBy","userCaller","signal","useScroll","addScroll","removeScroll","userPath","selectDetailedUser","SELECT","userInfo","limit","offset","orderby","reviewPath","selectReviewsByUser","userReviews","requestedReviews","deleteReview","reviewId","filter","r","getUserInfo","document","requestReviews","window","screen","width","FeaturedSides","ReviewOrderBySelect","map","UserReviewRow","key","review","onDelete","ReviewRowM","SearchSide","FeaturedSeriesSides","castPath","getCastTypes","insertCast","insertCasts","updateCast","deleteCast","compareCastType","cast1","cast2","castTypeId","seriesPath","insertSeries","updateSeries","uploadSeriesPoster","selectDetailedSeries","selectLatestPreviewSeries","selectLatestPreviewSeriesJson","insertSeriesGenre","deleteSeriesGenre","file","UploadFile","ok","selectDetailedSeriesPostFetch","detailedSeries","genres","sort","compareMovieGenresByName","series","seasons","orderSeasonCast","orderCasts","episodes","compareEpisodes","getSeasonCount","s","getEpisodeCount","sum","forEach","season","getFirstEpisodeDate","releaseDate","getAvgRuntime","epCount","episode","runtime","getSeriesCast","seriesCast","setSeriesCastFromSeason","getAvgSeriesScore","reviewedEpisodeCount","avgScore","setSeriesCastFromEpisode","casts","setSeriesCastFromCast","cast","sc","find","artistId","updatedNames","characterNames","name","push","episodeCount","handleExistingSeriesCast","artistName","episode1","episode2","Date","MovieDiv","movie","ESize","Medium","imgClass","setImgClass","scoreClass","setScoreClass","scoreLine","style","display","Math","round","SeriesDiv","featuredMovies","setFeaturedMovies","getCaller","moviePath","selectLatestMoviesJson","caller","movies","rnd","floor","random","slice","getLatestFeatures","f","to","doesExist","uploadAvatar","updateUserInfo","selectFollowers","selectFollowedUsers","request","response","status","json","detailedUser","featueredSeries","setFeaturedSeries","seriesCaller","featured","requestFeaturedSeries","searchPath","search","autoComplete","AutoCompleteElement","text","selectedValue","mainClass","setMainClass","AutoCompleteInput","setValue","stringList","onSubmit","requestAutoComplete","showAutoComplete","setShowAutoComplete","selected","setSelected","wrapperRef","addClickListener","removeClickListener","addEventListener","handleClickOutside","removeEventListener","e","contains","target","keyCode","String","fromCharCode","toLowerCase","handleUpArrow","currentIndex","indexOf","handleDownArrow","placeholder","onKeyDown","keycode","onDivKeyDown","type","list","faSearch","Small","setImgsrc","seriesId","movieId","movieTitle","seriesTitle","reviewText","setReviewText","briefText","substring","showLess","titleClass","setTitleClass","avatarSrc","avatarError","score","reviewLike","myLike","popIndex","reviewDate","normalFormat","keyword","setKeyword","autoList","setAutoList","autoCaller","history","useHistory","word","newAutos","searchParam"],"mappings":"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","file":"static/js/11.c52ab000.chunk.js","sourcesContent":["import { IFollow } from \"../../common/follow\";\r\n\r\nexport const followPath = {\r\n    insertFollow: \"/follow/insert_follow\",\r\n    deleteFollow: \"/follow/delete_follow\"\r\n}\r\n","import React, { useRef } from 'react'\r\n\r\ninterface IPermissionSelect{\r\n    defaultValue: string;\r\n    onUpdate: (newValue: string) => void;\r\n}\r\n\r\nexport const PermissionSelect: React.FC<IPermissionSelect> = ({defaultValue, onUpdate}: IPermissionSelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function change(){\r\n        onUpdate(select.current.value);\r\n    }\r\n    return (\r\n        <select ref={select} value={defaultValue} onChange={change} >\r\n            <option value=\"0\">Banned</option>\r\n            <option value=\"1\">User</option>\r\n            <option value=\"2\">Moderator</option>\r\n            <option value=\"3\">Admin</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default PermissionSelect;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faUserMinus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, Fragment, useEffect, useContext } from 'react'\r\nimport { IDetailedUser } from '../../../common/user';\r\nimport { authUserPath } from '../../callers/authUserCaller';\r\nimport { ECallType, postCaller } from '../../callers/caller';\r\nimport { followPath } from '../../callers/followCaller';\r\nimport { useImage } from '../../hooks';\r\nimport { IModalContext, ModalContext } from '../Modal';\r\nimport PermissionSelect from './PermissionSelect';\r\nimport \"./profileStyle.css\"\r\n\r\ninterface IUserInfo{\r\n    user: IDetailedUser;\r\n}\r\n\r\nexport const UserInfo: React.FC<IUserInfo> = ({user}: IUserInfo) => {\r\n    const [getUser, setUser] = useState<IDetailedUser>({...user});\r\n    const [followBtn, setFollowBtn] = useState(<Fragment></Fragment>);\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/avatars\", `${getUser.userName}.jpg`);\r\n    const [followCaller, followSignal] = postCaller();\r\n    const [follow, setFollow] = useState({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n\r\n    const { showModal } = useContext<IModalContext>(ModalContext);\r\n\r\n   async function updateUserPermission(newValue: string){\r\n        const newPermission = { id:0, userName: getUser.userName, level: parseInt(newValue) };\r\n        if(await followCaller(newPermission, authUserPath.updatePermission, ECallType.ISOK)){\r\n            setUser({...getUser, permission: newPermission.level});\r\n        } else {\r\n            alert(\"Server error\");\r\n        }  \r\n        setUser( {...getUser, permission: parseInt(newValue)});\r\n        return ()=>{\r\n            return followSignal.abort();\r\n        }\r\n    } \r\n\r\n    useEffect(()=>{\r\n        setUser(user);\r\n    }, [user])\r\n\r\n    useEffect(()=>{\r\n        if(canBeFollowed(user)){\r\n            placeFollowBtn();\r\n        }\r\n    }, [follow]);\r\n\r\n    useEffect(()=>{\r\n        setFollow({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n    }, [getUser])\r\n\r\n    function canBeFollowed(toFollow: IDetailedUser){\r\n        return localStorage.getItem(\"userName\") != null && localStorage.getItem(\"userName\") !== toFollow.userName;\r\n    }\r\n\r\n    function placeFollowBtn(){\r\n        if(follow.id > 0){\r\n            setFollowBtn(<button onClick={unFollowUser} className=\"unfollow\"><FontAwesomeIcon icon={faUserMinus} />Unfollow</button>);\r\n        } else {\r\n            setFollowBtn(<button onClick={followUser} className=\"follow\"><FontAwesomeIcon icon={faUserMinus} />Follow</button>);\r\n        }\r\n    }\r\n\r\n    async function followUser(){\r\n        setFollowBtn(<button className=\"follow\">Follow</button>); //prevent double clicking   \r\n        const newId = await followCaller(follow, followPath.insertFollow, ECallType.INSERT);\r\n        if(newId){\r\n            setFollow({...follow, id: newId});\r\n        } \r\n    }\r\n\r\n    async function unFollowUser(){\r\n        showModal(deleteFollow, {\r\n            title: ``,\r\n            content: <p>Are you sure you want to stop following {getUser.nickName}?</p>,\r\n            acceptButton: <Fragment>Unfollow</Fragment>,\r\n            refuseButton: <Fragment>Cancel</Fragment>\r\n        });\r\n    }\r\n\r\n    async function deleteFollow(){\r\n        if(await followCaller({ id: follow.id}, followPath.deleteFollow, ECallType.ISOK)){\r\n            setFollow({...follow, id: 0});\r\n            setFollowBtn(<button className=\"unfollow\">Unfollow</button>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{getUser.nickName}</h1>\r\n            {followBtn}\r\n            <p>{user.followerCount} followers</p>\r\n            {parseInt(localStorage.getItem(\"permission\")) === 3 && user.userName !== localStorage.getItem(\"userName\") ? \r\n                        (<PermissionSelect defaultValue={getUser.permission.toString()} onUpdate={(newValue: string)=>{updateUserPermission(newValue)}} />): \r\n                        (<Fragment></Fragment>)}\r\n            <div className=\"user-grid\">\r\n                <div>\r\n                    <img src={imgsrc} onError={onImgError} alt=\"user-avatar\" />                   \r\n                </div>\r\n                <div>\r\n                    {getUser.about.length > 0 ?\r\n                    (<p>{getUser.about}</p>):\r\n                    (<p><i>Nothing special to see here...</i></p>)}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport { useAsyncReference, useScroll } from '../hooks';\r\nimport { getParameter } from '../urlManager';\r\nimport UserReviewRow from \"../components/review/UserReviewRow\";\r\nimport ReviewOrderBySelect from '../components/review/ReviewOrderBySelect';\r\nimport UserInfo from '../components/profile/UserInfo';\r\nimport ReviewRowM from '../components/review/ReviewRowM';\r\nimport SearchSide from '../components/SearchSide';\r\nimport FeaturedSeriesSides from '../components/series/FeaturedSeriesSides';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport { userPath } from '../callers/userCaller';\r\nimport { EReviewOrderBy, reviewPath } from '../callers/reviewCaller';\r\nimport { IReview } from '../../common/review';\r\nimport { ECallType, postCaller } from '../callers/caller';\r\nimport { IDetailedUser } from '../../common/user';\r\n\r\nexport default function User() {\r\n    const [user, setUser] = useState<IDetailedUser>({userName: getParameter(\"userName\"), nickName: \"\", permission: 1, about: \"\"});\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const reviewPerPage = 5;\r\n    const [orderBy, setOrderBy] = useState(EReviewOrderBy.date);\r\n    const [userCaller, signal] = postCaller();\r\n    const [addScroll, removeScroll] = useScroll(0.9, getMoreReviews)\r\n    useEffect(()=>{\r\n        getUserInfo();\r\n        return ()=>{\r\n            removeScroll();\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(user) document.title = `${user.nickName} - Rewer`;\r\n    }, [user])\r\n\r\n    useEffect(()=>{\r\n        requestReviews();\r\n        return ()=>{\r\n            removeScroll();\r\n            signal.abort();\r\n        }\r\n    }, [orderBy]);\r\n\r\n    async function getUserInfo(){\r\n        const userInfo: IDetailedUser = await userCaller({ userName: getParameter(\"userName\") }, userPath.selectDetailedUser, ECallType.SELECT);\r\n        if(userInfo){\r\n            setUser(userInfo);\r\n        }\r\n    }\r\n\r\n    async function requestReviews(){\r\n        removeScroll();\r\n        let userReviews: IReview [] = await userCaller({ userName: user.userName, limit: reviewPerPage, offset: 0, orderby: orderBy }, reviewPath.selectReviewsByUser, ECallType.SELECT);\r\n        if(userReviews){\r\n            setReviews(userReviews);\r\n            if(userReviews.length === reviewPerPage) addScroll();\r\n        } \r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeScroll()\r\n        const requestedReviews = await userCaller({ userName: user.userName, limit: reviewPerPage, offset: reviews.current.length, orderby: orderBy }, reviewPath.selectReviewsByUser, ECallType.SELECT);\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) addScroll();\r\n        } \r\n    }\r\n\r\n    async function deleteReview(reviewId: number){\r\n        if(await userCaller({ id: reviewId }, reviewPath.deleteReview, ECallType.ISOK)){\r\n            setReviews(reviews.current.filter(r=> r.id !== reviewId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSides />\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <UserInfo user={user} />\r\n                    <br/>\r\n                    <h2>{user.nickName}'s reviews</h2>\r\n                    <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                    {window.screen.width > 600 ? \r\n                    (<Fragment>{reviews.current.map(r=> {\r\n                        return <UserReviewRow key={`review-${r.id}`} review={{...r, nickName: \"\"}} onDelete={deleteReview} />\r\n                    })}</Fragment>) :\r\n                    (<Fragment>{reviews.current.map(r=>{\r\n                        return <ReviewRowM key={`review-${r.id}`} review={{...r, nickName: \"\"}} onDelete={deleteReview} />\r\n                    })}</Fragment>)\r\n                    }\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">\r\n                        <SearchSide />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\">\r\n                        <FeaturedSeriesSides />\r\n                    </div>\r\n                </div>\r\n            </div>):\r\n            (<div className=\"main-container\">\r\n                <UserInfo user={user} />\r\n                <br/>\r\n                <h2>{user.nickName}'s reviews</h2>\r\n                <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: EReviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                {window.screen.width > 600 ? \r\n                (<Fragment>{reviews.current.map(r=> {\r\n                    return <UserReviewRow key={`review-${r.id}`} review={{...r, nickName: \"\"}} onDelete={deleteReview} />\r\n                })}</Fragment>) :\r\n                (<Fragment>{reviews.current.map(r=>{\r\n                    return <ReviewRowM key={`review-${r.id}`} review={{...r, nickName: \"\"}} onDelete={deleteReview} />\r\n                })}</Fragment>)\r\n                }\r\n            </div>)}\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n","import { ICast, IMovieCast } from \"../../common/cast\";\r\n\r\nexport const castPath = {\r\n    getCastTypes: \"/jsondb/cast_types.json\",\r\n    insertCast: \"/cast/insert_cast\",\r\n    insertCasts: \"/cast/insert_casts\",\r\n    updateCast: \"/cast/update_cast\",\r\n    deleteCast: \"/cast/delete_cast\"\r\n}\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function compareDate(cast1: IMovieCast, cast2: IMovieCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n","import { ICast, ISeriesCast } from \"../../common/cast\";\r\nimport { IMovie } from \"../../common/movie\";\r\nimport { ISeason } from \"../../common/season\";\r\nimport { IDetailedSeries, IPreviewSeries, ISeries, ISeriesGenre } from \"../../common/series\";\r\nimport { POSTAsynch, UploadFile } from \"./caller\";\r\nimport { compareCastType } from \"./castCaller\";\r\nimport { compareMovieGenresByName } from \"./movieCaller\";\r\n\r\nexport const seriesPath = {\r\n    insertSeries:\"/series/insert_series\",\r\n    updateSeries: \"/series/update_series\",\r\n    uploadSeriesPoster: \"/series/upload_series_poster\",\r\n    selectDetailedSeries: \"/series/select_detailed_series\",\r\n    selectLatestPreviewSeries: \"/series/select_latest_preview_series\",\r\n    selectLatestPreviewSeriesJson: \"/jsondb/latest_series.json\", \r\n    insertSeriesGenre: \"/genre/insert_series_genre\",\r\n    deleteSeriesGenre: \"/genre/delete_series_genre\"\r\n}\r\n\r\nexport async function uploadSeriesPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/series/upload_series_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function selectDetailedSeriesPostFetch(detailedSeries: IDetailedSeries){\r\n    detailedSeries.genres.sort(compareMovieGenresByName);\r\n    orderCasts(detailedSeries);\r\n    for(let season of detailedSeries.seasons) {\r\n        season.episodes.sort(compareEpisodes);\r\n    }\r\n}\r\n\r\nexport async function selectLatestPreviewSeries(limit: number, offset: number): Promise<IPreviewSeries[] | null >{\r\n    const response = await POSTAsynch(\"/series/select_latest_preview_series\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertSeriesGenre(seriesGenre: ISeriesGenre): Promise<number | null>{\r\n    const response = await POSTAsynch(\"genre/insert_series_genre\", seriesGenre);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteSeriesGenre(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"genre/delete_series_genre\", { id: id});\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getSeasonCount(series: ISeries): number{\r\n    return series.seasons.filter(s=> s.episodes.length > 0).length;\r\n}\r\n\r\nexport function getEpisodeCount(series: ISeries): number{\r\n    let sum: number = 0;\r\n    series.seasons.forEach(season => {\r\n        sum += season.episodes.length;\r\n    });\r\n    return sum;\r\n}\r\n\r\n\r\nexport function getFirstEpisodeDate(series: ISeries): string{\r\n    if(series.seasons.length > 0 && series.seasons[0].episodes.length > 0){\r\n        return series.seasons[0].episodes[0].releaseDate;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getAvgRuntime(series: ISeries): number{\r\n    let epCount: number = getEpisodeCount(series);\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.runtime > 0) sum += episode.runtime;\r\n        }\r\n    }\r\n    return sum / epCount;\r\n}\r\n\r\nexport function getSeriesCast(series: ISeries): ISeriesCast[]{\r\n    let seriesCast: ISeriesCast[] = [];\r\n    for(let season of series.seasons) {\r\n        setSeriesCastFromSeason(season, seriesCast);\r\n    }\r\n    return seriesCast;\r\n}\r\n\r\nfunction compareSeriesCastByEpisodeCount(scast1: ISeriesCast, scast2: ISeriesCast){\r\n    if(scast1.episodeCount > scast2.episodeCount){\r\n        return -1;\r\n    }\r\n    if(scast1.episodeCount < scast2.episodeCount){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function getAvgSeriesScore(series: ISeries){\r\n    let reviewedEpisodeCount: number = 0;\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.avgScore > 0){\r\n                sum = sum + episode.avgScore;\r\n                reviewedEpisodeCount++;\r\n            } \r\n        }\r\n    }\r\n    return sum / reviewedEpisodeCount;\r\n}\r\n\r\nfunction setSeriesCastFromSeason(season: ISeason, seriesCast: ISeriesCast[]){\r\n    for(let episode of season.episodes) {\r\n        setSeriesCastFromEpisode(episode, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromEpisode(episode: IMovie, seriesCast: ISeriesCast[]){\r\n    for(let cast of episode.casts) {\r\n        setSeriesCastFromCast(cast, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromCast(cast: ICast, seriesCast: any[]){\r\n    let sc: ISeriesCast = seriesCast.find(a=> a.artistId === cast.artistId);\r\n    if(sc != null){\r\n        handleExistingSeriesCast(cast, sc);\r\n    } else {\r\n        seriesCast.push({ \r\n            artistId: cast.artistId, \r\n            artistName: cast.artistName, \r\n            episodeCount: 1, \r\n            characterNames: [cast.name], \r\n            castTypeId: cast.castTypeId } );\r\n    }\r\n}\r\n\r\nfunction handleExistingSeriesCast(cast: ICast, sc: any){\r\n     let updatedNames = sc.characterNames;\r\n     if(sc.characterNames.filter(a=> a === cast.name).length === 0){\r\n         updatedNames.push(cast.name);\r\n     }\r\n     sc = {...sc, episodeCount: sc.episodeCount++, characterNames: updatedNames };\r\n}\r\n\r\nfunction orderCasts(series: ISeries){\r\n    for(let season of series.seasons) {\r\n        orderSeasonCast(season);\r\n    }\r\n}\r\n\r\nfunction orderSeasonCast(seasons: ISeason){\r\n    for(let episode of seasons.episodes) {\r\n            episode.casts.sort(compareCastType);\r\n    }\r\n}\r\n\r\nexport function compareEpisodes(episode1: IMovie, episode2: IMovie){\r\n    if(new Date(episode1.releaseDate) > new Date(episode2.releaseDate)){\r\n        return 1;\r\n    }\r\n    if(new Date(episode1.releaseDate) < new Date(episode2.releaseDate)){\r\n        return -1;\r\n    }\r\n    if(episode1.releaseDate === episode2.releaseDate){\r\n        if(episode1.id > episode2.id) return 1;\r\n        if(episode1.id < episode2.id) return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Medium, true);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={onImgError} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, {useState, useRef, useEffect } from 'react'\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { useImage } from '../../hooks';\r\nimport \"../movie/movieStyle.css\";\r\n\r\ninterface ISeriesDiv{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesDiv: React.FC<ISeriesDiv> = ({series}: ISeriesDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/seriesposters\", `${series.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [series]);\r\n    \r\n    return (\r\n        <div className=\"movie-container fade\">            \r\n            <img className={imgClass} src={imgsrc} alt={`${series.title}-poster`} onError={onImgError} />                \r\n            <p className=\"movie-title\">{series.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(series.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SeriesDiv;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport MovieDiv from './MovieDiv';\r\n\r\nexport default function FeaturedSides() {\r\n    const[featuredMovies, setFeaturedMovies] = useState<IDetailedMovie[]>([]);\r\n    const [caller, signal] = getCaller(moviePath.selectLatestMoviesJson)\r\n    useEffect(()=>{\r\n        getLatestFeatures();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getLatestFeatures(){\r\n        const movies: IDetailedMovie[] = await caller();\r\n        const rnd = Math.floor(Math.random()*5);\r\n        if(movies) setFeaturedMovies(movies.slice(rnd, rnd+2)); \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Featured Films</h3>\r\n                    <div className=\"double-grid\">\r\n                        {featuredMovies.map(f=> {\r\n                            return (<Link key={`featured-${f.id}`} to={`/rewer/movie?movieId=${f.id}`}>\r\n                                        <MovieDiv movie={f} />\r\n                                    </Link>)\r\n                        })}\r\n                    </div>  \r\n        </Fragment>\r\n    )\r\n}\r\n","import { IDetailedUser, IUser, WDoesUserExistRequest, WSelectFollowedUsersRequest, WSelectFollowersRequest } from \"../../common/user\";\r\nimport * as caller from \"./caller\";\r\n\r\nexport const userPath = {\r\n    doesExist: \"/user/does_exist\",\r\n    selectDetailedUser: \"/user/select_detailed_user\",\r\n    uploadAvatar: \"/user/upload_avatar\",\r\n    updateUserInfo: \"/user/update_user_info\",\r\n    selectFollowers: \"/user/select_followers\",\r\n    selectFollowedUsers: \"/user/select_followed_users\"\r\n}\r\n\r\nexport async function doesExist(userName: string): Promise<Response>{\r\n    const request: WDoesUserExistRequest = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/does_exist\", request);\r\n    return response;\r\n}\r\n\r\nexport async function selectDetailedUser(userName: string): Promise<IDetailedUser | null>{\r\n    const request = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/select_detailed_user\", request);\r\n    if(response.status === 200){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function uploadAvatar(file: FormData){\r\n    const response = await caller.UploadFile(\"/user/upload_avatar\", file);\r\n    return response;\r\n}\r\n\r\nexport async function updateUserInfo(detailedUser: IDetailedUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/update_user_info\", detailedUser);\r\n    if(response.status === 200){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function selectFollowers(data: WSelectFollowersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followers\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}\r\n\r\nexport async function selectFollowedUsers(data: WSelectFollowedUsersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followed_users\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { seriesPath } from '../../callers/seriesCaller';\r\nimport SeriesDiv from './SeriesDiv';\r\n\r\ninterface IFeaturedSeriesSides{\r\n   // series: ISeries[];\r\n}\r\n\r\nexport const FeaturedSeriesSides: React.FC<IFeaturedSeriesSides> = () => {\r\n    const [featueredSeries, setFeaturedSeries] = useState([]);\r\n    const [seriesCaller, signal] = getCaller(seriesPath.selectLatestPreviewSeriesJson);\r\n    useEffect(()=>{\r\n        requestFeaturedSeries();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function requestFeaturedSeries(){\r\n        const featured: IPreviewSeries[] = await seriesCaller();\r\n        if(featured){\r\n            setFeaturedSeries(featured.slice(0, 2)); //majd random lesz elég adattal\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Featured Series</h3>\r\n                <div className=\"double-grid\">\r\n                    {featueredSeries.map(f=> {\r\n                        return (<Link key={`featured-${f.id}`} to={`/rewer/series?seriesId=${f.id}`}>\r\n                                    <SeriesDiv series={f} />\r\n                                </Link>)\r\n                    })}\r\n                </div>  \r\n        </div>\r\n    )\r\n}\r\nexport default FeaturedSeriesSides;","import { POSTAsynch } from \"./caller\";\r\nimport { ISearchResult } from \"../../common/search\"\r\nexport async function mainSearch(keyword: string, limit: number): Promise<ISearchResult | null>{\r\n    const response = await POSTAsynch(\"/search\", { keyword: keyword, limit: limit});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const searchPath = {\r\n    search: \"/search\",\r\n    autoComplete: \"/auto-complete\"\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\n\r\ninterface IAutoCompleteElement{\r\n    text: string;\r\n    selectedValue: string;\r\n    onClick: (s: string)=>void;\r\n}\r\n\r\nexport const AutoCompleteElement: React.FC<IAutoCompleteElement> = ({text, onClick, selectedValue}: IAutoCompleteElement)=> {\r\n    const [mainClass, setMainClass] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(selectedValue === text){\r\n            setMainClass(\"auto-selected\");\r\n        } else {\r\n            setMainClass(\"\");\r\n        }\r\n    }, [selectedValue])\r\n    return (\r\n        <div className={mainClass} onClick={()=>{ onClick(text) }}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteElement;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useEffect, Fragment, useRef} from 'react'\r\nimport AutoCompleteElement from './AutoCompleteElement';\r\n\r\ninterface IAutoCompleteInput{\r\n    value: string;\r\n    setValue: (s: string)=>void;\r\n    stringList: string[];\r\n    onSubmit: (selectedValue: string)=>void;\r\n    requestAutoComplete: (s: string)=>any;\r\n}\r\n\r\nexport const AutoCompleteInput: React.FC<IAutoCompleteInput> = ({value, setValue, stringList, onSubmit, requestAutoComplete}: IAutoCompleteInput)=> {\r\n    const [showAutoComplete, setShowAutoComplete] = useState(false);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const wrapperRef = useRef<HTMLDivElement>(); //to handle click outside of the component\r\n\r\n    useEffect(()=>{\r\n        addClickListener();\r\n        return ()=>{\r\n            removeClickListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!showAutoComplete) setSelected(\"\");\r\n    }, [showAutoComplete]);\r\n\r\n    const addClickListener = ()=>{\r\n        window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const removeClickListener = ()=>{\r\n        window.removeEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const handleClickOutside = (e)=>{\r\n        if(wrapperRef.current != null && !wrapperRef.current.contains(e.target)){\r\n            setShowAutoComplete(false);\r\n        }\r\n    }\r\n\r\n    const onDivKeyDown = (e)=>{ //it has to be working with keystrokes, since a regular useEffect(,[keyword]) would update too frequently\r\n        if(e.key === \"Enter\"){\r\n            if(showAutoComplete) {\r\n                if(selected !== \"\") {\r\n                    onSubmit(selected);\r\n                    setValue(selected);\r\n                } else {\r\n                    onSubmit(value);\r\n                }\r\n            } else {\r\n                onSubmit(value);\r\n            }\r\n            setShowAutoComplete(false);\r\n        }\r\n        if(e.keyCode === 38){ //up\r\n            if(showAutoComplete && stringList.length > 0) handleUpArrow();\r\n        }\r\n        if(e.keyCode === 40){ //down\r\n            if(showAutoComplete && stringList.length > 0) handleDownArrow();\r\n        }\r\n        if(e.keyCode === 39){ //right\r\n            if(showAutoComplete && stringList.length > 0 && selected !== \"\") {\r\n                setValue(selected);\r\n            }\r\n        }\r\n        if (e.keyCode >= 48 && e.keyCode <= 57) {\r\n            // Number\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n            // Alphabet upper case\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 97 && e.keyCode <= 122) {\r\n            // Alphabet lower case\r\n            autoComplete(e.keyCode);\r\n        } else if(e.keycode === 32 || e.keycode === 8 || e.keyCode === 46){ //space && backspace && delete\r\n            setShowAutoComplete(true);\r\n            setSelected(\"\");\r\n        }\r\n    }\r\n\r\n    const autoComplete = (keyCode: number)=>{\r\n        setShowAutoComplete(true);\r\n        setSelected(\"\");\r\n        if(value.length > 3) requestAutoComplete(value + String.fromCharCode(keyCode).toLowerCase());\r\n    }\r\n\r\n    const handleUpArrow = ()=>{\r\n        if(selected === \"\"){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== 0) setSelected(stringList[currentIndex-1]);\r\n        }\r\n    }\r\n\r\n    const handleDownArrow = ()=>{\r\n        if(selected === \"\" && stringList.length > 0){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== stringList.length-1) setSelected(stringList[currentIndex+1]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapperRef} className=\"autocomplete\" >\r\n            <div className=\"search-grid\">\r\n                <input placeholder=\"Keresés\" className=\"search-input\" autoComplete=\"off\" value={value}  onChange={(e)=>{ setValue(e.target.value); }} onKeyDown={(e)=>{ onDivKeyDown(e); }} onClick={()=>{ setShowAutoComplete(true) }} type=\"text\" list=\"datalist\" />\r\n                <button className=\"search-btn\" onClick={()=>{ onSubmit(value); setShowAutoComplete(false); }}><FontAwesomeIcon icon={faSearch} /></button>\r\n            </div>\r\n            <div className=\"autocomplete-items\">\r\n            {showAutoComplete ? \r\n            (<Fragment>\r\n                {stringList.map(s=>{\r\n                    return <AutoCompleteElement key={`auto-${s}`} text={s} onClick={(s)=>{ setValue(s); setShowAutoComplete(false); onSubmit(s); } } selectedValue={selected} />\r\n                })\r\n             }\r\n            </Fragment> ):\r\n            (<Fragment></Fragment>)}\r\n            </div>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteInput;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { ReviewRow } from './ReviewRow'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IUserReviewRow{\r\n    review: IReview;\r\n    onDelete: (reviewId: number) => void;\r\n}\r\n\r\nexport const UserReviewRow: React.FC<IUserReviewRow> = ({review, onDelete}: IUserReviewRow)=> {\r\n    const [imgsrc, onImgError, setImgsrc] = useImage(\"/rewer/uploads/posters\", `0.jpg`, ESize.Small);\r\n    useEffect(() => {\r\n        if(review.seriesId){\r\n            setImgsrc(\"/rewer/uploads/seriesposters\", `${review.seriesId}.jpg`);\r\n        } else {\r\n            setImgsrc(\"/rewer/uploads/posters\", `${review.movieId}.jpg`);\r\n        }\r\n    }, [review]);\r\n    return (\r\n        <div className=\"followed-review-grid\">\r\n            <div className=\"review-poster-container\">          \r\n                    {(review.seriesId != null)?\r\n                    (<Fragment><Link  to={`/rewer/series?seriesId=${review.seriesId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} className=\"review-poster\" />\r\n                        <p>{review.seriesTitle}</p>\r\n                        </Link>\r\n                        <Link to={`/rewer/movie?movieId=${review.movieId}`}><p>{review.movieTitle}</p></Link>\r\n                    </Fragment>\r\n                    ):\r\n                    (<Link to={`/rewer/movie?movieId=${review.movieId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} />\r\n                        <p>{review.movieTitle}</p>\r\n                    </Link>)}\r\n            </div>\r\n            <div>\r\n                <ReviewRow review={review} onDelete={onDelete} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserReviewRow;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from '../movie/Score';\r\nimport LikeAdder from './LikeAdder';\r\nimport { normalFormat } from '../../dateParser';\r\nimport \"./reviewStyle.css\";\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IReviewRowM{\r\n    review: IReview;\r\n    onDelete: (reviewId: number)=>void;\r\n}\r\n\r\nexport const ReviewRowM: React.FC<IReviewRowM> = ({review, onDelete}: IReviewRowM)=> {\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    const [titleClass, setTitleClass] = useState(\"movie-title\");\r\n    const [avatarSrc, avatarError] = useImage(\"/rewer/uploads/avatars\", `${review.userName}.jpg`, ESize.Small)\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n        if(review.score > 6){\r\n            setTitleClass(\"movie-title title-high\");\r\n        } else if(review.score > 3){\r\n            setTitleClass(\"movie-title title-medium\");\r\n        } else {\r\n            setTitleClass(\"movie-title title-low\");\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                {(review.nickName != null && review.nickName !== \"\")?\r\n                (<Link to={`/rewer/user?userName=${review.userName}`}>\r\n                    <img className=\"avatar\" src={avatarSrc} alt={`avatar_${review.nickName}`} onError={avatarError} />\r\n                </Link>):\r\n                (<p></p>)}  \r\n                <Link className=\"nick-name\" to={`/rewer/user?userName=${review.userName}`}>{review.nickName}</Link>\r\n                <Score value={review.score} />\r\n            </div>\r\n            {(review.seriesId) ?\r\n            (<Fragment>\r\n                <Link className={titleClass} to={`/rewer/series?seriesId=${review.seriesId}`}>{review.seriesTitle}:</Link><br/><br/>              \r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n            <Link className={titleClass} to={`/movie?movieId=${review.movieId}`}>{review.movieTitle}</Link>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={review.myLike} onDelete={onDelete} popIndex={review.popIndex} reviewDate={normalFormat(review.date)} />\r\n        </div>\r\n    )\r\n}\r\nexport default ReviewRowM;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postCaller } from '../callers/caller';\r\nimport { searchPath } from '../callers/search';\r\nimport { useAsyncReference } from '../hooks';\r\nimport AutoCompleteInput from './AutoCompleteInput';\r\n\r\nexport default function SearchSide() {\r\n    const [keyword, setKeyword] = useAsyncReference(\"\");\r\n    const [autoList, setAutoList] = useState<string[]>([]);\r\n    const [autoCaller, signal] = postCaller();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    const requestAutoComplete = async (word: string) =>{\r\n        const newAutos = await autoCaller({ limit: 5, keyword: word }, searchPath.autoComplete);\r\n        if(newAutos){\r\n            setAutoList(newAutos);\r\n        }\r\n    }\r\n\r\n    function search(searchParam: string){\r\n        history.push(`/rewer/search?keyword=${searchParam}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <AutoCompleteInput value={keyword.current} setValue={(s)=>{ setKeyword(s) }} onSubmit={(s)=>{ search(s)}} requestAutoComplete={(s)=>{ requestAutoComplete(s) }} stringList={autoList} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { EReviewOrderBy } from '../../callers/reviewCaller';\r\n\r\ninterface IReviewOrderBySelect{\r\n   defaultValue: EReviewOrderBy;\r\n   onUpdate: (newValue: EReviewOrderBy) => void;\r\n}\r\n\r\nexport const ReviewOrderBySelect: React.FC<IReviewOrderBySelect> = ({defaultValue, onUpdate}: IReviewOrderBySelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function update(){\r\n        onUpdate(EReviewOrderBy[select.current.value]);\r\n    }\r\n    return (\r\n        <select ref={select} onChange={update} value={defaultValue}>\r\n            <option value={EReviewOrderBy.popIndex}>Most popular</option>\r\n            <option value={EReviewOrderBy.date}>Latest</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ReviewOrderBySelect;\r\n"],"sourceRoot":""}