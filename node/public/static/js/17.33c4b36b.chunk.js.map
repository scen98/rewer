{"version":3,"sources":["pages/EditMovie.tsx"],"names":["EditMovie","useBinder","id","parseInt","getParameter","title","releaseDate","summary","runtime","casts","genres","movie","setMovie","bindMovie","postCaller","movieCaller","signal","messenger","useContext","MessageContext","a","moviePath","selectDetailedMovie","ECallType","SELECT","selectedMovie","addFail","updateMovie","ISOK","addSuccess","insertMovie","INSERT","newId","changeParam","name","value","toString","genre","newMovieGenre","movieId","genreId","genreName","insertMovieGenre","deleteMovieGenre","filter","g","useEffect","getMovie","abort","clear","document","className","onClick","m","movieBinder","onAdd","addGenre","onDelete","removeGenre"],"mappings":"oSAee,SAASA,IAAY,IAAD,EACMC,YAA0B,CAACC,GAAIC,SAASC,YAAa,YAAaC,MAAO,GAAIC,YAAa,GAAIC,QAAS,GAAIC,QAAS,EAAGC,MAAO,GAAIC,OAAQ,KADhJ,mBACxBC,EADwB,KACjBC,EADiB,KACPC,EADO,OAEDC,uBAFC,mBAExBC,EAFwB,KAEXC,EAFW,KAGvBC,EAAcC,qBAAWC,KAAzBF,UAHuB,4CAkB/B,4BAAAG,EAAA,sEACgCL,EAAY,CAAEb,GAAIS,EAAMT,IAAKmB,IAAUC,oBAAqBC,YAAUC,QADtG,QACUC,EADV,QAGQb,EAASa,GAETR,EAAUS,QAAQ,gDAL1B,4CAlB+B,kEA2B/B,sBAAAN,EAAA,sEACaL,EAAYJ,EAAOU,IAAUM,YAAaJ,YAAUK,MADjE,kCAEQX,EAAUY,WAAW,uBAAyB,KAFtD,sBAIQZ,EAAUS,QAAQ,mDAJ1B,4CA3B+B,kEAmC/B,4BAAAN,EAAA,sEACwBL,EAAYJ,EAAOU,IAAUS,YAAaP,YAAUQ,QAD5E,QACUC,EADV,SAGQpB,EAAS,2BAAKD,GAAN,IAAaT,GAAI8B,KACzBC,YAAY,CAAEC,KAAM,UAAWC,MAAOH,EAAMI,aAC5CnB,EAAUY,WAAW,sBAAuB,MAE5CZ,EAAUS,QAAQ,6CAP1B,4CAnC+B,kEA8C/B,WAAwBW,GAAxB,eAAAjB,EAAA,6DACUkB,EAA6B,CAC/BpC,GAAI,EACJqC,QAAS5B,EAAMT,GACfsC,QAASH,EAAMnC,GACfuC,UAAWJ,EAAMH,MALzB,SAM6BnB,EAAYuB,EAAejB,IAAUqB,iBAAkBnB,YAAUQ,QAN9F,OAMIO,EAAcpC,GANlB,OAOOoC,EAAcpC,GAAK,GAClBU,EAAS,2BAAID,GAAL,IAAYD,OAAO,GAAD,mBAAOC,EAAMD,QAAb,CAAqB4B,OARvD,4CA9C+B,kEA0D/B,WAA2BpC,GAA3B,SAAAkB,EAAA,sEACaL,EAAY,CAAEb,GAAIA,GAAKmB,IAAUsB,iBAAkBpB,YAAUK,MAD1E,kCAEQhB,EAAS,2BAAID,GAAL,IAAYD,OAAQC,EAAMD,OAAOkC,QAAO,SAAAC,GAAC,OAAGA,EAAE3C,KAAOA,QAFrE,sBAIQe,EAAUS,QAAQ,yCAJ1B,4CA1D+B,sBAkE/B,OA9DAoB,qBAAU,WAIN,OAHGnC,EAAMT,GAAK,GALa,mCAMvB6C,GAEG,WACH/B,EAAOgC,QACP/B,EAAUgC,WAEf,IAEHH,qBAAU,WACHnC,IAAOuC,SAAS7C,MAAT,iBAA2BM,EAAMN,MAAjC,eACX,CAACM,IAmDJ,kBAAC,WAAD,KACI,yBAAKwC,UAAU,kBACTxC,EAAMT,GAAK,EACZ,4BAAQkD,QAtEc,4CAsEtB,QACA,4BAAQA,QAvEc,4CAuEtB,UACD,kBAAC,IAAD,CAAkBzC,MAAOA,EAAOC,SAAU,SAACyC,GAAuBzC,EAASyC,IAAMC,YAAazC,IAC5FF,EAAMT,GAAK,EACZ,kBAAC,WAAD,KACG,kBAAC,IAAD,CAAYS,MAAOA,EAAO4C,MAAO,SAAClB,IA3Ef,oCA2EkCmB,CAASnB,IAAUoB,SAAU,SAACvD,IA3EhE,oCA2E+EwD,CAAYxD,MAC9G,kBAAC,IAAD,CAAUS,MAAOA,EAAOC,SAAU,SAACyC,GAAuBzC,EAASyC,OAEtE,kBAAC,WAAD","file":"static/js/17.33c4b36b.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useContext, useEffect } from \"react\";\r\nimport \"../main.css\";\r\nimport EditMovieDetails from \"../components/movie/EditMovieDetails\";\r\nimport { moviePath } from \"../callers/movieCaller\";\r\nimport { useBinder } from \"../hooks\";\r\nimport { changeParam, getParameter } from \"../urlManager\";\r\nimport { EditCast, } from \"../components/movie/EditCast\";\r\nimport GenreAdder from \"../components/movie/GenreAdder\";\r\nimport { IGenre, IMovieGenre } from \"../../common/genre\";\r\nimport { ECallType, postCaller } from \"../callers/caller\";\r\nimport { IDetailedMovie } from \"../../common/movie\";\r\nimport { MessageContext } from \"../components/Messenger\";\r\nimport \"../components/movie/movieStyle.css\";\r\n\r\nexport default function EditMovie(){\r\n    const [movie, setMovie, bindMovie] = useBinder<IDetailedMovie>({id: parseInt(getParameter(\"movieId\")), title: \"\", releaseDate: \"\", summary: \"\", runtime: 0, casts: [], genres: []});\r\n    const [movieCaller, signal] = postCaller();\r\n    const { messenger } = useContext(MessageContext);\r\n    useEffect(()=>{\r\n        if(movie.id > 0){\r\n            getMovie();\r\n        }\r\n        return ()=>{\r\n            signal.abort();\r\n            messenger.clear();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(movie) document.title = `(Edit) ${movie.title} - Rewer`;\r\n    }, [movie]);\r\n    \r\n    async function getMovie(){\r\n        const selectedMovie = await movieCaller({ id: movie.id}, moviePath.selectDetailedMovie, ECallType.SELECT);\r\n        if(selectedMovie){\r\n            setMovie(selectedMovie);\r\n        } else {\r\n            messenger.addFail(\"Server error: could not retireve movie data.\");\r\n        }\r\n    }\r\n\r\n    async function saveMovie(){\r\n        if(await movieCaller(movie, moviePath.updateMovie, ECallType.ISOK)){\r\n            messenger.addSuccess(\"Movie details saved.\" , 5000);\r\n        } else {\r\n            messenger.addFail(\"Server error: movie details could not be saved.\");\r\n        }\r\n    }\r\n\r\n    async function createMovie(){\r\n        const newId = await movieCaller(movie, moviePath.insertMovie, ECallType.INSERT);\r\n        if(newId){\r\n            setMovie({ ...movie, id: newId });\r\n            changeParam({ name: \"movieId\", value: newId.toString() });\r\n            messenger.addSuccess(\"Movie page created.\", 3000);\r\n        } else {\r\n            messenger.addFail(\"Server error: movie could not be created.\");\r\n        }\r\n    }\r\n\r\n    async function addGenre(genre: IGenre){\r\n        const newMovieGenre: IMovieGenre = { \r\n            id: 0,\r\n            movieId: movie.id, \r\n            genreId: genre.id, \r\n            genreName: genre.name };\r\n        newMovieGenre.id = await movieCaller(newMovieGenre, moviePath.insertMovieGenre, ECallType.INSERT);\r\n        if(newMovieGenre.id > 0){\r\n            setMovie({...movie, genres: [ ...movie.genres, newMovieGenre ]});\r\n        }\r\n    }\r\n\r\n    async function removeGenre(id: number){\r\n        if(await movieCaller({ id: id}, moviePath.deleteMovieGenre, ECallType.ISOK)){\r\n            setMovie({...movie, genres: movie.genres.filter(g=> g.id !== id)});\r\n        } else {\r\n            messenger.addFail(\"Server error: could not delete genre.\");\r\n        }\r\n    }\r\n \r\n    return (\r\n    <Fragment>\r\n        <div className=\"main-container\">\r\n            {(movie.id > 0)?\r\n            (<button onClick={saveMovie}>Save</button>) :\r\n            (<button onClick={createMovie}>Create</button>)}\r\n            <EditMovieDetails movie={movie} setMovie={(m: IDetailedMovie)=> { setMovie(m) }} movieBinder={bindMovie} />\r\n            {(movie.id > 0)?\r\n            (<Fragment>\r\n                <GenreAdder movie={movie} onAdd={(genre: IGenre)=> { addGenre(genre) }} onDelete={(id:number)=> { removeGenre(id) }} />\r\n                <EditCast movie={movie} setMovie={(m: IDetailedMovie)=> { setMovie(m) }} />\r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    </Fragment>)\r\n}"],"sourceRoot":""}