{"version":3,"sources":["pages/FollowsPage.tsx","components/movie/MovieRow.tsx","components/movie/MovieDiv.tsx","components/movie/FeaturedSides.tsx","callers/userCaller.ts","components/profile/LoginMsg.tsx","components/review/UserReviewRow.tsx","components/review/ReviewRowM.tsx","components/profile/FollowedUserRow.tsx","components/movie/TopRatedSides.tsx","components/review/FollowedReviews.tsx","components/profile/FollowedUsers.tsx","components/profile/FollowingUsers.tsx"],"names":["FollowsPage","useEffect","document","title","window","screen","width","className","length","MovieRow","movie","cutPos","useImage","id","ESize","Small","imgsrc","onImgError","useState","imgClass","setImgClass","useCutter","summary","avgScore","to","src","alt","onError","Date","releaseDate","value","normalFormat","toString","MovieDiv","Medium","scoreClass","setScoreClass","scoreLine","useRef","current","style","display","ref","Math","round","FeaturedSides","featuredMovies","setFeaturedMovies","getCaller","moviePath","selectLatestMoviesJson","caller","signal","a","movies","rnd","floor","random","slice","getLatestFeatures","abort","map","f","key","userPath","doesExist","selectDetailedUser","uploadAvatar","updateUserInfo","selectFollowers","selectFollowedUsers","userName","request","response","status","json","file","detailedUser","LoginMsg","message","UserReviewRow","review","onDelete","setImgsrc","seriesId","movieId","movieTitle","seriesTitle","ReviewRowM","reviewText","setReviewText","briefText","text","substring","onClick","showLess","titleClass","setTitleClass","avatarSrc","avatarError","score","nickName","reviewLike","myLike","popIndex","reviewDate","date","FollowedUserRow","user","TopRatedSides","topRateds","setTopRateds","postCaller","min","limit","offset","selectMoviesByScore","callTopRated","tops","getTopRateds","t","FollowedReviews","useAsyncReference","reviews","setReviews","errorMsg","setErrorMsg","reviewPath","selectFollowedReviews","reviewCaller","useScroll","addScroll","removeScroll","ECallType","SELECT","followedReviews","localStorage","getItem","setTimeout","tryRequestReviews","deleteReview","reviewId","ISOK","filter","r","requestReviews","FollowedUsers","users","setUsers","followCaller","followed","getFollowedUsers","u","FollowingUsers","following","getFollowingUsers"],"mappings":"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","file":"static/js/12.4f6a338d.chunk.js","sourcesContent":["import React, { Fragment, useEffect } from 'react'\r\nimport FollowedReviews from '../components/review/FollowedReviews'\r\nimport FollowedUsers from '../components/profile/FollowedUsers'\r\nimport TopRatedSides from '../components/movie/TopRatedSides';\r\nimport FeaturedSides from '../components/movie/FeaturedSides';\r\nimport FollowingUsers from '../components/profile/FollowingUsers';\r\nexport default function FollowsPage() {\r\n    useEffect(()=>{\r\n        document.title = \"Follows - Rewer\";\r\n    }, []);\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 1100 ?\r\n            (<div className=\"main-grid\">\r\n                <div className=\"left-item\">\r\n                    <div className=\"side-container medium-side\" >  \r\n                        <FollowedUsers />\r\n                    </div>\r\n                    <div className=\"side-container medium-side\" >\r\n                        <TopRatedSides />                 \r\n                    </div>  \r\n                </div>\r\n                <div className=\"main-item\">\r\n                    <FollowedReviews />\r\n                </div>\r\n                <div className=\"right-item\">\r\n                    <div className=\"side-container medium-side\">     \r\n                        <FollowingUsers length={10} />                                    \r\n                    </div>\r\n                    <div className=\"side-container medium-side\">    \r\n                        <FeaturedSides />     \r\n                    </div>                     \r\n                </div>\r\n             </div>):\r\n            (<div className=\"main-container\">\r\n                <FollowedReviews />\r\n            </div>)}\r\n        </Fragment>\r\n    )\r\n}","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from './Score';\r\nimport { normalFormat } from '../../dateParser';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieRow{\r\n    movie: IMovie;\r\n    cutPos?: number;\r\n}\r\n\r\nexport const MovieRow: React.FC<IMovieRow> = ({movie, cutPos = 70}: IMovieRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(movie.summary, cutPos);\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(movie.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n        if(window.screen.width > 600){\r\n\r\n        }\r\n    }, [movie]);\r\n    return (\r\n        <Link className=\"movie-row-grid\" to={`/rewer/movie?movieId=${movie.id}`}>\r\n            <img className={imgClass} src={imgsrc} alt={`poster-${movie.id}`} title={movie.title} onError={onImgError} />\r\n            <div>\r\n                <p className=\"row-title\">{movie.title}</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>\r\n            {(new Date(movie.releaseDate) <= new Date()) ? \r\n            (<Score value={movie.avgScore} />) ? (movie.releaseDate == null) : \r\n            (<p></p>) :\r\n            (<p className=\"movie-row-date\">{normalFormat(movie.releaseDate.toString())}</p>)\r\n            }\r\n        </Link>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Medium, true);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={onImgError} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { getCaller } from '../../callers/caller';\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport MovieDiv from './MovieDiv';\r\n\r\nexport default function FeaturedSides() {\r\n    const[featuredMovies, setFeaturedMovies] = useState<IDetailedMovie[]>([]);\r\n    const [caller, signal] = getCaller(moviePath.selectLatestMoviesJson)\r\n    useEffect(()=>{\r\n        getLatestFeatures();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getLatestFeatures(){\r\n        const movies: IDetailedMovie[] = await caller();\r\n        const rnd = Math.floor(Math.random()*5);\r\n        if(movies) setFeaturedMovies(movies.slice(rnd, rnd+2)); \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Featured Films</h3>\r\n                    <div className=\"double-grid\">\r\n                        {featuredMovies.map(f=> {\r\n                            return (<Link key={`featured-${f.id}`} to={`/rewer/movie?movieId=${f.id}`}>\r\n                                        <MovieDiv movie={f} />\r\n                                    </Link>)\r\n                        })}\r\n                    </div>  \r\n        </Fragment>\r\n    )\r\n}\r\n","import { IDetailedUser, IUser, WDoesUserExistRequest, WSelectFollowedUsersRequest, WSelectFollowersRequest } from \"../../common/user\";\r\nimport * as caller from \"./caller\";\r\n\r\nexport const userPath = {\r\n    doesExist: \"/user/does_exist\",\r\n    selectDetailedUser: \"/user/select_detailed_user\",\r\n    uploadAvatar: \"/user/upload_avatar\",\r\n    updateUserInfo: \"/user/update_user_info\",\r\n    selectFollowers: \"/user/select_followers\",\r\n    selectFollowedUsers: \"/user/select_followed_users\"\r\n}\r\n\r\nexport async function doesExist(userName: string): Promise<Response>{\r\n    const request: WDoesUserExistRequest = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/does_exist\", request);\r\n    return response;\r\n}\r\n\r\nexport async function selectDetailedUser(userName: string): Promise<IDetailedUser | null>{\r\n    const request = { userName: userName };\r\n    const response = await caller.POSTAsynch(\"/user/select_detailed_user\", request);\r\n    if(response.status === 200){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function uploadAvatar(file: FormData){\r\n    const response = await caller.UploadFile(\"/user/upload_avatar\", file);\r\n    return response;\r\n}\r\n\r\nexport async function updateUserInfo(detailedUser: IDetailedUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/update_user_info\", detailedUser);\r\n    if(response.status === 200){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function selectFollowers(data: WSelectFollowersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followers\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}\r\n\r\nexport async function selectFollowedUsers(data: WSelectFollowedUsersRequest): Promise<IUser[] | null>{\r\n    const response = await caller.POSTAsynch(\"/user/select_followed_users\", data);\r\n    if(response.status !== 200) return null;\r\n    return await response.json();\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface ILoginMsg{\r\n    message: string;\r\n}\r\n\r\nexport const LoginMsg: React.FC<ILoginMsg> = ({message}: ILoginMsg) => {\r\n    return (\r\n    <p>You must be <Link to=\"/rewer/profile\">logged in</Link> {message}</p>\r\n    )\r\n}\r\n\r\nexport default LoginMsg;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { ReviewRow } from './ReviewRow'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IUserReviewRow{\r\n    review: IReview;\r\n    onDelete: (reviewId: number) => void;\r\n}\r\n\r\nexport const UserReviewRow: React.FC<IUserReviewRow> = ({review, onDelete}: IUserReviewRow)=> {\r\n    const [imgsrc, onImgError, setImgsrc] = useImage(\"/rewer/uploads/posters\", `0.jpg`, ESize.Small);\r\n    useEffect(() => {\r\n        if(review.seriesId){\r\n            setImgsrc(\"/rewer/uploads/seriesposters\", `${review.seriesId}.jpg`);\r\n        } else {\r\n            setImgsrc(\"/rewer/uploads/posters\", `${review.movieId}.jpg`);\r\n        }\r\n    }, [review]);\r\n    return (\r\n        <div className=\"followed-review-grid\">\r\n            <div className=\"review-poster-container\">          \r\n                    {(review.seriesId != null)?\r\n                    (<Fragment><Link  to={`/rewer/series?seriesId=${review.seriesId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} className=\"review-poster\" />\r\n                        <p>{review.seriesTitle}</p>\r\n                        </Link>\r\n                        <Link to={`/rewer/movie?movieId=${review.movieId}`}><p>{review.movieTitle}</p></Link>\r\n                    </Fragment>\r\n                    ):\r\n                    (<Link to={`/rewer/movie?movieId=${review.movieId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} />\r\n                        <p>{review.movieTitle}</p>\r\n                    </Link>)}\r\n            </div>\r\n            <div>\r\n                <ReviewRow review={review} onDelete={onDelete} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserReviewRow;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from '../movie/Score';\r\nimport LikeAdder from './LikeAdder';\r\nimport { normalFormat } from '../../dateParser';\r\nimport \"./reviewStyle.css\";\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IReviewRowM{\r\n    review: IReview;\r\n    onDelete: (reviewId: number)=>void;\r\n}\r\n\r\nexport const ReviewRowM: React.FC<IReviewRowM> = ({review, onDelete}: IReviewRowM)=> {\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    const [titleClass, setTitleClass] = useState(\"movie-title\");\r\n    const [avatarSrc, avatarError] = useImage(\"/rewer/uploads/avatars\", `${review.userName}.jpg`, ESize.Small)\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n        if(review.score > 6){\r\n            setTitleClass(\"movie-title title-high\");\r\n        } else if(review.score > 3){\r\n            setTitleClass(\"movie-title title-medium\");\r\n        } else {\r\n            setTitleClass(\"movie-title title-low\");\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                {(review.nickName != null && review.nickName !== \"\")?\r\n                (<Link to={`/rewer/user?userName=${review.userName}`}>\r\n                    <img className=\"avatar\" src={avatarSrc} alt={`avatar_${review.nickName}`} onError={avatarError} />\r\n                </Link>):\r\n                (<p></p>)}  \r\n                <Link className=\"nick-name\" to={`/rewer/user?userName=${review.userName}`}>{review.nickName}</Link>\r\n                <Score value={review.score} />\r\n            </div>\r\n            {(review.seriesId) ?\r\n            (<Fragment>\r\n                <Link className={titleClass} to={`/rewer/series?seriesId=${review.seriesId}`}>{review.seriesTitle}:</Link><br/><br/>              \r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n            <Link className={titleClass} to={`/movie?movieId=${review.movieId}`}>{review.movieTitle}</Link>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={review.myLike} onDelete={onDelete} popIndex={review.popIndex} reviewDate={normalFormat(review.date)} />\r\n        </div>\r\n    )\r\n}\r\nexport default ReviewRowM;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IUser } from '../../../common/user';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IFollowedUserRow{\r\n    user: IUser;\r\n}\r\n\r\nexport const FollowedUserRow: React.FC<IFollowedUserRow> = ({user}: IFollowedUserRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/avatars\", `${user.userName}.jpg`, ESize.Small);\r\n    return (\r\n        <Link to={`/rewer/user?userName=${user.userName}`}>\r\n            <div className=\"followed-user-row highlight\">\r\n                <img src={imgsrc} onError={onImgError} className=\"followed-user-row-item\" alt=\"user-poster\" />\r\n                <p className=\"followed-user-row-item\">{user.nickName}</p>\r\n            </div>\r\n        </Link>            \r\n    )\r\n}\r\nexport default FollowedUserRow;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport { IDetailedMovie, WSelectMoviesByScoreRequest } from '../../../common/movie';\r\nimport { postCaller } from '../../callers/caller';\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport { MovieRow } from './MovieRow'\r\n\r\nexport default function TopRatedSides() {\r\n    const[topRateds, setTopRateds] = useState([]);\r\n    const request: WSelectMoviesByScoreRequest = {\r\n        min: 7,\r\n        limit: 4,\r\n        offset: 0\r\n    }\r\n    const [callTopRated, signal] = postCaller(request, moviePath.selectMoviesByScore);\r\n    useEffect(()=>{\r\n        async function getTopRateds(){\r\n            const tops: IDetailedMovie[] = await callTopRated();\r\n            if(tops){\r\n                setTopRateds(tops);\r\n            }\r\n        }\r\n        getTopRateds();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n             <h3 className=\"center-text\">Top Rated</h3>      \r\n                    {topRateds.map(t=>{\r\n                        return <MovieRow key={`top-rated-${t.id}`} movie={{...t, summary: \"\"}} />\r\n                    })} \r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useAsyncReference, useScroll } from '../../hooks';\r\nimport UserReviewRow from './UserReviewRow';\r\nimport ReviewRowM from './ReviewRowM';\r\nimport LoginMsg from '../profile/LoginMsg';\r\nimport { reviewPath } from '../../callers/reviewCaller';\r\nimport { ECallType, postCaller } from '../../callers/caller';\r\n\r\nexport default function FollowedReviews() {\r\n    const [reviews, setReviews] = useAsyncReference([]); //for the listeners\r\n    const downloadCount = 10;\r\n    const [errorMsg, setErrorMsg] = useState(<Fragment></Fragment>);\r\n    const [reviewCaller, signal] = postCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews);\r\n    const [addScroll, removeScroll] = useScroll(0.9, showMore);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")) requestReviews();         \r\n        return ()=> {\r\n            signal.abort();\r\n            removeScroll();\r\n        }\r\n    }, []);\r\n    \r\n    async function requestReviews(){\r\n        const followedReviews = await reviewCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        } else {\r\n            if(localStorage.getItem(\"userName\") != null)  setTimeout(tryRequestReviews, 3000);\r\n        }\r\n    }\r\n\r\n    async function tryRequestReviews(){\r\n        const followedReviews = await reviewCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        } else {\r\n            setErrorMsg(<LoginMsg message=\"manage your followers.\" />);\r\n        }\r\n    }\r\n\r\n    async function showMore(){\r\n        removeScroll(); //make sure the listener doenst fire again until we downloaded the new reviews\r\n        const followedReviews = await reviewCaller({limit: downloadCount, offset: reviews.current.length}, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews([...reviews.current, ...followedReviews]);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        }\r\n    }\r\n\r\n    async function deleteReview(reviewId: number){\r\n        if(await reviewCaller({ id: reviewId }, reviewPath.deleteReview, ECallType.ISOK)){\r\n            setReviews(reviews.current.filter(r=> r.id !== reviewId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {(localStorage.getItem(\"userName\") == null)?\r\n                (<LoginMsg message={\"to follow other reviewers.\"} />):\r\n                (<Fragment></Fragment>)}\r\n                {reviews.current.map(r=> {\r\n                return <UserReviewRow key={`followed-${r.id}`} review={r} onDelete={deleteReview} />\r\n                })}\r\n            </Fragment>) : \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {reviews.current.map(r=> {\r\n                return <ReviewRowM key={`followed-${r.id}`} review={r} onDelete={deleteReview} />\r\n                })}\r\n            </Fragment>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { postCaller } from '../../callers/caller';\r\nimport { userPath } from '../../callers/userCaller'\r\nimport FollowedUserRow from './FollowedUserRow';\r\n\r\ninterface IFollowedUsers{\r\n    //users: User[];\r\n}\r\n\r\nexport const FollowedUsers: React.FC<IFollowedUsers> = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [followCaller, signal] = postCaller({userName : localStorage.getItem(\"userName\")}, userPath.selectFollowedUsers);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            getFollowedUsers();\r\n        }\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getFollowedUsers(){\r\n        const followed = await followCaller();\r\n        if(followed){\r\n            setUsers(followed);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">Followed</h3>\r\n            {users.map(u=>{\r\n                return <FollowedUserRow key={`followed-${u.userName}`} user={u} />\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default FollowedUsers;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { userPath } from '../../callers/userCaller'\r\nimport FollowedUserRow from './FollowedUserRow';\r\nimport { Link } from \"react-router-dom\";\r\nimport { postCaller } from '../../callers/caller';\r\nimport { IUser } from '../../../common/user';\r\n\r\ninterface IFollowingUsers{\r\n    length: number;\r\n}\r\n\r\nexport const FollowingUsers: React.FC<IFollowingUsers> = ({length}: IFollowingUsers) => {\r\n    const [users, setUsers] = useState<IUser[]>([]);\r\n    const [caller, signal] = postCaller({ userName: localStorage.getItem(\"userName\"), limit: length }, userPath.selectFollowers);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            getFollowingUsers();\r\n        }\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getFollowingUsers(){\r\n        const following: IUser[] = await caller();\r\n        if(following){\r\n            setUsers(following);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className=\"center-text\">My Followers</h3>\r\n            {users.slice(0, 8).map(u=>{\r\n                return <FollowedUserRow key={`followed-${u.userName}`} user={u} />\r\n            })}\r\n            {users.length > length ?\r\n            (<Link to={\"TODO\"}>More</Link>):\r\n            (<Fragment></Fragment>)}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default FollowingUsers;"],"sourceRoot":""}