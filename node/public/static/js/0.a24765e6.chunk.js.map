{"version":3,"sources":["hooks.tsx","dateParser.ts","callers/movieCaller.ts","components/movie/Score.tsx","callers/reviewCaller.ts","components/review/ReviewRow.tsx","components/review/LikeAdder.tsx"],"names":["ESize","useAsyncReference","value","ref","useRef","useState","forceRender","newState","Object","is","current","s","useBinder","get","set","event","target","name","useAsyncBinder","updateState","useCutter","defaultText","defaultCutPos","getCutText","firstText","firstCut","isCut","setIsCut","outputText","setOutputText","cut","text","cutPos","newText","didCut","toCut","length","substring","onEnter","callback","key","useScroll","pos","newPos","position","listener","window","innerHeight","scrollY","document","body","offsetHeight","addEventListener","removeEventListener","useImage","path","fileName","size","Normal","tryAgain","imgSrc","setImgSrc","tryAgainRef","onError","imgSrcSetter","newPath","newFileName","parseDateYYYYMMDD","date","getFullYear","monthNames","getMonth","getDate","getYear","Date","getDay","normalFormat","d","parseForInput","month","day","toString","moviePath","selectDetailedMovie","selectLatestMovies","selectLatestMoviesJson","selectLatestMoviesByGenre","selectMoviesByScore","getGenres","insertMovie","updateMovie","deleteMovie","uploadPoster","insertMovieGenre","deleteMovieGenre","selectUpcomingMovies","selectUpcomingMoviesJson","file","a","UploadFile","ok","compareMovieGenresByName","genre1","genre2","genreName","localeCompare","Score","scoreClass","setScoreClass","useEffect","className","Math","round","EReviewOrderBy","reviewPath","selectMyReview","selectReviewsByMovie","selectFollowedReviews","selectReviewsByUser","insertReview","deleteReview","updateReview","insertReviewLike","updateReviewLike","selectReviewByUserAndMovie","ReviewRow","review","onDelete","reviewText","isReviewCut","cutReviewText","userName","Small","imgsrc","onImgError","nickName","to","src","alt","score","onClick","reviewLike","myLike","popIndex","reviewDate","LikeAdder","showModal","useContext","ModalContext","getReviewLike","setReviewLike","getPopIndex","setPopIndex","thumbsUpClass","setThumbsUpClass","thumbsDownClass","setThumbsDownClass","likeBtn","dislikeBtn","postCaller","caller","signal","messenger","MessageContext","updatePopIndex","newReviewLike","difference","oldPopIndex","insertLike","toInsert","ECallType","INSERT","newId","id","addFail","updateLike","toUpdate","ISOK","reviewId","localStorage","getItem","style","display","abort","clear","icon","faThumbsUp","faThumbsDown","parseInt","title","content","acceptButton","refuseButton","faTrashAlt"],"mappings":"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","file":"static/js/0.a24765e6.chunk.js","sourcesContent":["import { useState, useRef } from \"react\";\r\nexport function useAsyncReference<T>(value: T) {\r\n    const ref = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    return [ref, updateState] as const;\r\n}\r\n\r\nexport function useBinder<T>(value: T){\r\n    const [get, set] = useState<T>(value);\r\n    const bind = (event)=>{\r\n        set({...get, [event.target.name]: event.target.value});\r\n    }\r\n    return [get, set, bind] as const;\r\n}\r\n\r\nexport function useAsyncBinder<T>(value: T){\r\n    const ref = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    const bind = (event) => {\r\n        updateState({...ref.current, [event.target.name]: event.target.value});\r\n    }\r\n    return [ref, updateState, bind] as const;\r\n}\r\n\r\nexport function useCutter(defaultText: string, defaultCutPos = 0): readonly [string, boolean, (text: string, custPos?: number)=>void]{\r\n    const [firstText, firstCut] = getCutText(defaultText, defaultCutPos > 0, defaultCutPos);\r\n    const [isCut, setIsCut] = useState(firstCut);\r\n    const [outputText, setOutputText] = useState(firstText);\r\n\r\n    const cut = (text: string, cutPos = 0) => {\r\n        const [newText, didCut] = getCutText(text, cutPos > 0, cutPos);\r\n        setOutputText(newText);\r\n        setIsCut(didCut);\r\n    }\r\n\r\n    return [outputText, isCut, cut] as const;\r\n}\r\n\r\nfunction getCutText(text: string, toCut: boolean, cutPos: number): [string, boolean]{\r\n    if(toCut && text.length > cutPos){\r\n        return [text.substring(0, cutPos) + \"...\", true];\r\n    }\r\n    return [text, false];\r\n}\r\n\r\nexport function setBinder(event, object, setter: (any)=> void){\r\n    setter({...object.current, [event.target.name]: event.target.value});\r\n}\r\n\r\nexport function onEnter(event, callback){\r\n    if (event.key === 'Enter') {\r\n        callback();\r\n    }\r\n}\r\n\r\nexport function useScroll(pos: number, callback: ()=> any): readonly [()=>void, ()=>void]{ \r\n    let newPos = pos;\r\n    if(pos > 1 || pos < 0) newPos = 0.8;\r\n    const position = useRef(newPos);\r\n    const listener = ()=>{\r\n        if((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*position.current)){\r\n            callback();\r\n        }\r\n    }\r\n    const addListener = () =>{\r\n        window.addEventListener(\"scroll\", listener);\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener(\"scroll\", listener);\r\n    }\r\n    return [addListener, removeListener] as const;\r\n}\r\n\r\nexport enum ESize{\r\n    Normal = \"\",\r\n    Medium = \"medium-\",\r\n    Small = \"small-\",\r\n}\r\n\r\nexport function useImage(path: string, fileName: string, size = ESize.Normal, tryAgain = false){\r\n    const [imgSrc, setImgSrc] = useState<string>(`${path}/${size}${fileName}`);\r\n    const tryAgainRef = useRef(tryAgain);\r\n    const onError= () =>{\r\n        if(tryAgainRef.current){\r\n            setImgSrc(`${path}/${ESize.Normal}${fileName}`);\r\n            tryAgainRef.current = false;\r\n        } else {\r\n            setImgSrc(`${path}/${size}0.jpg`);\r\n        }\r\n    }\r\n    const imgSrcSetter = (newPath: string, newFileName: string) => {\r\n        setImgSrc(`${newPath}/${size}${newFileName}`);\r\n    }\r\n    return [imgSrc, onError, imgSrcSetter] as const;\r\n}\r\n\r\nexport interface IWindowState{\r\n    name: string;\r\n    maxValue: number;\r\n}\r\n\r\nexport function useWidth(defWindowStates: IWindowState[]){\r\n    const windowsStates = useRef(defWindowStates.sort(compareWindowStates));\r\n    const [currentWindowState, setCurrentWindowState] = useState(windowsStates.current.find(w=> w.maxValue > window.innerWidth));\r\n    const listen = ()=>{\r\n        window.addEventListener(\"resize\", ()=>{\r\n            windowStateSetter();\r\n        });\r\n    }\r\n    const cleanUpListener = ()=>{\r\n        window.removeEventListener(\"resize\", ()=>{\r\n            windowStateSetter();\r\n        });\r\n    }\r\n    const windowStateSetter = ()=>{\r\n        setCurrentWindowState(windowsStates.current.find(w=> w.maxValue > window.innerWidth));\r\n    }\r\n    return [currentWindowState, listen, cleanUpListener] as const;\r\n}\r\n\r\nfunction compareWindowStates(wstate1: IWindowState, wstate2: IWindowState){\r\n    if(wstate1.maxValue < wstate2.maxValue) return -1;\r\n    if(wstate1.maxValue > wstate2.maxValue) return 1;\r\n    return 0;\r\n}","export function parseDateHun(date: Date): string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}. ${parseDatehhdd(date)}`;\r\n}\r\n\r\nexport function parseDateYYYYMMDD(date: Date):string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}`;\r\n}\r\n\r\nexport function parseDatehhdd(date: Date):string{\r\n    if(date.getMinutes() < 10){\r\n        return `${date.getHours()}:0${date.getMinutes()}`;\r\n    } else {\r\n        return `${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n}\r\n\r\nexport function getYear(date: string){\r\n    return new Date(date).getFullYear();\r\n}\r\n\r\nexport function getMonth(date: string){\r\n    return monthNames[new Date(date).getMonth()]; \r\n}\r\n\r\nexport function getDay(date: string){\r\n    return new Date(date).getDate();\r\n}\r\n\r\nexport function normalFormat(date: string): string{\r\n    let d = new Date(date);\r\n    return `${d.getDate()} ${monthNames[d.getMonth()]} ${d.getFullYear()}`;\r\n}\r\n\r\nexport function parseForInput(date: Date): string{\r\n    let month: string;\r\n    let day: string;\r\n    if(date.getMonth() < 9){\r\n        month = `0${date.getMonth()+1}`;\r\n    } else {\r\n        month = (date.getMonth()+1).toString();\r\n    }\r\n    if(date.getDate() < 10){\r\n        day = `0${date.getDate()}`;\r\n    } else {\r\n        day = date.getDate().toString();\r\n    }\r\n\r\n    return `${date.getFullYear()}-${month}-${day}`;\r\n}\r\n\r\nexport let monthNames = [\"Janury\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n","import { IGenre, IMovieGenre, ISeriesGenre } from \"../../common/genre\";\r\nimport { UploadFile } from \"../callers/caller\";\r\n\r\nexport const moviePath = {\r\n    selectDetailedMovie: \"/movie/select_detailed_movie\",\r\n    selectLatestMovies: \"/movie/select_latest_movies\",\r\n    selectLatestMoviesJson: \"/jsondb/latest_movies.json\",\r\n    selectLatestMoviesByGenre: \"/movie/select_latest_movies_by_genre\",\r\n    selectMoviesByScore: \"/movie/select_movies_by_score\",\r\n    getGenres: \"/jsondb/genres.json\",\r\n    insertMovie: \"/movie/insert_movie\",\r\n    updateMovie: \"/movie/update_movie\",\r\n    deleteMovie: \"/movie/delete_movie\",\r\n    uploadPoster: \"/movie/upload_poster\",\r\n    insertMovieGenre: \"/genre/insert_movie_genre\",\r\n    deleteMovieGenre: \"/genre/delete_movie_genre\",\r\n    selectUpcomingMovies: \"/movie/select_upcoming_movies\",\r\n    selectUpcomingMoviesJson: \"/jsondb/upcoming_movies.json\"\r\n}\r\n\r\nexport async function uploadPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/movie/upload_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function compareGenresByName(genre1: IGenre, genre2: IGenre){\r\n    return genre1.name.localeCompare(genre2.name);\r\n}\r\n\r\nexport function compareMovieGenresByName(genre1: IMovieGenre | ISeriesGenre, genre2: IMovieGenre | ISeriesGenre){\r\n    return genre1.genreName.localeCompare(genre2.genreName);\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const Score: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"score high\");\r\n        } else if(value > 3){\r\n            setScoreClass(\"score\");\r\n        } else if(value > 0) {\r\n            setScoreClass(\"score low\");\r\n        } else {\r\n            setScoreClass(\"score unset\");\r\n        }\r\n    }, [value])\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{Math.round(value*10) / 10}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const reviewPath = {\r\n    selectMyReview: \"/review/select_review_by_user_and_movie\",\r\n    selectReviewsByMovie: \"/review/select_reviews_by_movie\",\r\n    selectFollowedReviews: \"/review/select_followed_reviews\",\r\n    selectReviewsByUser: \"/review/select_reviews_by_user\",\r\n    insertReview: \"/review/insert_review\",\r\n    deleteReview: \"/review/delete_review\",\r\n    updateReview: \"/review/update_review\",\r\n    insertReviewLike: \"/review/insert_reviewlike\",\r\n    updateReviewLike: \"/review/update_reviewlike\",\r\n    selectReviewByUserAndMovie: \"/review/select_review_by_user_and_movie\"\r\n}\r\n\r\nexport enum EReviewOrderBy{\r\n    popIndex = \"popIndex\",\r\n    date = \"date\"\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, Fragment } from 'react'\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./reviewStyle.css\"\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Score } from '../movie/Score'\r\nimport LikeAdder from './LikeAdder'\r\nimport { IReview } from '../../../common/review'\r\nimport { ESize, useCutter, useImage } from '../../hooks'\r\nimport \"../profile/profileStyle.css\";\r\n\r\ninterface IReviewRow{\r\n    review: IReview;\r\n    onDelete: (reviewId: number) => void;\r\n}\r\n\r\nexport const ReviewRow: React.FC<IReviewRow> = ({review, onDelete}: IReviewRow) => {\r\n    const [reviewText, isReviewCut, cutReviewText] = useCutter(review.text, 500);\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/avatars\", `${review.userName}.jpg`, ESize.Small);\r\n    const maxCharCount = 500;\r\n    useEffect(()=>{\r\n        cutReviewText(review.text, maxCharCount);\r\n    }, [review]);\r\n \r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                {(review.nickName != null && review.nickName !== \"\")?\r\n                (<Link to={`/review/user?userName=${review.userName}`}>\r\n                    <img className=\"avatar\" src={imgsrc} onError={onImgError} alt={`avatar_${review.userName}`} />\r\n                </Link>):\r\n                (<p></p>)} \r\n                <Link className=\"nick-name\" to={`/rewer/user?userName=${review.userName}`}>{review.nickName}</Link>\r\n                <Score value={review.score} />\r\n            </div>\r\n            {reviewText}\r\n            {(isReviewCut)?\r\n            (<Fragment><p onClick={()=>{ cutReviewText(review.text) }} className=\"show-more\">Show more</p></Fragment>):\r\n            (<Fragment>{(review.text.length > maxCharCount)? \r\n                (<p onClick={ ()=>{ cutReviewText(review.text, maxCharCount) }} className=\"show-more\">Show less</p>): \r\n                (<Fragment></Fragment>)}</Fragment>)}\r\n            <LikeAdder reviewLike={review.myLike} popIndex={review.popIndex} onDelete={onDelete} reviewDate={normalFormat(review.date)} />\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef, useContext, Fragment } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThumbsUp, faThumbsDown, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./reviewStyle.css\"\r\nimport { IReviewLike } from '../../../common/reviewLike'\r\nimport { reviewPath } from '../../callers/reviewCaller'\r\nimport { ECallType, postCaller } from '../../callers/caller'\r\nimport { IModalContext, ModalContext } from '../Modal'\r\nimport { MessageContext } from '../Messenger'\r\n\r\ninterface ILikeAdder{\r\n    reviewLike: IReviewLike;\r\n    popIndex: number;\r\n    onDelete?: (reviewId: number) => void;\r\n    reviewDate?: string;\r\n    //onUpdate: (newPopIndex: number) => void;\r\n}\r\n\r\nexport const LikeAdder: React.FC<ILikeAdder> = ({reviewLike, popIndex, onDelete, reviewDate}: ILikeAdder) => {\r\n    const { showModal } = useContext<IModalContext>(ModalContext);\r\n    const [getReviewLike, setReviewLike] = useState(reviewLike);\r\n    const [getPopIndex, setPopIndex] = useState(popIndex);\r\n    const [thumbsUpClass, setThumbsUpClass] = useState(\"\");\r\n    const [thumbsDownClass, setThumbsDownClass] = useState(\"\");\r\n    const likeBtn = useRef<HTMLDivElement>();\r\n    const dislikeBtn = useRef<HTMLDivElement>();\r\n    const [caller, signal] = postCaller();  \r\n    const { messenger } = useContext(MessageContext)\r\n\r\n    function upVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === 1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        } else { //===-1\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            likeBtn.current.style.display = \"none\";\r\n            dislikeBtn.current.style.display = \"none\";\r\n        }\r\n        return ()=>{\r\n            signal.abort();\r\n            messenger.clear();\r\n        }\r\n    }, []);\r\n\r\n    function downVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === -1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        } else { //=== 1\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    function updatePopIndex(newReviewLike: IReviewLike){ //has to be called before updating the reviewlike, since it is dependant on the old value\r\n        const difference = newReviewLike.value - getReviewLike.value;\r\n        setPopIndex(oldPopIndex => { return oldPopIndex + difference});\r\n    }\r\n\r\n    async function insertLike(toInsert: IReviewLike){\r\n        const newId = await caller(toInsert, reviewPath.insertReviewLike, ECallType.INSERT);\r\n        const newReviewLike = {...getReviewLike, id: newId, value: toInsert.value};\r\n        updatePopIndex(newReviewLike);\r\n        setReviewLike(newReviewLike);\r\n        if(newReviewLike == null || newReviewLike.id < 1){\r\n            messenger.addFail(\"Server error: could not like/dislike the selected review.\");\r\n        }\r\n    }\r\n\r\n    async function updateLike(toUpdate: IReviewLike){\r\n        setReviewLike(toUpdate);\r\n        updatePopIndex(toUpdate);\r\n        if(!await caller(toUpdate, reviewPath.updateReviewLike, ECallType.ISOK)){  \r\n            messenger.addFail(\"Server error: could not like/dislike the selected revie.w\");\r\n        }\r\n    }\r\n\r\n    async function deleteReview(){\r\n        onDelete(reviewLike.reviewId);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setDefaultColor();\r\n        if(getReviewLike){\r\n            if(getReviewLike.value === 1){\r\n                setThumbsUpClass(\"up-arrow liked\");\r\n            } else if(getReviewLike.value === -1){\r\n                setThumbsDownClass(\"down-arrow disliked\");\r\n            } \r\n        }\r\n    }, [getReviewLike]); \r\n\r\n    function setDefaultColor(){\r\n        setThumbsUpClass(\"up-arrow unliked\");\r\n        setThumbsDownClass(\"down-arrow unliked\");\r\n    }\r\n\r\n    function displayModal(){\r\n        showModal(deleteReview, \r\n            { \r\n                title: \"Removing review\",\r\n                content:<Fragment>\r\n                            <p>If you delete this review, it won't be possible to retrieve it later.</p>\r\n                            <p>Are you certain you still want to proceed?</p>\r\n                        </Fragment>,\r\n                acceptButton: <Fragment>Delete review</Fragment>,\r\n                refuseButton: <Fragment>Cancel</Fragment>\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"like-adder\">\r\n            <div>\r\n                <span ref={likeBtn} className={thumbsUpClass} ><FontAwesomeIcon onClick={upVote} icon={faThumbsUp} /></span>            \r\n                <span className=\"pop-index\">{getPopIndex}</span>\r\n                <span ref={dislikeBtn} className={thumbsDownClass} ><FontAwesomeIcon onClick={downVote} icon={faThumbsDown} /></span>\r\n            </div>\r\n            <div className=\"review-date\">\r\n            <span className=\"review-date\">{reviewDate}</span>\r\n                {(localStorage.getItem(\"permission\") && parseInt(localStorage.getItem(\"permission\")) > 1)?\r\n                (<span className={\"delete-icon\"}>\r\n                    <FontAwesomeIcon onClick={displayModal} icon={faTrashAlt} />\r\n                </span>):\r\n                (<Fragment></Fragment>)}\r\n            </div>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeAdder;\r\n"],"sourceRoot":""}