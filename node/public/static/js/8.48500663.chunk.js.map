{"version":3,"sources":["components/article/SideArticleRow.tsx","components/article/SideArticleRowList.tsx","components/movie/MovieSlider.tsx","components/movie/LatestMovies.tsx","components/movie/UpComingMovies.tsx","components/series/SeriesSlider.tsx","components/series/LatestSeries.tsx","components/cast/SpotlightRow.tsx","components/cast/Spotlight.tsx","pages/Home.tsx","callers/castCaller.ts","callers/seriesCaller.ts","components/movie/MovieRow.tsx","components/movie/MovieDiv.tsx","components/series/SeriesDiv.tsx","components/movie/MovieRowList.tsx","components/profile/LoginMsg.tsx","callers/articleCaller.ts","callers/search.ts","components/AutoCompleteElement.tsx","components/AutoCompleteInput.tsx","components/review/UserReviewRow.tsx","components/review/ReviewRowM.tsx","components/SearchSide.tsx","components/article/ArticleRow.tsx","components/article/ArticleRowList.tsx","components/review/FollowedReviews.tsx","components/series/SeriesRow.tsx"],"names":["SideArticleRow","article","cutPos","useImage","id","ESize","Normal","imgsrc","imgError","useCutter","text","isTextCut","cutText","className","src","onError","alt","title","onClick","length","readMore","href","target","SideArticleRowList","articles","map","a","key","MovieSlider","movies","onHover","nextBtn","useRef","prevBtn","useState","slice","getMovies","setMovies","pageIndex","setPageIndex","useEffect","current","style","visibility","ref","Math","ceil","old","icon","faBackward","m","onMouseEnter","to","MovieDiv","movie","faForward","LatestMovies","onMovieUpdate","summary","casts","genres","releaseDate","selectedMovie","setSelectedMovie","postCaller","limit","moviePath","selectLatestMovies","movieCaller","signal","directors","setDirectors","starring","setStarring","latests","requestMovies","abort","allCasts","getAllCasts","filter","c","castTypeId","window","screen","width","d","artistId","artistName","MovieRowList","UpComingMovies","selectUpcomingMovies","offset","upcoming","normalFormat","SeriesSlider","series","getSeries","setSeries","s","SeriesDiv","LatestSeries","lastEpisodeId","lastEpisodeTitle","selectedSeries","setSelectedSeries","seriesPath","selectLatestPreviewSeries","seriesCaller","latestSeries","SeriesRow","SpotlightRow","cast","Small","onImgError","movieId","movieName","Spotlight","mixedCasts","setMixedCasts","fullCasts","mixedLength","i","selected","floor","random","push","generateMixedCasts","Home","latestCasts","setLatestsCasts","news","setNews","articlePath","selectLatestArticles","mainCaller","document","getNews","localStorage","getItem","FollowedReviews","LoginMsg","message","SearchSide","ArticleRowList","castPath","getCastTypes","insertCast","insertCasts","updateCast","deleteCast","compareCastType","cast1","cast2","insertSeries","updateSeries","uploadSeriesPoster","selectDetailedSeries","selectLatestPreviewSeriesJson","insertSeriesGenre","deleteSeriesGenre","file","UploadFile","ok","selectDetailedSeriesPostFetch","detailedSeries","sort","compareMovieGenresByName","seasons","orderSeasonCast","orderCasts","episodes","compareEpisodes","getSeasonCount","getEpisodeCount","sum","forEach","season","getFirstEpisodeDate","getAvgRuntime","epCount","episode","runtime","getSeriesCast","seriesCast","setSeriesCastFromSeason","getAvgSeriesScore","reviewedEpisodeCount","avgScore","setSeriesCastFromEpisode","setSeriesCastFromCast","sc","find","updatedNames","characterNames","name","episodeCount","handleExistingSeriesCast","episode1","episode2","Date","MovieRow","imgClass","setImgClass","value","toString","Medium","scoreClass","setScoreClass","scoreLine","display","round","insertArticle","updateArticle","deleteArticle","selectArticlesByUser","uploadImage","uploadArticleImage","searchPath","search","autoComplete","AutoCompleteElement","selectedValue","mainClass","setMainClass","AutoCompleteInput","setValue","stringList","onSubmit","requestAutoComplete","showAutoComplete","setShowAutoComplete","setSelected","wrapperRef","addClickListener","removeClickListener","addEventListener","handleClickOutside","removeEventListener","e","contains","keyCode","String","fromCharCode","toLowerCase","handleUpArrow","currentIndex","indexOf","handleDownArrow","placeholder","onChange","onKeyDown","keycode","onDivKeyDown","type","list","faSearch","UserReviewRow","review","onDelete","setImgsrc","seriesId","movieTitle","seriesTitle","ReviewRowM","reviewText","setReviewText","briefText","substring","showLess","titleClass","setTitleClass","userName","avatarSrc","avatarError","score","nickName","reviewLike","myLike","popIndex","reviewDate","date","useAsyncReference","keyword","setKeyword","autoList","setAutoList","autoCaller","history","useHistory","word","newAutos","searchParam","ArticleRow","reviews","setReviews","errorMsg","setErrorMsg","reviewPath","selectFollowedReviews","reviewCaller","useScroll","addScroll","removeScroll","ECallType","SELECT","followedReviews","setTimeout","tryRequestReviews","deleteReview","reviewId","ISOK","r","requestReviews"],"mappings":"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","file":"static/js/8.48500663.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./articleStyles.css\";\r\n\r\ninterface ISideArticleRow{\r\n    article: IArticle;\r\n    cutPos: number;\r\n}\r\n\r\nexport const SideArticleRow: React.FC<ISideArticleRow> = ({article, cutPos}: ISideArticleRow)=> {\r\n    const [imgsrc, imgError] = useImage(\"/rewer/uploads/articles\", `${article.id}.jpg`, ESize.Normal);\r\n    const [text, isTextCut, cutText] = useCutter(article.text, cutPos);\r\n    return (\r\n        <div className=\"article-side-row\">\r\n            <img src={imgsrc} onError={imgError} alt={`${article.title}`}  />\r\n            <h3>{article.title}</h3> \r\n            <p>{text}</p>\r\n            {(isTextCut)?\r\n                (<Fragment><p onClick={()=> { cutText(article.text) }} className=\"show-more\">Show more</p></Fragment>):\r\n                (<Fragment>\r\n                    {(article.text.length > cutPos)?\r\n                    (<Fragment><p className=\"show-more\" onClick={()=>{ cutText(article.text, cutPos) }}>Show less</p></Fragment>):\r\n                    (<Fragment></Fragment>)}\r\n                </Fragment>)\r\n            }\r\n            {(article.readMore != null && article.readMore.length > 10)?\r\n            (<a href={article.readMore} target=\"blank\" >Full article</a>):\r\n            (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideArticleRow;","import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport SideArticleRow from './SideArticleRow'\r\n\r\ninterface ISideArticleRowList{\r\n    articles: IArticle[];\r\n    cutPos: number;\r\n}\r\n\r\nexport const SideArticleRowList: React.FC<ISideArticleRowList> = ({articles, cutPos}: ISideArticleRowList)=> {\r\n    return (\r\n        <Fragment>\r\n            {articles.map(a=>{\r\n                return <SideArticleRow key={`side-article-${a.id}`} article={a} cutPos={cutPos} />\r\n            })}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SideArticleRowList;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./movieStyle.css\";\r\nimport MovieDiv from './MovieDiv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\nimport { IDetailedMovie } from '../../../common/movie';\r\n\r\ninterface IMovieSlider{\r\n    movies: IDetailedMovie[];\r\n    onHover: (movie: IDetailedMovie) => void;\r\n}\r\n\r\nexport const MovieSlider: React.FC<IMovieSlider> = ({movies, onHover}: IMovieSlider) => {\r\n    const nextBtn = useRef<HTMLButtonElement>();\r\n    const prevBtn = useRef<HTMLButtonElement>();\r\n    const [getMovies, setMovies] = useState(movies.slice(0, 3));\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(0, 3));\r\n        if(movies.length <= 3){\r\n            nextBtn.current.style.visibility = \"hidden\";\r\n            prevBtn.current.style.visibility = \"hidden\";\r\n        } else {\r\n            nextBtn.current.style.visibility = \"visible\";\r\n            prevBtn.current.style.visibility = \"visible\";\r\n        }\r\n    }, [movies]);\r\n\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(pageIndex * 3, (pageIndex * 3)+3));\r\n    }, [pageIndex]);\r\n\r\n    function next(){\r\n        if((pageIndex+1) * 3 >= movies.length){\r\n            setPageIndex(0);\r\n        } else {\r\n            setPageIndex(old => { return old + 1} );\r\n        }\r\n    }\r\n\r\n    function prev(){\r\n        if((pageIndex-1) < 0 ){\r\n            setPageIndex(Math.ceil(movies.length / 3)-1);\r\n        } else {\r\n            setPageIndex(old => { return old - 1} );\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className=\"slide-grid\">\r\n            <button ref={nextBtn} className=\"slide-btn\" onClick={prev}><FontAwesomeIcon icon={faBackward} /></button>\r\n            <div className=\"movie-grid\">\r\n                {getMovies.map(m=>{\r\n                    return <Link onMouseEnter={()=>{onHover(m)}} key={`latest-${m.id}`} to={`/rewer/movie?movieId=${m.id}`} className=\"movie-anchor\" ><MovieDiv movie={m} /></Link>\r\n                })}\r\n            </div>\r\n            <button ref={prevBtn} className=\"slide-btn\" onClick={next}><FontAwesomeIcon icon={faForward} /></button> \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieSlider;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { MovieRowList } from './MovieRowList';\r\nimport MovieSlider from './MovieSlider'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./movieStyle.css\"\r\nimport { moviePath } from '../../callers/movieCaller';\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { ICast } from '../../../common/cast';\r\nimport { postCaller } from '../../callers/caller';\r\n\r\ninterface ILatestMovies{\r\n    onMovieUpdate?: (movies: ICast[]) => void;\r\n}\r\n\r\nexport const LatestMovies: React.FC<ILatestMovies> = ({onMovieUpdate}: ILatestMovies) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState<IDetailedMovie>({id: 0, title: \"\", summary: \"\", casts: [], genres: [], releaseDate: \"\"});\r\n    const [movieCaller, signal] = postCaller({ limit: 9 }, moviePath.selectLatestMovies);\r\n    const [directors, setDirectors] = useState<ICast[]>([]);\r\n    const [starring, setStarring] = useState<ICast[]>([]);\r\n    useEffect(()=>{\r\n        async function requestMovies(){\r\n            const latests: IDetailedMovie[] = await movieCaller();\r\n            if(latests){\r\n                setMovies(latests.slice(0, 9));\r\n                setSelectedMovie(latests[0]);\r\n            }\r\n        }\r\n        requestMovies();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(onMovieUpdate){    \r\n            onMovieUpdate(getAllCasts());\r\n        }\r\n    }, [movies]);\r\n\r\n    useEffect(()=>{\r\n        if(selectedMovie == null || selectedMovie.casts == null) {\r\n            setDirectors([]);\r\n            setStarring([]);\r\n        } else {\r\n            setDirectors(selectedMovie.casts.filter(c=> c.castTypeId === 1));\r\n            setStarring(selectedMovie.casts.filter(c=> c.castTypeId > 3).slice(0, 5));\r\n        }\r\n    }, [selectedMovie]);\r\n\r\n    function getAllCasts(){\r\n        let allCasts: ICast[] = [];\r\n        for(let movie of movies) {\r\n            allCasts = [...allCasts, ...movie.casts];\r\n        }\r\n        return allCasts;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            (<Fragment>\r\n                <div className=\"highlight-grid\">\r\n                    <MovieSlider movies={movies} onHover={(movie: IDetailedMovie)=> { setSelectedMovie(movie) }} />\r\n                    <div className=\"highlighted-movie fade\">\r\n                        <h3>{selectedMovie.title}</h3>\r\n                        <p className=\"highlight-text\">{selectedMovie.summary}</p>\r\n                        <p><span>Directed by: </span>\r\n                        {directors.filter(c=> c.castTypeId === 1).map(d=>{\r\n                            return <Link key={`latest-${d.artistId}`} to={`/rewer/star?artistId=${d.artistId}`}>\r\n                            {d.artistName}\r\n                            {(d.id !== directors[directors.length-1].id) ?\r\n                            (<span>, </span>):\r\n                            (<Fragment></Fragment>)}\r\n                            </Link>                                   \r\n                        })}\r\n                        </p>\r\n                        <p>                                                \r\n                        <span>Starring: </span>\r\n                        {starring.map(d=>{\r\n                            return <Link key={`latest-${d.artistId}`} to={`/rewer/star?artistId=${d.artistId}`}>\r\n                            {d.artistName}\r\n                            {(d.id !== starring[starring.length-1].id) ?\r\n                            (<span>, </span>):\r\n                            (<Fragment></Fragment>)}\r\n                            </Link>\r\n                        })}\r\n                        </p> \r\n                    </div>\r\n                </div> \r\n            </Fragment>) :\r\n            (<MovieRowList movies={movies} />)\r\n            }       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatestMovies;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\nimport { MovieRowList } from './MovieRowList';\r\nimport { MovieSlider } from './MovieSlider'\r\nimport { Link } from \"react-router-dom\"\r\nimport { normalFormat } from '../../dateParser';\r\nimport { moviePath} from '../../callers/movieCaller';\r\nimport { IDetailedMovie } from '../../../common/movie';\r\nimport { postCaller } from '../../callers/caller';\r\nimport { ICast } from '../../../common/cast';\r\n\r\nexport default function UpComingMovies() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState<IDetailedMovie>({id: 0, title: \"\", summary: \"\", casts: [], genres: [], releaseDate: \"\"});\r\n    const [movieCaller, signal] = postCaller(moviePath.selectUpcomingMovies);\r\n    const [directors, setDirectors] = useState<ICast[]>([]);\r\n    const [starring, setStarring] = useState<ICast[]>([]);\r\n    useEffect(()=>{\r\n        requestMovies();\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n    async function requestMovies(){\r\n        const upcoming = await movieCaller({ limit: 3, offset: 0 }, moviePath.selectUpcomingMovies);\r\n        if(upcoming){\r\n            setMovies(upcoming);\r\n            setSelectedMovie(upcoming[0]);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(selectedMovie == null || selectedMovie.casts == null){\r\n            setDirectors([]);\r\n            setStarring([]);\r\n        } else {\r\n            setDirectors(selectedMovie.casts.filter(c=> c.castTypeId === 1));\r\n            setStarring(selectedMovie.casts.filter(c=>c.castTypeId > 3).slice(0, 5)); //only display the first 5\r\n        }\r\n    }, [selectedMovie]);\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ?            \r\n            (<div className=\"highlight-grid\">\r\n                <MovieSlider movies={movies} onHover={(movie: IDetailedMovie)=> { setSelectedMovie(movie) }} />\r\n                <div className=\"highlighted-movie fade\">\r\n                    <h3>{selectedMovie.title}</h3>\r\n                    <p className=\"highlight-text\">{selectedMovie.summary}</p>\r\n                    <p>\r\n                    <span>Directed by: </span>\r\n                    {directors.map(d=>{\r\n                        return <Link key={`upcoming-${d.artistId}`} to={`/rewer/star?artistId=${d.artistId}`}>\r\n                            {d.artistName}\r\n                            {(d.id !== directors[directors.length-1].id) ?\r\n                            (<span>, </span>): \r\n                            (<Fragment></Fragment>)} {/*puts comma between list elements */}\r\n                        </Link>                            \r\n                    })}    \r\n                    </p>\r\n                    <p>\r\n                    <span>Starring: </span> \r\n                    {starring.map(d=>{\r\n                        return <Link key={`upcoming-${d.artistId}`} to={`/rewer/star?artistId=${d.artistId}`}>\r\n                            {d.artistName}\r\n                            {(d.id !== starring[starring.length-1].id) ?\r\n                            (<span>, </span>):\r\n                            (<Fragment></Fragment>)}\r\n                        </Link>\r\n                    })}                        \r\n                    </p>\r\n                    <p>Coming: <b>{normalFormat(selectedMovie.releaseDate)}</b></p>\r\n                </div>\r\n            </div> \r\n            \r\n            ) :\r\n            (<MovieRowList movies={movies} />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../movie/movieStyle.css\"\r\nimport SeriesDiv from './SeriesDiv'\r\nimport { IPreviewSeries } from '../../../common/series'\r\n\r\ninterface ISeriesSlider{ \r\n    series: IPreviewSeries[];\r\n    onHover: (series: IPreviewSeries) => void;\r\n}\r\n\r\nexport const SeriesSlider: React.FC<ISeriesSlider> = ({series, onHover}: ISeriesSlider) => {\r\n    const nextBtn = useRef<HTMLButtonElement>();\r\n    const prevBtn = useRef<HTMLButtonElement>();\r\n    const [getSeries, setSeries] = useState([]);\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    useEffect(()=>{\r\n        setSeries(series.slice(0, 3));\r\n        if(series.length <= 3){\r\n            nextBtn.current.style.visibility = \"hidden\";\r\n            prevBtn.current.style.visibility = \"hidden\";\r\n        } else {\r\n            nextBtn.current.style.visibility = \"visible\";\r\n            prevBtn.current.style.visibility = \"visible\";\r\n        }\r\n    }, [series]);\r\n\r\n    useEffect(()=>{\r\n        setSeries(series.slice(pageIndex * 3, (pageIndex * 3)+3));\r\n    }, [pageIndex])\r\n\r\n    function next(){\r\n        if((pageIndex+1) * 3 >= series.length){\r\n            setPageIndex(0);\r\n        } else {\r\n            setPageIndex(old => { return old + 1} );\r\n        }\r\n    }\r\n\r\n    function prev(){\r\n        if((pageIndex-1) < 0 ){\r\n            setPageIndex(Math.ceil(series.length / 3)-1);\r\n        } else {\r\n            setPageIndex(old => { return old - 1} );\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className=\"slide-grid\">\r\n            <button ref={nextBtn} className=\"slide-btn\" onClick={prev}><FontAwesomeIcon icon={faBackward} /></button>\r\n            <div className=\"movie-grid\">\r\n                {getSeries.map(s=>{\r\n                    return <Link key={`series-${s.id}`} onMouseEnter={()=> { onHover(s) }} className=\"movie-anchor\"  to={`/rewer/series?seriesId=${s.id}`}><SeriesDiv series={s} /></Link>\r\n                })}\r\n            </div>\r\n            <button ref={prevBtn} className=\"slide-btn\" onClick={next}><FontAwesomeIcon icon={faForward} /></button> \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SeriesSlider;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport SeriesSlider from './SeriesSlider';\r\nimport {Link} from \"react-router-dom\"\r\nimport SeriesRow from './SeriesRow';\r\nimport { seriesPath } from '../../callers/seriesCaller';\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { postCaller } from '../../callers/caller';\r\n\r\nexport default function LatestSeries() {\r\n    const [series, setSeries] = useState([]);\r\n    const [selectedSeries, setSelectedSeries] = useState({id: 0, title: \"\", summary: \"\", lastEpisodeId: 0, lastEpisodeTitle: \"\"});\r\n    const [seriesCaller, signal] = postCaller({ limit: 9 },seriesPath.selectLatestPreviewSeries);\r\n    useEffect(()=>{\r\n        async function getSeries(){\r\n            const latestSeries: IPreviewSeries[] = await seriesCaller();\r\n            if(latestSeries){\r\n                setSeries(latestSeries.slice(0, 3));\r\n                setSelectedSeries(latestSeries[0]);\r\n            }\r\n         }\r\n        getSeries();             \r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            {window.screen.width > 800 ?\r\n            (<div className=\"highlight-grid\">\r\n                <SeriesSlider series={series} onHover={(s: IPreviewSeries)=> { setSelectedSeries(s) }} />\r\n                <div className=\"highlighted-movie fade\">\r\n                    <h3>{selectedSeries.title}</h3>\r\n                    <p className=\"highlight-text\">{selectedSeries.summary}</p>\r\n                    <p>Last episode: </p>\r\n                    <Link to={`/rewer/movie?movieId=${selectedSeries.lastEpisodeId}`}>{selectedSeries.lastEpisodeTitle}</Link><br/><br/>\r\n                </div>\r\n            </div> ) : \r\n            (<Fragment>{series.map(s=> {\r\n                return <SeriesRow key={`series-row${s.id}`} series={s} />\r\n            })}</Fragment>)}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { ICast } from '../../../common/cast';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface ISpotlightRow{\r\n    cast: ICast;\r\n}\r\n\r\nexport const SpotlightRow: React.FC<ISpotlightRow> = ({cast}: ISpotlightRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/portraits\", `${cast.artistId}.jpg`, ESize.Small);\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={imgsrc} onError={onImgError} alt={`star-${cast.artistName}`} />\r\n            <Link to={`/rewer/star?artistId=${cast.artistId}`} className=\"line-start\" >{cast.artistName}: </Link>\r\n            {window.screen.width >= 1280 ?\r\n            ( <Link to={`/rewer/movie?movieId=${cast.movieId}`} className=\"line-end\" >{cast.movieName}</Link>):\r\n            (<Fragment></Fragment>)}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpotlightRow;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ICast } from '../../../common/cast';\r\nimport SpotlightRow from './SpotlightRow';\r\nimport \"./castStyle.css\"\r\n\r\ninterface ISpotlight{\r\n    casts: ICast[];\r\n    length: number;\r\n}\r\n\r\nexport const Spotlight: React.FC<ISpotlight> = ({casts, length}: ISpotlight) => {\r\n    const [mixedCasts, setMixedCasts] = useState([]);\r\n\r\n    useEffect(()=>{\r\n         setMixedCasts(generateMixedCasts(casts));\r\n    }, [casts]);\r\n    \r\n    function generateMixedCasts(fullCasts: ICast[]){\r\n        let mixedLength: number;\r\n        if(fullCasts.length < length){\r\n            mixedLength = fullCasts.length;\r\n        } else {\r\n            mixedLength = length;\r\n        }\r\n        let ref = fullCasts.filter(c=> c.castTypeId === 4 || c.castTypeId === 5);\r\n        let mixedCasts: ICast[] = [];\r\n        let i: number;\r\n        let selected: ICast;\r\n        for(i=0; mixedLength > i; i++){\r\n            selected = ref[Math.floor(Math.random()*ref.length)];\r\n            mixedCasts.push(selected);\r\n            ref = ref.filter(c=> c.artistId !== selected.artistId);\r\n        }\r\n        return mixedCasts;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-text\">Spotlight</h3>\r\n            {mixedCasts.map(c=>{\r\n                return <SpotlightRow key={`sportlight-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default Spotlight;","import React, { Fragment, useEffect, useState } from 'react'\r\nimport LatestMovies from '../components/movie/LatestMovies';\r\nimport UpComingMovies from '../components/movie/UpComingMovies';\r\nimport LoginMsg from '../components/profile/LoginMsg';\r\nimport FollowedReviews from '../components/review/FollowedReviews';\r\nimport LatestSeries from '../components/series/LatestSeries';\r\nimport \"../main.css\";\r\nimport Spotlight from '../components/cast/Spotlight';\r\nimport SearchSide from '../components/SearchSide';\r\nimport { ICast } from '../../common/cast';\r\nimport { postCaller } from '../callers/caller';\r\nimport { articlePath } from '../callers/articleCaller';\r\nimport { IArticle } from '../../common/article';\r\nimport ArticleRowList from '../components/article/ArticleRowList';\r\nimport { SideArticleRowList } from '../components/article/SideArticleRowList';\r\n\r\nexport default function Home() {\r\n    const [latestCasts, setLatestsCasts] = useState([]);\r\n    const [news, setNews] = useState<IArticle[]>([]);\r\n    const [mainCaller, signal] = postCaller({ limit: 3, offset: 0 }, articlePath.selectLatestArticles);\r\n    useEffect(()=>{\r\n        document.title = \"Rewer\"\r\n        getNews(); \r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    async function getNews(){\r\n        const articles = await mainCaller();\r\n        if(articles){\r\n            setNews(articles);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {window.screen.width > 800 ? \r\n            (<div className=\"home-grid\">\r\n            <div className=\"main-item\">\r\n                <h2 className=\"main-title\">In Theatres</h2>\r\n                <LatestMovies onMovieUpdate={(casts: ICast[]) => { setLatestsCasts(casts); }} />\r\n                <h2 className=\"main-title\">Upcoming</h2>\r\n                <UpComingMovies />\r\n                <h2 className=\"main-title\">Shows with new episodes</h2>\r\n                <LatestSeries />\r\n                <h2 className=\"main-title\">Follows</h2>\r\n                {(localStorage.getItem(\"userName\") != null) ? \r\n                (<FollowedReviews />):\r\n                (<LoginMsg message={\"to follow other users.\"} />)\r\n                }\r\n            </div>\r\n            <div className=\"right-item\">\r\n                <div className=\"side-container\" >\r\n                    <SearchSide />                \r\n                </div>\r\n                <div className=\"side-container\" >\r\n                    <h2>Latest news</h2>\r\n                    <SideArticleRowList articles={news} cutPos={150} />               \r\n                </div>\r\n                <div className=\"side-container\" >\r\n                    <Spotlight casts={latestCasts} length={5} />                 \r\n                </div>   \r\n            </div>\r\n         </div>):\r\n            (<div className=\"main-container\">\r\n            <h2 className=\"main-title\">In Theatres</h2>\r\n            <LatestMovies />\r\n            <h2 className=\"main-title\">Upcoming</h2>\r\n            <UpComingMovies />\r\n            <h2 className=\"main-title\">Shows with new episodes</h2>\r\n            <LatestSeries />\r\n            <h2 className=\"main-title\">Latest news</h2>\r\n            <ArticleRowList articles={news} cutPos={50} />  \r\n            <h2 className=\"main-title\">Follows</h2>\r\n            {(localStorage.getItem(\"userName\") != null) ? \r\n            (<FollowedReviews />):\r\n            (<LoginMsg message={\"to follow other users.\"} />)\r\n            }\r\n    </div>)}\r\n        </Fragment>\r\n    ) \r\n}\r\n","import { ICast, IMovieCast } from \"../../common/cast\";\r\n\r\nexport const castPath = {\r\n    getCastTypes: \"/jsondb/cast_types.json\",\r\n    insertCast: \"/cast/insert_cast\",\r\n    insertCasts: \"/cast/insert_casts\",\r\n    updateCast: \"/cast/update_cast\",\r\n    deleteCast: \"/cast/delete_cast\"\r\n}\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function compareDate(cast1: IMovieCast, cast2: IMovieCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n","import { ICast, ISeriesCast } from \"../../common/cast\";\r\nimport { IMovie } from \"../../common/movie\";\r\nimport { ISeason } from \"../../common/season\";\r\nimport { IDetailedSeries, IPreviewSeries, ISeries, ISeriesGenre } from \"../../common/series\";\r\nimport { POSTAsynch, UploadFile } from \"./caller\";\r\nimport { compareCastType } from \"./castCaller\";\r\nimport { compareMovieGenresByName } from \"./movieCaller\";\r\n\r\nexport const seriesPath = {\r\n    insertSeries:\"/series/insert_series\",\r\n    updateSeries: \"/series/update_series\",\r\n    uploadSeriesPoster: \"/series/upload_series_poster\",\r\n    selectDetailedSeries: \"/series/select_detailed_series\",\r\n    selectLatestPreviewSeries: \"/series/select_latest_preview_series\",\r\n    selectLatestPreviewSeriesJson: \"/jsondb/latest_series.json\", \r\n    insertSeriesGenre: \"/genre/insert_series_genre\",\r\n    deleteSeriesGenre: \"/genre/delete_series_genre\"\r\n}\r\n\r\nexport async function uploadSeriesPoster(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/series/upload_series_poster\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function selectDetailedSeriesPostFetch(detailedSeries: IDetailedSeries){\r\n    detailedSeries.genres.sort(compareMovieGenresByName);\r\n    orderCasts(detailedSeries);\r\n    for(let season of detailedSeries.seasons) {\r\n        season.episodes.sort(compareEpisodes);\r\n    }\r\n}\r\n\r\nexport async function selectLatestPreviewSeries(limit: number, offset: number): Promise<IPreviewSeries[] | null >{\r\n    const response = await POSTAsynch(\"/series/select_latest_preview_series\", { limit: limit, offset: offset});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function insertSeriesGenre(seriesGenre: ISeriesGenre): Promise<number | null>{\r\n    const response = await POSTAsynch(\"genre/insert_series_genre\", seriesGenre);\r\n    if(response.ok){\r\n        return (await response.json()).newId;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function deleteSeriesGenre(id: number): Promise<boolean>{\r\n    const response = await POSTAsynch(\"genre/delete_series_genre\", { id: id});\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getSeasonCount(series: ISeries): number{\r\n    return series.seasons.filter(s=> s.episodes.length > 0).length;\r\n}\r\n\r\nexport function getEpisodeCount(series: ISeries): number{\r\n    let sum: number = 0;\r\n    series.seasons.forEach(season => {\r\n        sum += season.episodes.length;\r\n    });\r\n    return sum;\r\n}\r\n\r\n\r\nexport function getFirstEpisodeDate(series: ISeries): string{\r\n    if(series.seasons.length > 0 && series.seasons[0].episodes.length > 0){\r\n        return series.seasons[0].episodes[0].releaseDate;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getAvgRuntime(series: ISeries): number{\r\n    let epCount: number = getEpisodeCount(series);\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.runtime > 0) sum += episode.runtime;\r\n        }\r\n    }\r\n    return sum / epCount;\r\n}\r\n\r\nexport function getSeriesCast(series: ISeries): ISeriesCast[]{\r\n    let seriesCast: ISeriesCast[] = [];\r\n    for(let season of series.seasons) {\r\n        setSeriesCastFromSeason(season, seriesCast);\r\n    }\r\n    return seriesCast;\r\n}\r\n\r\nfunction compareSeriesCastByEpisodeCount(scast1: ISeriesCast, scast2: ISeriesCast){\r\n    if(scast1.episodeCount > scast2.episodeCount){\r\n        return -1;\r\n    }\r\n    if(scast1.episodeCount < scast2.episodeCount){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport function getAvgSeriesScore(series: ISeries){\r\n    let reviewedEpisodeCount: number = 0;\r\n    let sum: number = 0;\r\n    for(let season of series.seasons) {\r\n        for(let episode of season.episodes) {\r\n            if(episode.avgScore > 0){\r\n                sum = sum + episode.avgScore;\r\n                reviewedEpisodeCount++;\r\n            } \r\n        }\r\n    }\r\n    return sum / reviewedEpisodeCount;\r\n}\r\n\r\nfunction setSeriesCastFromSeason(season: ISeason, seriesCast: ISeriesCast[]){\r\n    for(let episode of season.episodes) {\r\n        setSeriesCastFromEpisode(episode, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromEpisode(episode: IMovie, seriesCast: ISeriesCast[]){\r\n    for(let cast of episode.casts) {\r\n        setSeriesCastFromCast(cast, seriesCast);\r\n    }\r\n}\r\n\r\nfunction setSeriesCastFromCast(cast: ICast, seriesCast: any[]){\r\n    let sc: ISeriesCast = seriesCast.find(a=> a.artistId === cast.artistId);\r\n    if(sc != null){\r\n        handleExistingSeriesCast(cast, sc);\r\n    } else {\r\n        seriesCast.push({ \r\n            artistId: cast.artistId, \r\n            artistName: cast.artistName, \r\n            episodeCount: 1, \r\n            characterNames: [cast.name], \r\n            castTypeId: cast.castTypeId } );\r\n    }\r\n}\r\n\r\nfunction handleExistingSeriesCast(cast: ICast, sc: any){\r\n     let updatedNames = sc.characterNames;\r\n     if(sc.characterNames.filter(a=> a === cast.name).length === 0){\r\n         updatedNames.push(cast.name);\r\n     }\r\n     sc = {...sc, episodeCount: sc.episodeCount++, characterNames: updatedNames };\r\n}\r\n\r\nfunction orderCasts(series: ISeries){\r\n    for(let season of series.seasons) {\r\n        orderSeasonCast(season);\r\n    }\r\n}\r\n\r\nfunction orderSeasonCast(seasons: ISeason){\r\n    for(let episode of seasons.episodes) {\r\n            episode.casts.sort(compareCastType);\r\n    }\r\n}\r\n\r\nexport function compareEpisodes(episode1: IMovie, episode2: IMovie){\r\n    if(new Date(episode1.releaseDate) > new Date(episode2.releaseDate)){\r\n        return 1;\r\n    }\r\n    if(new Date(episode1.releaseDate) < new Date(episode2.releaseDate)){\r\n        return -1;\r\n    }\r\n    if(episode1.releaseDate === episode2.releaseDate){\r\n        if(episode1.id > episode2.id) return 1;\r\n        if(episode1.id < episode2.id) return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from './Score';\r\nimport { normalFormat } from '../../dateParser';\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useCutter, useImage } from '../../hooks';\r\nimport \"./movieStyle.css\";\r\n\r\ninterface IMovieRow{\r\n    movie: IMovie;\r\n    cutPos?: number;\r\n}\r\n\r\nexport const MovieRow: React.FC<IMovieRow> = ({movie, cutPos = 70}: IMovieRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(movie.summary, cutPos);\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(movie.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n        if(window.screen.width > 600){\r\n\r\n        }\r\n    }, [movie]);\r\n    return (\r\n        <Link className=\"movie-row-grid\" to={`/rewer/movie?movieId=${movie.id}`}>\r\n            <img className={imgClass} src={imgsrc} alt={`poster-${movie.id}`} title={movie.title} onError={onImgError} />\r\n            <div>\r\n                <p className=\"row-title\">{movie.title}</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>\r\n            {(new Date(movie.releaseDate) <= new Date()) ? \r\n            (<Score value={movie.avgScore} />) ? (movie.releaseDate == null) : \r\n            (<p></p>) :\r\n            (<p className=\"movie-row-date\">{normalFormat(movie.releaseDate.toString())}</p>)\r\n            }\r\n        </Link>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { IMovie } from '../../../common/movie';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/posters\", `${movie.id}.jpg`, ESize.Medium, true);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={onImgError} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, {useState, useRef, useEffect } from 'react'\r\nimport { IPreviewSeries } from '../../../common/series';\r\nimport { useImage } from '../../hooks';\r\nimport \"../movie/movieStyle.css\";\r\n\r\ninterface ISeriesDiv{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesDiv: React.FC<ISeriesDiv> = ({series}: ISeriesDiv) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/seriesposters\", `${series.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(series.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [series]);\r\n    \r\n    return (\r\n        <div className=\"movie-container fade\">            \r\n            <img className={imgClass} src={imgsrc} alt={`${series.title}-poster`} onError={onImgError} />                \r\n            <p className=\"movie-title\">{series.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(series.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SeriesDiv;","import React from 'react'\r\nimport { IMovie } from '../../../common/movie'\r\nimport { MovieRow } from './MovieRow'\r\n\r\ninterface IMovieRowList{\r\n    movies: IMovie[];\r\n}\r\n\r\nexport const MovieRowList: React.FC<IMovieRowList> = ({movies}: IMovieRowList) => {\r\n    return (\r\n        <div>\r\n            {movies.map(m=>{\r\n                return <MovieRow key={`movie-row-${m.id}`} movie={m} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface ILoginMsg{\r\n    message: string;\r\n}\r\n\r\nexport const LoginMsg: React.FC<ILoginMsg> = ({message}: ILoginMsg) => {\r\n    return (\r\n    <p>You must be <Link to=\"/rewer/profile\">logged in</Link> {message}</p>\r\n    )\r\n}\r\n\r\nexport default LoginMsg;","import { UploadFile } from \"./caller\";\r\n\r\nexport const articlePath = {\r\n    insertArticle: \"/article/insert_article\",\r\n    updateArticle: \"/article/update_article\",\r\n    deleteArticle: \"/article/delete_article\",\r\n    selectLatestArticles: \"/article/select_latest_articles\",\r\n    selectArticlesByUser: \"/article/select_articles_by_user\",\r\n    uploadImage: \"/article/upload_article_image\"\r\n}\r\n\r\nexport async function uploadArticleImage(file: FormData): Promise<boolean>{\r\n    const response = await UploadFile(\"/article/upload_article_image\", file);\r\n    if(response.ok){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const isBoolActuallyBool = (bool: boolean | any)=>{\r\n    const type = typeof bool;\r\n    if(type !== \"boolean\"){\r\n        throw `BoolIsActuallyA${type}Exception`;\r\n    }\r\n    if(bool !== true) {\r\n        const newTrue = !bool;\r\n        return newTrue;\r\n    }\r\n}\r\n\r\nexport const generateFakeErrorMessage = ()=>{\r\n    const errorCode = Math.floor(Math.random() * 1000);\r\n    const stack = Math.floor(Math.random() * 100000000000);\r\n    const word = Math.random().toString(36).substring(7);\r\n    const stack2 = Math.floor(Math.random() * 100000000000);\r\n    const word2 = Math.random().toString(36).substring(7);\r\n    const types = [\"Memory\", \"Fatal\", \"Unknown\", \"Server\", \"Connection\", \"Stackoverflow\", \"Stackbelowflow\", \"Index\"];\r\n    const errorType = types[Math.floor(Math.random() * types.length + 1)];\r\n    const errorString = `${errorType} error in stack ${word}${stack}-${word2}${stack2}. Errorcode: ${errorCode}.`;\r\n    alert(errorString);\r\n}","import { POSTAsynch } from \"./caller\";\r\nimport { ISearchResult } from \"../../common/search\"\r\nexport async function mainSearch(keyword: string, limit: number): Promise<ISearchResult | null>{\r\n    const response = await POSTAsynch(\"/search\", { keyword: keyword, limit: limit});\r\n    if(response.ok){\r\n        return await response.json();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const searchPath = {\r\n    search: \"/search\",\r\n    autoComplete: \"/auto-complete\"\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\n\r\ninterface IAutoCompleteElement{\r\n    text: string;\r\n    selectedValue: string;\r\n    onClick: (s: string)=>void;\r\n}\r\n\r\nexport const AutoCompleteElement: React.FC<IAutoCompleteElement> = ({text, onClick, selectedValue}: IAutoCompleteElement)=> {\r\n    const [mainClass, setMainClass] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(selectedValue === text){\r\n            setMainClass(\"auto-selected\");\r\n        } else {\r\n            setMainClass(\"\");\r\n        }\r\n    }, [selectedValue])\r\n    return (\r\n        <div className={mainClass} onClick={()=>{ onClick(text) }}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteElement;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useEffect, Fragment, useRef} from 'react'\r\nimport AutoCompleteElement from './AutoCompleteElement';\r\n\r\ninterface IAutoCompleteInput{\r\n    value: string;\r\n    setValue: (s: string)=>void;\r\n    stringList: string[];\r\n    onSubmit: (selectedValue: string)=>void;\r\n    requestAutoComplete: (s: string)=>any;\r\n}\r\n\r\nexport const AutoCompleteInput: React.FC<IAutoCompleteInput> = ({value, setValue, stringList, onSubmit, requestAutoComplete}: IAutoCompleteInput)=> {\r\n    const [showAutoComplete, setShowAutoComplete] = useState(false);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const wrapperRef = useRef<HTMLDivElement>(); //to handle click outside of the component\r\n\r\n    useEffect(()=>{\r\n        addClickListener();\r\n        return ()=>{\r\n            removeClickListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!showAutoComplete) setSelected(\"\");\r\n    }, [showAutoComplete]);\r\n\r\n    const addClickListener = ()=>{\r\n        window.addEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const removeClickListener = ()=>{\r\n        window.removeEventListener(\"click\", handleClickOutside);\r\n    }\r\n\r\n    const handleClickOutside = (e)=>{\r\n        if(wrapperRef.current != null && !wrapperRef.current.contains(e.target)){\r\n            setShowAutoComplete(false);\r\n        }\r\n    }\r\n\r\n    const onDivKeyDown = (e)=>{ //it has to be working with keystrokes, since a regular useEffect(,[keyword]) would update too frequently\r\n        if(e.key === \"Enter\"){\r\n            if(showAutoComplete) {\r\n                if(selected !== \"\") {\r\n                    onSubmit(selected);\r\n                    setValue(selected);\r\n                } else {\r\n                    onSubmit(value);\r\n                }\r\n            } else {\r\n                onSubmit(value);\r\n            }\r\n            setShowAutoComplete(false);\r\n        }\r\n        if(e.keyCode === 38){ //up\r\n            if(showAutoComplete && stringList.length > 0) handleUpArrow();\r\n        }\r\n        if(e.keyCode === 40){ //down\r\n            if(showAutoComplete && stringList.length > 0) handleDownArrow();\r\n        }\r\n        if(e.keyCode === 39){ //right\r\n            if(showAutoComplete && stringList.length > 0 && selected !== \"\") {\r\n                setValue(selected);\r\n            }\r\n        }\r\n        if (e.keyCode >= 48 && e.keyCode <= 57) {\r\n            // Number\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n            // Alphabet upper case\r\n            autoComplete(e.keyCode);\r\n        } else if (e.keyCode >= 97 && e.keyCode <= 122) {\r\n            // Alphabet lower case\r\n            autoComplete(e.keyCode);\r\n        } else if(e.keycode === 32 || e.keycode === 8 || e.keyCode === 46){ //space && backspace && delete\r\n            setShowAutoComplete(true);\r\n            setSelected(\"\");\r\n        }\r\n    }\r\n\r\n    const autoComplete = (keyCode: number)=>{\r\n        setShowAutoComplete(true);\r\n        setSelected(\"\");\r\n        if(value.length > 3) requestAutoComplete(value + String.fromCharCode(keyCode).toLowerCase());\r\n    }\r\n\r\n    const handleUpArrow = ()=>{\r\n        if(selected === \"\"){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== 0) setSelected(stringList[currentIndex-1]);\r\n        }\r\n    }\r\n\r\n    const handleDownArrow = ()=>{\r\n        if(selected === \"\" && stringList.length > 0){\r\n            setSelected(stringList[0]);\r\n        } else {\r\n            const currentIndex = stringList.indexOf(selected);\r\n            if(currentIndex !== stringList.length-1) setSelected(stringList[currentIndex+1]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={wrapperRef} className=\"autocomplete\" >\r\n            <div className=\"search-grid\">\r\n                <input placeholder=\"Keresés\" className=\"search-input\" autoComplete=\"off\" value={value}  onChange={(e)=>{ setValue(e.target.value); }} onKeyDown={(e)=>{ onDivKeyDown(e); }} onClick={()=>{ setShowAutoComplete(true) }} type=\"text\" list=\"datalist\" />\r\n                <button className=\"search-btn\" onClick={()=>{ onSubmit(value); setShowAutoComplete(false); }}><FontAwesomeIcon icon={faSearch} /></button>\r\n            </div>\r\n            <div className=\"autocomplete-items\">\r\n            {showAutoComplete ? \r\n            (<Fragment>\r\n                {stringList.map(s=>{\r\n                    return <AutoCompleteElement key={`auto-${s}`} text={s} onClick={(s)=>{ setValue(s); setShowAutoComplete(false); onSubmit(s); } } selectedValue={selected} />\r\n                })\r\n             }\r\n            </Fragment> ):\r\n            (<Fragment></Fragment>)}\r\n            </div>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AutoCompleteInput;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { ReviewRow } from './ReviewRow'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IUserReviewRow{\r\n    review: IReview;\r\n    onDelete: (reviewId: number) => void;\r\n}\r\n\r\nexport const UserReviewRow: React.FC<IUserReviewRow> = ({review, onDelete}: IUserReviewRow)=> {\r\n    const [imgsrc, onImgError, setImgsrc] = useImage(\"/rewer/uploads/posters\", `0.jpg`, ESize.Small);\r\n    useEffect(() => {\r\n        if(review.seriesId){\r\n            setImgsrc(\"/rewer/uploads/seriesposters\", `${review.seriesId}.jpg`);\r\n        } else {\r\n            setImgsrc(\"/rewer/uploads/posters\", `${review.movieId}.jpg`);\r\n        }\r\n    }, [review]);\r\n    return (\r\n        <div className=\"followed-review-grid\">\r\n            <div className=\"review-poster-container\">          \r\n                    {(review.seriesId != null)?\r\n                    (<Fragment><Link  to={`/rewer/series?seriesId=${review.seriesId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} className=\"review-poster\" />\r\n                        <p>{review.seriesTitle}</p>\r\n                        </Link>\r\n                        <Link to={`/rewer/movie?movieId=${review.movieId}`}><p>{review.movieTitle}</p></Link>\r\n                    </Fragment>\r\n                    ):\r\n                    (<Link to={`/rewer/movie?movieId=${review.movieId}`} >\r\n                        <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={onImgError} />\r\n                        <p>{review.movieTitle}</p>\r\n                    </Link>)}\r\n            </div>\r\n            <div>\r\n                <ReviewRow review={review} onDelete={onDelete} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserReviewRow;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Score } from '../movie/Score';\r\nimport LikeAdder from './LikeAdder';\r\nimport { normalFormat } from '../../dateParser';\r\nimport \"./reviewStyle.css\";\r\nimport { IReview } from '../../../common/review';\r\nimport { ESize, useImage } from '../../hooks';\r\n\r\ninterface IReviewRowM{\r\n    review: IReview;\r\n    onDelete: (reviewId: number)=>void;\r\n}\r\n\r\nexport const ReviewRowM: React.FC<IReviewRowM> = ({review, onDelete}: IReviewRowM)=> {\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    const [titleClass, setTitleClass] = useState(\"movie-title\");\r\n    const [avatarSrc, avatarError] = useImage(\"/rewer/uploads/avatars\", `${review.userName}.jpg`, ESize.Small)\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n        if(review.score > 6){\r\n            setTitleClass(\"movie-title title-high\");\r\n        } else if(review.score > 3){\r\n            setTitleClass(\"movie-title title-medium\");\r\n        } else {\r\n            setTitleClass(\"movie-title title-low\");\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                {(review.nickName != null && review.nickName !== \"\")?\r\n                (<Link to={`/rewer/user?userName=${review.userName}`}>\r\n                    <img className=\"avatar\" src={avatarSrc} alt={`avatar_${review.nickName}`} onError={avatarError} />\r\n                </Link>):\r\n                (<p></p>)}  \r\n                <Link className=\"nick-name\" to={`/rewer/user?userName=${review.userName}`}>{review.nickName}</Link>\r\n                <Score value={review.score} />\r\n            </div>\r\n            {(review.seriesId) ?\r\n            (<Fragment>\r\n                <Link className={titleClass} to={`/rewer/series?seriesId=${review.seriesId}`}>{review.seriesTitle}:</Link><br/><br/>              \r\n            </Fragment>):\r\n            (<Fragment></Fragment>)}\r\n            <Link className={titleClass} to={`/movie?movieId=${review.movieId}`}>{review.movieTitle}</Link>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={review.myLike} onDelete={onDelete} popIndex={review.popIndex} reviewDate={normalFormat(review.date)} />\r\n        </div>\r\n    )\r\n}\r\nexport default ReviewRowM;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { postCaller } from '../callers/caller';\r\nimport { searchPath } from '../callers/search';\r\nimport { useAsyncReference } from '../hooks';\r\nimport AutoCompleteInput from './AutoCompleteInput';\r\n\r\nexport default function SearchSide() {\r\n    const [keyword, setKeyword] = useAsyncReference(\"\");\r\n    const [autoList, setAutoList] = useState<string[]>([]);\r\n    const [autoCaller, signal] = postCaller();\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            signal.abort();\r\n        }\r\n    }, []);\r\n\r\n    const requestAutoComplete = async (word: string) =>{\r\n        const newAutos = await autoCaller({ limit: 5, keyword: word }, searchPath.autoComplete);\r\n        if(newAutos){\r\n            setAutoList(newAutos);\r\n        }\r\n    }\r\n\r\n    function search(searchParam: string){\r\n        history.push(`/rewer/search?keyword=${searchParam}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <AutoCompleteInput value={keyword.current} setValue={(s)=>{ setKeyword(s) }} onSubmit={(s)=>{ search(s)}} requestAutoComplete={(s)=>{ requestAutoComplete(s) }} stringList={autoList} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport { ESize, useCutter, useImage } from '../../hooks'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./articleStyles.css\"\r\n\r\ninterface IArticleRow{\r\n    article: IArticle;\r\n    cutPos: number;\r\n}\r\n\r\nexport const ArticleRow: React.FC<IArticleRow> = ({article, cutPos}: IArticleRow)=> {\r\n    const [text, isTextCut, cutText] = useCutter(article.text, cutPos);\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/articles\", `${article.id}.jpg`, ESize.Medium);\r\n\r\n    return (\r\n        <div className=\"article-row\">\r\n                <h3>{article.title}</h3>\r\n                <img src={imgsrc} onError={onImgError} alt={`article_${article.title}`} /> \r\n                <p>{text}</p>\r\n                {(isTextCut)?\r\n                (<Fragment><p onClick={()=> { cutText(article.text) }} className=\"show-more\">Show more</p></Fragment>):\r\n                (<Fragment>\r\n                    {(article.text.length > cutPos)?\r\n                    (<Fragment><p className=\"show-more\" onClick={()=>{ cutText(article.text, cutPos) }}>Show less</p></Fragment>):\r\n                    (<Fragment></Fragment>)}\r\n                </Fragment>)\r\n                }\r\n                <p><Link to={`/rewer/user?userName=${article.userName}`}>By <i>{article.userName}</i></Link></p>\r\n                {(article.readMore != null && article.readMore.length > 10)?\r\n                (<a href={article.readMore} target=\"blank\" >Read the full article</a>):\r\n                (<Fragment></Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleRow;","import React from 'react'\r\nimport { IArticle } from '../../../common/article'\r\nimport ArticleRow from './ArticleRow'\r\n\r\ninterface IArticleRowList{\r\n    articles: IArticle[];\r\n    cutPos: number;\r\n}\r\n\r\nexport const ArticleRowList: React.FC<IArticleRowList> = ({articles, cutPos}: IArticleRowList)=> {\r\n    return (\r\n        <div>\r\n            {articles.map(a=>{\r\n                return <ArticleRow key={`article-row-${a.id}`} article={a} cutPos={cutPos} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleRowList;","import React, { useEffect, useState, Fragment } from 'react'\r\nimport { useAsyncReference, useScroll } from '../../hooks';\r\nimport UserReviewRow from './UserReviewRow';\r\nimport ReviewRowM from './ReviewRowM';\r\nimport LoginMsg from '../profile/LoginMsg';\r\nimport { reviewPath } from '../../callers/reviewCaller';\r\nimport { ECallType, postCaller } from '../../callers/caller';\r\n\r\nexport default function FollowedReviews() {\r\n    const [reviews, setReviews] = useAsyncReference([]); //for the listeners\r\n    const downloadCount = 10;\r\n    const [errorMsg, setErrorMsg] = useState(<Fragment></Fragment>);\r\n    const [reviewCaller, signal] = postCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews);\r\n    const [addScroll, removeScroll] = useScroll(0.9, showMore);\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")) requestReviews();         \r\n        return ()=> {\r\n            signal.abort();\r\n            removeScroll();\r\n        }\r\n    }, []);\r\n    \r\n    async function requestReviews(){\r\n        const followedReviews = await reviewCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        } else {\r\n            if(localStorage.getItem(\"userName\") != null)  setTimeout(tryRequestReviews, 3000);\r\n        }\r\n    }\r\n\r\n    async function tryRequestReviews(){\r\n        const followedReviews = await reviewCaller({ limit: downloadCount, offset: 0 }, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        } else {\r\n            setErrorMsg(<LoginMsg message=\"manage your followers.\" />);\r\n        }\r\n    }\r\n\r\n    async function showMore(){\r\n        removeScroll(); //make sure the listener doenst fire again until we downloaded the new reviews\r\n        const followedReviews = await reviewCaller({limit: downloadCount, offset: reviews.current.length}, reviewPath.selectFollowedReviews, ECallType.SELECT);\r\n        if(followedReviews){\r\n            setReviews([...reviews.current, ...followedReviews]);\r\n            if(followedReviews.length === downloadCount){\r\n                addScroll();\r\n            }\r\n        }\r\n    }\r\n\r\n    async function deleteReview(reviewId: number){\r\n        if(await reviewCaller({ id: reviewId }, reviewPath.deleteReview, ECallType.ISOK)){\r\n            setReviews(reviews.current.filter(r=> r.id !== reviewId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {window.screen.width > 600 ? \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {(localStorage.getItem(\"userName\") == null)?\r\n                (<LoginMsg message={\"to follow other reviewers.\"} />):\r\n                (<Fragment></Fragment>)}\r\n                {reviews.current.map(r=> {\r\n                return <UserReviewRow key={`followed-${r.id}`} review={r} onDelete={deleteReview} />\r\n                })}\r\n            </Fragment>) : \r\n            (<Fragment>\r\n                {errorMsg}\r\n                {reviews.current.map(r=> {\r\n                return <ReviewRowM key={`followed-${r.id}`} review={r} onDelete={deleteReview} />\r\n                })}\r\n            </Fragment>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport \"../movie/movieStyle.css\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { Score } from '../movie/Score'\r\nimport { IPreviewSeries } from '../../../common/series'\r\nimport { ESize, useCutter, useImage } from '../../hooks'\r\n\r\ninterface ISeriesRow{\r\n    series: IPreviewSeries;\r\n}\r\n\r\nexport const SeriesRow: React.FC<ISeriesRow> = ({series}: ISeriesRow) => {\r\n    const [imgsrc, onImgError] = useImage(\"/rewer/uploads/seriesposters\", `${series.id}.jpg`, ESize.Small);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [summary] = useCutter(series.summary, 70);\r\n    useEffect(()=>{\r\n        if(series.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n        } else if(series.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n        } else if(series.avgScore > 0) {\r\n            setImgClass(\"low-poster\");\r\n        } else {\r\n            setImgClass(\"\");\r\n        }\r\n    }, [series])\r\n    return (\r\n        <div className=\"movie-row-grid\">\r\n            <Link to={`/rewer/series?seriesId=${series.id}`}>\r\n                <img className={imgClass} src={imgsrc} alt={`poster-${series.id}`} title={series.title} onError={onImgError} />\r\n            </Link>\r\n            <div>\r\n                <p className=\"row-title\">{series.title}:</p>\r\n                <p className=\"summary\">{summary}</p>\r\n            </div>        \r\n            <Score value={series.avgScore} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeriesRow;"],"sourceRoot":""}