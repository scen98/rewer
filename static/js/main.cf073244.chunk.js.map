{"version":3,"sources":["objects/caller.ts","objects/cast.ts","objects/movie.ts","components/movie/MovieDiv.tsx","components/movie/MovieSlider.tsx","components/movie/LatestMovies.tsx","components/movie/UpComingMovies.tsx","objects/review.ts","hooks.tsx","dateParser.ts","components/movie/Score.tsx","objects/reviewLike.ts","components/review/LikeAdder.tsx","components/review/ReviewRow.tsx","components/review/FollowedReviewRow.tsx","components/review/FollowedReviews.tsx","pages/Home.tsx","pages/Movies.tsx","urlManager.ts","components/movie/EditMovieDetails.tsx","objects/artist.ts","objects/castType.ts","components/artist/ArtistRow.tsx","components/artist/ArtistSelector.tsx","components/cast/CastTypeSelect.tsx","utils.ts","components/cast/EditCastRow.tsx","components/cast/EditCastList.tsx","components/movie/EditCast.tsx","components/movie/GenreSelect.tsx","components/movie/GenreAdder.tsx","pages/EditMovie.tsx","objects/user.ts","objects/authUser.ts","components/login/SignUpForm.tsx","components/login/LoginForm.tsx","components/profile/ChangePassword.tsx","components/profile/MyProfile.tsx","pages/Profile.tsx","components/header/HeaderItem.tsx","components/header/Header.tsx","pages/Stars.tsx","components/artist/EditDetails.tsx","pages/EditArtist.tsx","components/cast/CastRow.tsx","components/cast/CastList.tsx","components/movie/MainScore.tsx","components/movie/MovieInfo.tsx","components/review/AddedReview.tsx","components/movie/ScoreAdder.tsx","components/review/PostReview.tsx","components/review/MyReview.tsx","components/review/ReviewList.tsx","components/review/ReviewOrderBySelect.tsx","pages/Movie.tsx","components/artist/StarInfo.tsx","components/cast/ArtistCastRow.tsx","components/cast/ArtistCastList.tsx","pages/Star.tsx","objects/follow.ts","components/profile/PermissionSelect.tsx","components/profile/UserInfo.tsx","components/profile/User.tsx","pages/FollowsPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["def","GETAsynch","url","a","fetch","method","cache","credentials","response","ok","text","console","log","status","toString","UploadFile","data","body","POSTAsynch","mode","headers","redirect","referrerPolicy","JSON","stringify","IsSuccessful","json","parse","msg","isResponse200","err","tryParse","object","getNewId","id","newId","parseId","insertCast","cast","caller","updateCast","deleteCast","castId","compareCastType","cast1","cast2","castTypeId","insertMovie","movie","selectDetailedMovie","result","casts","sort","genres","compareMovieGenresByName","selectLatestMovies","limit","selectUpcomingMovies","updateMovie","uploadPoster","formData","getGenres","compareGenresByName","insertGenre","genre","deleteGenre","genre1","genre2","name","localeCompare","genreName","MovieDiv","useState","imgsrc","setImgsrc","imgClass","setImgClass","scoreClass","setScoreClass","scoreLine","useRef","useEffect","avgScore","current","style","display","className","src","alt","title","onError","ref","Math","round","MovieSlider","movies","nextBtn","prevBtn","slice","getMovies","setMovies","pageIndex","setPageIndex","length","visibility","onClick","ceil","old","icon","faBackward","map","m","to","key","faForward","LatestMovies","latests","requestMovies","UpComingMovies","upcoming","reviewOrderBy","useAsyncReference","value","forceRender","newState","Object","is","s","useBinder","get","set","event","target","useAsyncBinder","updateState","insertReview","review","selectMyReview","movieId","userName","localStorage","getItem","offset","updateReview","deleteReview","selectReviewsByMovie","orderby","selectReviewsByUser","selectFollowedReviews","getYear","date","Date","getFullYear","normalFormat","d","getDate","monthNames","getMonth","Score","insertReviewLike","reviewLike","updateReviewLike","LikeAdder","popIndex","getReviewLike","setReviewLike","getPopIndex","setPopIndex","upArrowColor","setUpArrowColor","downArrowColor","setDownArrowColor","likeBtn","dislikeBtn","updatePopIndex","newReviewLike","difference","oldPopIndex","insertLike","toInsert","alert","updateLike","toUpdate","setDefaultColor","color","faThumbsUp","faThumbsDown","ReviewRow","getReview","reviewText","setReviewText","briefText","substring","showLess","nickName","score","myLike","FollowedReviewRow","movieTitle","FollowedReviews","reviews","setReviews","addWindowListener","window","addEventListener","windowListener","removeWindowListener","removeEventListener","innerHeight","scrollY","document","offsetHeight","showMore","followedReviews","requestReviews","r","Home","Movies","editBtn","parseInt","getParameter","queryString","location","search","urlParams","URLSearchParams","decodeURIComponent","createUrl","params","preparedUrl","param","encodeURIComponent","setParams","encodeURI","changeParam","newParam","parameter","href","urlparts","split","urlBase","shift","join","prefix","pars","i","lastIndexOf","splice","history","pushState","removeParam","addParam","EditMovieDetails","movieBinder","setMovie","posterInput","createBtn","type","saveBtn","mainBtn","setMainBtn","newPosterBottom","editPosterBottom","accept","posterBottom","setPosterBottom","posterSource","setPosterSource","mainMsg","setMainMsg","FormData","append","files","getTime","renderEditMode","newMovie","getHours","getMinutes","onChange","placeholder","runtime","releaseDate","summary","rows","insertArtist","artist","selectArtist","updateArtist","uploadPortrait","file","selectArtistsByKeyword","keyword","selectDetailedArtist","detailedArtist","compareDate","movieDate","getCastTypes","ArtistRow","selectedArtist","divRef","birthPlace","birthDate","ArtistSelector","artistList","onSelectionChanged","undefined","setSelectedArtist","CastTypeSelect","typeList","updateValue","initialValue","select","t","EditCastRow","castTypes","onDelete","onUpdate","mainClass","setMainClass","getCast","setCast","castBinder","saved","setUnsaved","includes","replace","artistId","artistName","e","newTypeId","setCastTypeId","EditCastList","castList","setCastList","array","oldItem","newItem","find","c","item","selectedId","filter","EditCast","setCastTypes","artists","setArtists","bindKeyword","newCast","setNewCast","bindNewCast","Promise","all","requestCastTypes","requestArtists","setCasts","newCasts","fetchRequests","newValue","onKeyDown","callback","GenreSelect","updateSelected","g","GenreAdder","setMovieGenres","genreList","setGenreList","newGenreId","setNewGenreId","newGenre","getGenreName","genreId","requestGenres","removeGenre","faTimes","EditMovie","bindMovie","dependentDiv","selectedMovie","editModeOn","getMovie","newGenres","selectDetailedUser","updateUserInfo","user","setItem","uploadAvatar","updatePermission","doesExist","exists","login","authUser","autoLogin","parsedResponse","isSuccessful","clear","permission","session","insertUser","isLoggedIn","hasOwnProperty","updatePassword","newPassword","logOut","handleLogin","setNewSession","newSession","SignUpForm","userTakenMsg","setUserTakenMsg","setMsg","pw1","pw2","User","canSend","prevMsg","sendSignUpRequest","newUser","password","LoginForm","loginMsg","setLoginMsg","signUpLine","setSignUp","signUpForm","useHistory","checked","push","reload","action","ChangePassword","oldPw","setOldPw","newPw1","setNewPw1","newPw2","setNewPw2","updatePasswordCommand","clearInput","MyProfile","about","followerCount","myProfile","setMyProfile","bindMyProfile","nickNameMsg","setNickNameMsg","uploadMsg","setUploadMsg","avatarSource","setAvatarSource","imageFile","updateUserInfoCommand","profile","getMyInfo","Login","content","HeaderItem","Header","headerRef","userIcon","setUserIcon","optionalHeaders","setOptionalHeaders","onscroll","offsetTop","pageYOffset","classList","add","prevOptionals","faUser","faSignInAlt","oh","contains","remove","scrollTop","documentElement","faBars","Stars","EditDetails","props","imageInput","createButton","saveButton","newAvatarBottom","editAvatarBottom","deathPlace","deathDate","bio","setArtist","bindArtist","detailButton","setDetailButton","portraitBottom","setPortraitBottom","portraitSource","setPortraitSource","renderEditArtistMode","EditArtist","CastRow","CastList","MainScore","MovieInfo","AddedReview","onEdit","ScoreAdder","startValue","setScore","setValue","oldValue","faPlus","faMinus","PostReview","onPost","myReview","setMyReview","bindMyReview","MyReview","postReview","reviewContent","setReviewContent","startEditing","saveReview","removeReview","toLocaleDateString","getMyReview","ReviewList","ReviewOrderBySelect","defaultValue","Movie","actors","setActors","reviewHeader","setReviewHeader","reviewDiv","orderBy","setOrderBy","requestedReviews","getMoreReviews","requestMovie","StarInfo","died","setDied","deathInfo","setBio","briefBio","showAll","showBrief","ArtistCastRow","castName","setCastName","castTypeName","movieName","ArtistCastList","Star","requestArtist","insertFollow","follow","deleteFollow","PermissionSelect","UserInfo","getUser","setUser","followBtn","setFollowBtn","imgSrc","setImgSrc","isFollowed","follower","followed","setFollow","newPermission","followUser","unFollowUser","toFollow","updateUserPermission","userInfo","getUserInfo","userReviews","FollowsPage","App","Helmet","exact","path","component","Profile","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf073244.chunk.js","sourcesContent":["//const host: string = `${window.location.origin}/rewer/php/requests`;\r\nconst def: string = \"/rewer/php/requests\";\r\nexport async function GETAsynch(url: string){\r\n    const response = await fetch(def+url, {\r\n        method: \"GET\",\r\n        cache: \"no-cache\",\r\n        credentials: \"include\"\r\n    });\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        console.log(response);\r\n        return response.status.toString();\r\n    }\r\n}\r\n\r\nexport async function UploadFile(url, data: FormData): Promise<string>{\r\n    const response = await fetch(def + url, {\r\n        method: \"POST\",\r\n        cache: 'no-cache',\r\n        body: data\r\n    });\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        console.log(response);\r\n        return response.status.toString();\r\n    }\r\n}\r\n\r\nexport async function POSTAsynch(url: string, data: any): Promise<string> {\r\n    // Default options are marked with *\r\n    const response = await fetch(def+url, {\r\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: 'same-origin', // include, *same-origin, omit\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: 'follow', // manual, *follow, error\r\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        console.log(response);\r\n        return response.status.toString();\r\n    }\r\n}\r\n\r\nexport function IsSuccessful(json: string){\r\n    if(JSON.parse(json).msg === \"success\"){\r\n        return true;\r\n    }\r\n    console.log(json);\r\n    return false;\r\n}\r\n\r\nexport function isResponse200(response: string){\r\n    try{\r\n        if(JSON.parse(response).response === 200) return true;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n}\r\n\r\nexport function tryParse(response: string){\r\n    try{\r\n        return JSON.parse(response).object;\r\n    }catch(err) {\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getNewId(object: any, response: string){\r\n    try{\r\n        object.id = JSON.parse(response).newId;\r\n        if(object.id != null) return true;\r\n        console.log(response);\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function parseId(response: string): number{\r\n    try{\r\n        return JSON.parse(response).newId;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return null;\r\n}\r\n","import * as caller from \"./caller\";\r\nexport interface ICast{\r\n    id: number;\r\n    movieId: number;\r\n    artistId: number;\r\n    castTypeId: number;\r\n    name: string;\r\n    movieName?: string;\r\n    artistName?: string;\r\n}\r\n\r\nexport async function selectCastsByMovie(movieId: number): Promise<ICast[]>{\r\n    const response = await caller.POSTAsynch(\"/cast/selectcastsbymovie.php\", {id: movieId});\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function insertCast(cast: ICast): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/cast/insertcast.php\", cast);\r\n    return caller.getNewId(cast, response);\r\n}\r\n\r\nexport async function updateCast(cast: ICast): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/cast/updatecast.php\", cast);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function deleteCast(castId: number): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/cast/deletecast.php\", {id: castId});\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport function compareCastType(cast1: ICast, cast2: ICast){\r\n    if(cast1.castTypeId < cast2.castTypeId){\r\n        return -1;\r\n    }\r\n    if(cast1.castTypeId > cast2.castTypeId){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}","import * as caller from \"./caller\";\r\nimport { compareCastType, ICast } from \"./cast\"\r\nexport interface IMovie{\r\n    id: number;\r\n    title: string;\r\n    releaseDate: Date;\r\n    summary: string;\r\n    runtime?: number;\r\n    avgScore?: number;\r\n    genres: IMovieGenre[];\r\n    casts?: ICast[];\r\n}\r\n\r\nexport interface IGenre{\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface IMovieGenre{\r\n    id: number;\r\n    movieId: number;\r\n    genreId: number;\r\n    genreName: string;\r\n}\r\n\r\nexport interface IDetailedMovie extends IMovie{\r\n    casts: ICast[];\r\n}\r\n\r\nexport async function insertMovie(movie: IMovie): Promise<IMovie>{\r\n    const response = await caller.POSTAsynch(\"/movie/insertmovie.php\", movie);\r\n    return {...movie, id: caller.parseId(response)};\r\n}\r\n\r\nexport async function selectMovie(id: number): Promise<IMovie>{\r\n    const response = await caller.POSTAsynch(\"/movie/selectmovie.php\", { id: id});\r\n    return caller.tryParse(response)\r\n}\r\n\r\nexport async function selectDetailedMovie(id: number): Promise<IDetailedMovie>{\r\n    let data = {\r\n        id: id\r\n    }\r\n    const response = await caller.POSTAsynch(\"/movie/selectdetailedmovie.php\", data);\r\n    let result: IDetailedMovie = caller.tryParse(response);\r\n    result.casts.sort(compareCastType);\r\n    result.genres.sort(compareMovieGenresByName); \r\n    return result;\r\n}\r\n\r\nexport async function selectLatestMovies(limit: number): Promise<IMovie[]>{\r\n    const response = await caller.POSTAsynch(\"/movie/selectlatestmovies.php\", { limit: limit });\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function selectUpcomingMovies(limit: number): Promise<IMovie[]>{\r\n    const response = await caller.POSTAsynch(\"/movie/selectupcomingmovies.php\", { limit: limit });\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function updateMovie(movie: IMovie): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/movie/updatemovie.php\", movie);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function uploadPoster(formData: FormData){\r\n    const response = await caller.UploadFile(\"/movie/uploadposter.php\", formData);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function getGenres(){\r\n    return caller.tryParse(await caller.GETAsynch(\"/moviegenre/getgenres.php\")).sort(compareGenresByName);\r\n}\r\n\r\nexport async function insertGenre(genre: IMovieGenre): Promise<IMovieGenre>{\r\n    let newId = caller.parseId(await caller.POSTAsynch(\"/moviegenre/insertgenre.php\", genre));\r\n    return {...genre, id: newId};\r\n}\r\n\r\nexport async function deleteGenre(id: number): Promise<boolean>{\r\n    return caller.isResponse200(await caller.POSTAsynch(\"/moviegenre/deletegenre.php\", { id: id}))\r\n}\r\n\r\nexport function compareGenresByName(genre1: IGenre, genre2: IGenre){\r\n    return genre1.name.localeCompare(genre2.name);\r\n}\r\n\r\nexport function compareMovieGenresByName(genre1: IMovieGenre, genre2: IMovieGenre){\r\n    return genre1.genreName.localeCompare(genre2.genreName);\r\n}","import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { IMovie } from '../../objects/movie'\r\n\r\ninterface IMovieDiv{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieDiv: React.FC<IMovieDiv> = ({movie}: IMovieDiv) => {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/posters/${movie.id}.jpg`);\r\n    const [imgClass, setImgClass] = useState(\"\");\r\n    const [scoreClass, setScoreClass] = useState(\"\");\r\n    const scoreLine = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.avgScore > 6){\r\n            setImgClass(\"high-poster\");\r\n            setScoreClass(\"high\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 3){\r\n            setImgClass(\"medium-poster\");\r\n            setScoreClass(\"medium\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else if(movie.avgScore > 0){\r\n            setImgClass(\"low-poster\");\r\n            setScoreClass(\"low\");\r\n            scoreLine.current.style.display = \"block\";\r\n        } else {\r\n            scoreLine.current.style.display = \"none\";\r\n        }\r\n    }, [movie]);\r\n\r\n    useEffect(()=>{\r\n\r\n    }, [movie])\r\n\r\n    return (\r\n        <div className=\"movie-container fade\">\r\n            <img className={imgClass} src={imgsrc} alt={`${movie.title}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/posters/0.jpg`)}} />\r\n            <p className=\"movie-title\">{movie.title}</p>\r\n            <div ref={scoreLine} className={scoreClass} >\r\n                <p className=\"score-line\">{ Math.round(movie.avgScore * 10)/10}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDiv;","import React, { useState, useEffect, Fragment, useRef } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { IMovie } from '../../objects/movie'\r\nimport \"./movieStyle.css\";\r\nimport MovieDiv from './MovieDiv';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faForward, faBackward } from '@fortawesome/free-solid-svg-icons'\r\n\r\ninterface IMovieSlider{\r\n    movies: IMovie[];\r\n}\r\n\r\nexport const MovieSlider: React.FC<IMovieSlider> = ({movies}: IMovieSlider) => {\r\n    const nextBtn = useRef<HTMLButtonElement>();\r\n    const prevBtn = useRef<HTMLButtonElement>();\r\n    const [getMovies, setMovies] = useState(movies.slice(0, 3));\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(0, 3));\r\n        if(movies.length <= 3){\r\n            nextBtn.current.style.visibility = \"hidden\";\r\n            prevBtn.current.style.visibility = \"hidden\";\r\n        } else {\r\n            nextBtn.current.style.visibility = \"visible\";\r\n            prevBtn.current.style.visibility = \"visible\";\r\n        }\r\n    }, [movies]);\r\n\r\n    useEffect(()=>{\r\n        setMovies(movies.slice(pageIndex * 3, (pageIndex * 3)+3));\r\n    }, [pageIndex])\r\n\r\n    function next(){\r\n        if((pageIndex+1) * 3 >= movies.length){\r\n            setPageIndex(0);\r\n        } else {\r\n            setPageIndex(old => { return old + 1} );\r\n        }\r\n    }\r\n\r\n    function prev(){\r\n        if((pageIndex-1) < 0 ){\r\n            setPageIndex(Math.ceil(movies.length / 3)-1);\r\n        } else {\r\n            setPageIndex(old => { return old - 1} );\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <div className=\"slide-grid\">\r\n            <button ref={nextBtn} className=\"slide-btn\" onClick={prev}><FontAwesomeIcon icon={faBackward} /></button>\r\n            <div className=\"movie-grid\">\r\n                {getMovies.map(m=>{\r\n                    return <Link to={`/movie?movieId=${m.id}`} className=\"movie-anchor\" key={`latest-${m.id}`} ><MovieDiv  movie={m} /></Link>\r\n                })}\r\n            </div>\r\n            <button ref={prevBtn} className=\"slide-btn\" onClick={next}><FontAwesomeIcon icon={faForward} /></button> \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieSlider;","import React, { useState, useEffect } from 'react'\r\nimport { selectLatestMovies } from '../../objects/movie';\r\nimport MovieSlider from './MovieSlider'\r\nimport \"./movieStyle.css\"\r\nexport default function LatestMovies() {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(()=>{\r\n        requestMovies();\r\n    }, []);\r\n    async function requestMovies(){\r\n        let latests = await selectLatestMovies(10);\r\n        if(latests){\r\n            setMovies(latests);\r\n        } else {\r\n            //TODO goto 404\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <MovieSlider movies={movies} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { selectUpcomingMovies } from '../../objects/movie';\r\nimport { MovieSlider } from './MovieSlider'\r\n\r\nexport default function UpComingMovies() {\r\n    const [movies, setMovies] = useState([]);\r\n    useEffect(()=>{\r\n        requestMovies();\r\n    }, []);\r\n    async function requestMovies(){\r\n        let upcoming = await selectUpcomingMovies(3);\r\n        if(upcoming){\r\n            setMovies(upcoming);\r\n        } else {\r\n            //TODO\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <MovieSlider movies={movies} />\r\n        </div>\r\n    )\r\n}\r\n","import * as caller from \"./caller\"\r\nimport { IReviewLike } from \"./reviewLike\";\r\n\r\nexport interface IReview{\r\n    id: number;\r\n    movieId: number;\r\n    userName: string;\r\n    text: string;\r\n    score: number;\r\n    date: string;\r\n    popIndex: number;\r\n    nickName?: string;\r\n    myLike?: IReviewLike;\r\n}\r\n\r\nexport interface IUserReview extends IReview{\r\n    movieTitle: string;\r\n}\r\n\r\nexport async function insertReview(review: IReview){\r\n    const response = await caller.POSTAsynch(\"/review/insertreview.php\", review);\r\n    return caller.getNewId(review, response);\r\n}\r\n\r\nexport async function selectMyReview(movieId: number): Promise<IReview[]>{\r\n    const response = await caller.POSTAsynch(\"/review/selectbyusernameandmovieid.php\", {userName: localStorage.getItem(\"userName\"), movieId: movieId, limit: 10, offset: 0});\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function updateReview(review: IReview): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/review/updatereview.php\", review);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function deleteReview(review: IReview): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/review/deletereview.php\", review);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport enum reviewOrderBy{\r\n    popIndex = \"popIndex\",\r\n    date = \"date\"\r\n}\r\nexport async function selectReviewsByMovie(movieId: number, limit: number, offset: number, orderby: reviewOrderBy): Promise<IReview[]>{\r\n    const response = await caller.POSTAsynch(\"/review/selectreviewsbymovie.php\", {id: movieId, limit: limit, offset: offset, orderby});\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function selectReviewsByUser(userName: string, limit: number, offset: number, orderby: reviewOrderBy): Promise<IUserReview[]>{\r\n    const response = await caller.POSTAsynch(\"/review/selectreviewsbyuser.php\", {userName: userName, limit: limit, offset: offset, orderby});\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function selectFollowedReviews(limit: number, offset: number){\r\n    const response = await caller.POSTAsynch(\"/review/selectfollowedreviews.php\", { limit: limit, offset: offset });\r\n    return caller.tryParse(response);\r\n}","import { useState, useRef, SyntheticEvent } from \"react\";\r\nexport function useAsyncReference(value: any): [React.MutableRefObject<any>, (any: any)=>void] {\r\n    const ref:React.MutableRefObject<any> = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    return [ref, updateState];\r\n}\r\n\r\nexport function useBinder(value:any): [any, (any:any)=> void, (event: any)=>void]{\r\n    const [get, set] = useState(value);\r\n    const bind = (event)=>{\r\n        set({...get, [event.target.name]: event.target.value});\r\n    }\r\n    return [get, set, bind];\r\n}\r\n\r\nexport function useAsyncBinder(value: any): [React.MutableRefObject<any>, (any: any)=>void, (event: any)=>void]{\r\n    const ref:React.MutableRefObject<any> = useRef(value);\r\n    const [, forceRender] = useState(false);\r\n    const updateState = (newState) => {\r\n        if (!Object.is(ref.current, newState)) {\r\n            ref.current = newState;\r\n            forceRender(s => !s);\r\n        }\r\n    }\r\n    const bind = (event) => {\r\n        updateState({...ref.current, [event.target.name]: event.target.value});\r\n    }\r\n    return [ref, updateState, bind];\r\n}\r\n\r\nexport function setBinder(event, object, setter: (any)=> void){\r\n    setter({...object.current, [event.target.name]: event.target.value});\r\n}\r\n\r\nexport function onEnter(event, callback){\r\n    if (event.key === 'Enter') {\r\n        callback();\r\n    }\r\n}","export function parseDateHun(date: Date): string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}. ${parseDatehhdd(date)}`;\r\n}\r\n\r\nexport function parseDateYYYYMMDD(date: Date):string{\r\n    return `${date.getFullYear()}. ${monthNames[date.getMonth()]} ${date.getDate()}`;\r\n}\r\n\r\nexport function parseDatehhdd(date: Date):string{\r\n    if(date.getMinutes() < 10){\r\n        return `${date.getHours()}:0${date.getMinutes()}`;\r\n    } else {\r\n        return `${date.getHours()}:${date.getMinutes()}`;\r\n    }\r\n}\r\n\r\nexport function getYear(date: string){\r\n    return new Date(date).getFullYear();\r\n}\r\n\r\nexport function getMonth(date: string){\r\n    return monthNames[new Date(date).getMonth()]; \r\n}\r\n\r\nexport function getDay(date: string){\r\n    return new Date(date).getDate();\r\n}\r\n\r\nexport function normalFormat(date: string): string{\r\n    let d = new Date(date);\r\n    return `${d.getDate()} ${monthNames[d.getMonth()]} ${d.getFullYear()}`;\r\n}\r\n\r\nexport let monthNames = [\"Janury\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const Score: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"score high\");\r\n        } else if(value < 4){\r\n            setScoreClass(\"score low\");\r\n        } else {\r\n            setScoreClass(\"score\");\r\n        }\r\n    }, [value])\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{value}</p>\r\n        </div>\r\n    )\r\n}\r\n","import * as caller from \"./caller\"\r\n\r\nexport interface IReviewLike{\r\n    id: number;\r\n    reviewId: number;\r\n    userName: string;\r\n    value: number;\r\n}\r\n\r\nexport async function insertReviewLike(reviewLike: IReviewLike): Promise<IReviewLike>{\r\n    const response = await caller.POSTAsynch(\"/review/insertreviewlike.php\", reviewLike);\r\n    return {...reviewLike, id: caller.parseId(response)};\r\n}\r\n\r\nexport async function updateReviewLike(reviewLike: IReviewLike):Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/review/updatereviewlike.php\", reviewLike);\r\n    return caller.isResponse200(response);\r\n}","import React, { useState, useEffect, useRef, Fragment } from 'react'\r\nimport { insertReviewLike, IReviewLike, updateReviewLike } from '../../objects/reviewLike'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons'\r\nimport \"./reviewStyle.css\"\r\nimport { Icon } from '@fortawesome/fontawesome-svg-core'\r\n\r\ninterface ILikeAdder{\r\n    reviewLike: IReviewLike;\r\n    popIndex: number;\r\n    //onUpdate: (newPopIndex: number) => void;\r\n}\r\n\r\nexport const LikeAdder: React.FC<ILikeAdder> = ({reviewLike, popIndex}: ILikeAdder) => {\r\n    const [getReviewLike, setReviewLike] = useState(reviewLike);\r\n    const [getPopIndex, setPopIndex] = useState(popIndex);\r\n    const defaultColor = \"#949494\";\r\n    const [upArrowColor, setUpArrowColor] = useState(defaultColor);\r\n    const [downArrowColor, setDownArrowColor] = useState(defaultColor);\r\n    const likeBtn = useRef<HTMLDivElement>();\r\n    const dislikeBtn = useRef<HTMLDivElement>();\r\n    function upVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === 1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        } else { //===-1\r\n            newReviewLike = {...getReviewLike, value: 1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            likeBtn.current.style.display = \"none\";\r\n            dislikeBtn.current.style.display = \"none\";\r\n        }\r\n    }, []);\r\n\r\n    function downVote(){\r\n        let newReviewLike: IReviewLike;\r\n        if(getReviewLike.value === -1){\r\n            newReviewLike = {...getReviewLike, value: 0};\r\n        } else if(getReviewLike.value === 0) {\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        } else { //=== 1\r\n            newReviewLike = {...getReviewLike, value: -1};\r\n        }\r\n        if(getReviewLike.id > 0){\r\n            updateLike(newReviewLike);\r\n        } else {\r\n            insertLike(newReviewLike);\r\n        }\r\n    }\r\n\r\n    function updatePopIndex(newReviewLike: IReviewLike){ //has to be called before updating the reviewlike, since it is dependant on the old value\r\n        const difference = newReviewLike.value - getReviewLike.value;\r\n        setPopIndex(oldPopIndex => { return oldPopIndex + difference});\r\n    }\r\n\r\n    async function insertLike(toInsert: IReviewLike){\r\n        let newReviewLike = await insertReviewLike(toInsert);\r\n        updatePopIndex(newReviewLike);\r\n        setReviewLike(newReviewLike);\r\n        if(newReviewLike == null || newReviewLike.id < 1){\r\n            alert(\"Server error: could not like/dislike the selected review.\");\r\n        }\r\n    }\r\n\r\n    async function updateLike(toUpdate: IReviewLike){\r\n        setReviewLike(toUpdate);\r\n        updatePopIndex(toUpdate);\r\n        if(!await updateReviewLike(toUpdate)){  \r\n            alert(\"Server error: could not like/dislike the selected review.\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setDefaultColor();\r\n        if(getReviewLike.value === 1){\r\n            setUpArrowColor(\"#1EF007\");\r\n        } else if(getReviewLike.value === -1){\r\n            setDownArrowColor(\"#E11B05\");\r\n        }\r\n    }, [getReviewLike]);\r\n\r\n    async function setDefaultColor(){\r\n        setUpArrowColor(defaultColor);\r\n        setDownArrowColor(defaultColor);\r\n    }\r\n    return (\r\n        <div>\r\n            <span ref={likeBtn}><FontAwesomeIcon className=\"up-arrow\" onClick={upVote} color={upArrowColor} icon={faThumbsUp} /></span>            \r\n            <span className=\"pop-index\">{getPopIndex}</span>\r\n            <span ref={dislikeBtn}><FontAwesomeIcon  className=\"down-arrow\" onClick={downVote} color={downArrowColor} icon={faThumbsDown} /></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeAdder;\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport { IReview } from '../../objects/review'\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./reviewStyle.css\"\r\nimport { normalFormat } from '../../dateParser'\r\nimport { Score } from '../movie/Score'\r\nimport LikeAdder from './LikeAdder'\r\n\r\ninterface IReviewRow{\r\n    review: IReview;\r\n}\r\n\r\nexport const ReviewRow: React.FC<IReviewRow> = ({review}: IReviewRow) => {\r\n    const [getReview, setReview] = useState(review);\r\n    const [reviewText, setReviewText] = useState(<p ></p>);\r\n    const briefText = <Fragment><p className=\"review-text\">{review.text.substring(0, 500)}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    useEffect(()=>{\r\n        if(review.text.length > 500){\r\n            showLess();\r\n        } else {\r\n            setReviewText(<p className=\"review-text\">{review.text}</p>);\r\n        }\r\n    }, [review]);\r\n\r\n    function showAll(){\r\n        setReviewText(<Fragment><p className=\"review-text\">{review.text}</p><p onClick={showLess} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showLess(){\r\n        setReviewText(briefText);\r\n    }\r\n\r\n    return (\r\n        <div className=\"review-container\">\r\n            <div className=\"review-grid\">\r\n                <Link className=\"nick-name\" to={`/user?userName=${getReview.userName}`}>{getReview.nickName}</Link>\r\n                <p className=\"review-date\">{normalFormat(getReview.date)}</p>\r\n                <Score value={getReview.score} />\r\n            </div>\r\n            {reviewText}\r\n            <LikeAdder reviewLike={getReview.myLike} popIndex={getReview.popIndex} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { IReview, IUserReview } from '../../objects/review'\r\nimport { ReviewRow } from './ReviewRow'\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface IFollowedReview{\r\n    review: IUserReview;\r\n}\r\n\r\nexport const FollowedReviewRow: React.FC<IFollowedReview> = ({review}: IFollowedReview)=> {\r\n    const [imgsrc, setImgsrc] = useState(`/rewer/uploads/posters/${review.movieId}.jpg`);\r\n    useEffect(()=>{\r\n    }, []); \r\n    \r\n    return (\r\n        <div className=\"followed-review-grid\">\r\n            <div className=\"review-poster-container\">\r\n                <Link to={`/movie?movieId=${review.movieId}`} >\r\n                    <img src={imgsrc} alt={`${review.movieTitle}-poster`} onError={()=> { setImgsrc(`/rewer/uploads/posters/0.jpg`)}} />\r\n                    <p>{review.movieTitle}</p>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <ReviewRow review={review} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FollowedReviewRow;","import React, { useEffect, useState, useRef } from 'react'\r\nimport { createIf } from 'typescript';\r\nimport { useAsyncReference } from '../../hooks';\r\nimport { selectFollowedReviews } from '../../objects/review';\r\nimport FollowedReviewRow from './FollowedReviewRow';\r\n\r\nexport default function FollowedReviews() {\r\n    const [reviews, setReviews] = useAsyncReference([]); //for the listeners\r\n    const downloadCount = 5;\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\")){\r\n            requestReviews();  \r\n        }\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function windowListener(){\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            showMore();\r\n        }\r\n    }\r\n\r\n    async function showMore(){\r\n        console.log(\"listening\");\r\n        removeWindowListener(); //make sure the listener doenst fire again until we downloaded the new reviews\r\n        let followedReviews = await selectFollowedReviews(downloadCount, reviews.current.length);\r\n        if(followedReviews){\r\n            setReviews([...reviews.current, ...followedReviews]);\r\n            if(followedReviews.length === downloadCount){\r\n                addWindowListener();\r\n            }\r\n        } else {\r\n            alert(\"Server error: could not download review data.\");\r\n        }\r\n    }\r\n    \r\n    async function requestReviews(){\r\n        let followedReviews = await selectFollowedReviews(downloadCount, 0);\r\n        if(followedReviews){\r\n            setReviews(followedReviews);\r\n            if(followedReviews.length === downloadCount){\r\n                addWindowListener();\r\n            }\r\n        } else {\r\n            alert(\"Server error: could not download review data.\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {reviews.current.map(r=> {\r\n                return <FollowedReviewRow key={`followed-${r.id}`} review={r} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LatestMovies from '../components/movie/LatestMovies';\r\nimport UpComingMovies from '../components/movie/UpComingMovies';\r\nimport FollowedReviews from '../components/review/FollowedReviews';\r\nimport \"../main.css\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <h2>Latest releases</h2>\r\n            <LatestMovies />\r\n            <h2>Upcoming</h2>\r\n            <UpComingMovies />\r\n            <h3>Follows</h3>\r\n            <FollowedReviews />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Header } from '../components/header/Header'\r\nimport { Link } from \"react-router-dom\"\r\nexport default function Movies() {\r\n    let editBtn = <span></span>;\r\n    if(parseInt(localStorage.getItem(\"permission\")) > 1){\r\n        editBtn = <Link className=\"anchor-btn\" to=\"/editmovie?movieId=0\" >Add new movie</Link>\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n            {editBtn}\r\n        </div>\r\n    )\r\n}\r\n","import { url } from \"inspector\";\r\n\r\nexport interface UrlParam{\r\n    name: string;\r\n    value : string;\r\n}\r\nexport function getParameter(url: string): string{\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return decodeURIComponent(urlParams.get(url));    \r\n}\r\n\r\nexport function createUrl(url: string, params: UrlParam[]){\r\n    let preparedUrl = url;\r\n    if(params.length > 0){\r\n        preparedUrl = setParams(preparedUrl, params);\r\n    }\r\n    return encodeURI(preparedUrl);\r\n}\r\n\r\nfunction setParams(url: string, params: UrlParam[]){\r\n    url += \"?\";\r\n    for(let param of params) {\r\n        url += `${param.name}=${encodeURIComponent(param.value)}`;\r\n        if(param.name !== params[params.length - 1].name){\r\n            url += \"&\";\r\n        }\r\n    }\r\n    return url;\r\n}\r\n\r\nexport function addParam(newParam: UrlParam){\r\n    const splitUrl = window.location.href.split('?');\r\n    if(splitUrl.length > 1){\r\n        window.history.pushState(\"\", \"\",  `${window.location.href}&${newParam.name}=${newParam.value}`);\r\n    } else {\r\n        window.history.pushState(\"\", \"\",  `${window.location.href}?${newParam.name}=${newParam.value}`);\r\n    }\r\n}\r\n\r\nexport function changeParam(newParam: UrlParam){\r\n    removeParam(newParam.name);\r\n    addParam(newParam);\r\n}\r\n\r\nexport function removeParam(parameter)\r\n{\r\n  var url=document.location.href;\r\n  var urlparts= url.split('?');\r\n\r\n if (urlparts.length>=2)\r\n {\r\n  var urlBase=urlparts.shift(); \r\n  var queryString=urlparts.join(\"?\"); \r\n\r\n  var prefix = encodeURIComponent(parameter)+'=';\r\n  var pars = queryString.split(/[&;]/g);\r\n  for (var i= pars.length; i-->0;)               \r\n      if (pars[i].lastIndexOf(prefix, 0)!==-1)   \r\n          pars.splice(i, 1);\r\n  url = urlBase+'?'+pars.join('&');\r\n  window.history.pushState('',document.title,url); // added this line to push the new url directly to url bar .\r\n}\r\n}","import { readConfigFile} from \"typescript\";\r\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\r\nimport { changeParam, getParameter } from '../../urlManager';\r\nimport \"./movieStyle.css\";\r\nimport { IMovie, insertMovie, selectMovie, updateMovie, uploadPoster } from \"../../objects/movie\";\r\nimport { setBinder, useAsyncReference } from \"../../hooks\";\r\n\r\ninterface IEditMovieDetails{\r\n    movie: React.MutableRefObject<IMovie>;\r\n    setMovie: (movie: IMovie)=>void;\r\n    movieBinder: (e)=>void;\r\n}\r\n\r\nexport const EditMovieDetails: React.FC<IEditMovieDetails> = ({movie, movieBinder, setMovie}: IEditMovieDetails) =>{\r\n    const posterInput = useRef<HTMLInputElement>();\r\n    const createBtn = <button onClick={createMovie} type=\"button\">Create Movie's Page</button>;\r\n    const saveBtn =  <button onClick={saveMovie} type=\"button\">Save Changes</button>\r\n    const [mainBtn, setMainBtn] = useState(createBtn);\r\n    const newPosterBottom = \r\n        <Fragment>\r\n            <p>Create the movie's page to edit this picture.</p>\r\n        </Fragment>\r\n    const editPosterBottom = \r\n        <Fragment>\r\n            <p>It is recommended to use an image with a standard poster image ratio</p>\r\n            <input ref={posterInput} type=\"file\" accept=\".png,.jpg,.jpeg\" className=\"file-input\" />\r\n            <button onClick={savePoster}>Upload</button>\r\n        </Fragment>\r\n    const [posterBottom, setPosterBottom] = useState(newPosterBottom);\r\n    const [posterSource, setPosterSource] = useState(\"\");\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(movie.current.id > 0){\r\n            renderEditMode();\r\n        } else {\r\n            setPosterSource(`/rewer/uploads/posters/0.jpg?`)\r\n        }\r\n    },[]);\r\n\r\n    async function savePoster(){\r\n        const formData = new FormData();\r\n        formData.append(\"imageFile\", posterInput.current.files[0], `${movie.current.id}.jpg`);\r\n        if(await uploadPoster(formData)){\r\n            setPosterSource(`/rewer/uploads/posters/${movie.current.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            alert(\"Upload unsuccessful\");\r\n        }\r\n    }\r\n\r\n    async function renderEditMode(){\r\n        setMainBtn(saveBtn);\r\n        setPosterBottom(editPosterBottom);\r\n        setPosterSource(`/rewer/uploads/posters/${movie.current.id}.jpg?${new Date().getTime()}`);\r\n    }\r\n\r\n    async function createMovie(){\r\n        const newMovie = await insertMovie(movie.current);\r\n        if(newMovie != null && newMovie.id != null){\r\n            setMainMsg(\"Movie's page was created successfully.\");\r\n            changeParam({name: \"movieId\", value: newMovie.id.toString()});\r\n            setMovie(newMovie);\r\n            renderEditMode();\r\n        } else {\r\n            setMainMsg(\"Internal error: the server was unable to fulfill your request.\");\r\n        }\r\n    }\r\n\r\n    async function saveMovie(){\r\n        if(await updateMovie(movie.current)){\r\n            setMainMsg(`Changes have been successfully saved: ${new Date().getHours()}:${new Date().getMinutes()}`);\r\n        } else {\r\n            setMainMsg(\"WARNING: your last attempt to save your work was declined by the server.\");\r\n            alert(\"Request failed: server error.\");\r\n        }\r\n    }\r\n    return (\r\n    <Fragment>\r\n        {mainBtn}\r\n        <br/>\r\n        <p>{mainMsg}</p>\r\n      <div className=\"detail-grid\">\r\n        <div className=\"span-2\">\r\n            <input value={movie.current.title} onChange={movieBinder} name=\"title\" type=\"text\" placeholder=\"Title\" className=\"title-input\" /><br/>\r\n            <label>Runtime:</label>\r\n            <input value={movie.current.runtime} onChange={movieBinder} name=\"runtime\" type=\"text\" /><br/>\r\n            <label>Release date:</label>\r\n            <input value={movie.current.releaseDate.toString()} onChange={movieBinder} name=\"releaseDate\" type=\"date\" />\r\n            <textarea value={movie.current.summary} onChange={movieBinder} name=\"summary\" placeholder=\"Write something about the story...\" rows={20} />\r\n        </div>\r\n        <div>\r\n            <img src={posterSource} onError={()=> { setPosterSource(\"/rewer/uploads/posters/0.jpg\")}} alt=\"Poster\" title=\"Poster\" className=\"poster\"/>\r\n            {posterBottom}\r\n        </div>\r\n      </div>\r\n    </Fragment>)\r\n}\r\n\r\nexport default EditMovieDetails;","import * as caller from \"./caller\";\r\nimport { ICast } from \"./cast\";\r\nexport interface IArtist{\r\n    id: number;\r\n    name: string;\r\n    birthPlace: string;\r\n    birthDate: Date;\r\n    deathPlace: string;\r\n    deathDate: Date;\r\n    bio: string;\r\n}\r\n\r\nexport interface IDetailedArtist extends IArtist{\r\n    casts: IArtistCast[];\r\n}\r\n\r\nexport interface IArtistCast extends ICast{\r\n    movieDate: string;\r\n    castTypeName: string;\r\n}\r\n\r\nexport async function insertArtist(artist: IArtist): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/artist/insertartist.php\", artist);\r\n    return caller.getNewId(artist, response);\r\n}\r\n\r\nexport async function selectArtist(id: number): Promise<IArtist>{\r\n    const data = {\r\n        id: id\r\n    }\r\n    const response = await caller.POSTAsynch(\"/artist/selectartist.php\", data);\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function updateArtist(artist: IArtist): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/artist/updateartist.php\", artist);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function uploadPortrait(file: FormData): Promise<boolean>{\r\n    const response = await caller.UploadFile(\"/artist/uploadportrait.php\", file);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function selectArtistsByKeyword(keyword: string, limit: number, offset: number): Promise<IArtist[]>{\r\n    const response = await caller.POSTAsynch(\"/artist/selectartistsbykeyword.php\", {keyword: keyword, limit: limit, offset: offset});\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function selectDetailedArtist(id: number): Promise<IDetailedArtist>{\r\n    const detailedArtist: IDetailedArtist = caller.tryParse(await caller.POSTAsynch(\"/artist/selectdetailedartist.php\", {id: id}));\r\n    detailedArtist.casts.sort(compareDate);\r\n    return detailedArtist;\r\n}\r\n\r\nexport function compareDate(cast1: IArtistCast, cast2: IArtistCast){\r\n    if(new Date(cast1.movieDate) < new Date(cast2.movieDate)){\r\n        return -1;\r\n    }\r\n    if(new Date(cast1.movieDate) > new Date(cast2.movieDate)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}","import * as caller from \"./caller\";\r\nexport interface ICastType {\r\n    value: number;\r\n    name: string;\r\n}\r\nexport async function getCastTypes(): Promise<ICastType[]>{\r\n    const response = await caller.GETAsynch(\"/cast/getcasttypes.php\");\r\n    return caller.tryParse(response);\r\n}","import React, { useRef } from 'react'\r\nimport { parseDateYYYYMMDD } from '../../dateParser'\r\nimport { IArtist } from '../../objects/artist'\r\ninterface IArtistRow{\r\n    artist: IArtist;\r\n    onClick: ()=> void;\r\n    selectedArtist: IArtist;\r\n}\r\n\r\nexport const ArtistRow: React.FC<IArtistRow> = ({artist, onClick, selectedArtist}: IArtistRow) => {\r\n    //const [divClass, setDivClass] = useState(\"artist-row\");\r\n    const divRef = useRef<HTMLDivElement>();\r\n    const select = () =>{\r\n       //setDivClass(\"artist-row selected-row\");\r\n        onClick();\r\n    } \r\n    function setSelection(): string{\r\n        if(selectedArtist == null){\r\n            return \"artist-row\";\r\n        }\r\n        if(selectedArtist.id === artist.id){\r\n            return \"artist-row selected-row\";\r\n        }\r\n        return \"artist-row\";\r\n    }\r\n    return (\r\n        <div ref={divRef} onClick={select} className={setSelection()}>\r\n                <img src={`/rewer/uploads/portraits/${artist.id}.jpg`} alt={\"NOT SET\"} />\r\n                <p>{artist.name}</p>\r\n                <p title={artist.birthPlace}>{parseDateYYYYMMDD(new Date(artist.birthDate))}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistRow;\r\n","import React, {useState} from 'react'\r\nimport { parseDateYYYYMMDD } from '../../dateParser'\r\nimport { useAsyncReference } from '../../hooks'\r\nimport { IArtist } from '../../objects/artist'\r\nimport ArtistRow from './ArtistRow'\r\nimport \"./artistStyle.css\"\r\n\r\ninterface IArtistSelector{\r\n    artistList: IArtist[];\r\n    onSelectionChanged: (selectedArtist: IArtist)=> void;\r\n}\r\n\r\nexport const ArtistSelector: React.FC<IArtistSelector> = ({artistList, onSelectionChanged}: IArtistSelector)=>{\r\n    const [selectedArtist, setSelectedArtist] = useAsyncReference(undefined);\r\n    function selectArtist(artist: IArtist){\r\n        setSelectedArtist(artist);\r\n        onSelectionChanged(selectedArtist.current);\r\n    }\r\n    return (\r\n        <div>\r\n            {artistList.map(a=> {\r\n                return <ArtistRow key={`artist-row-${a.id}`} selectedArtist={selectedArtist.current} artist={a} onClick={()=>{ selectArtist(a); }} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ArtistSelector;","import React, { useEffect, useRef } from 'react'\r\nimport { ICastType } from '../../objects/castType'\r\n\r\ninterface ICastTypeSelect{\r\n    typeList: ICastType[];\r\n    updateValue: (selectedValue: string)=>void;\r\n    initialValue?: string;\r\n}\r\n\r\nexport const CastTypeSelect: React.FC<ICastTypeSelect> = ({typeList, updateValue, initialValue = null}: ICastTypeSelect)=>{\r\n    const select = useRef<HTMLSelectElement>();\r\n    function updateSelected(){\r\n        updateValue(select.current.value);\r\n    }\r\n    useEffect(()=>{\r\n        if(initialValue != null){\r\n            select.current.value = initialValue;\r\n        }\r\n    },[]);\r\n    return (\r\n        <select ref={select} onChange={updateSelected}>\r\n            {typeList.map(t=> {\r\n            return <option key={`castType_${t.value}`} value={t.value}>{t.name}</option>\r\n        })}\r\n        </select>\r\n       \r\n    )\r\n}\r\nexport default CastTypeSelect;\r\n","export function getMyInfo(){\r\n    let cookie = {};\r\n    document.cookie.split(';').forEach(function(el) {\r\n      let [k,v] = el.split('=');\r\n      cookie[k.trim()] = v;\r\n    });\r\n    let me = {\r\n        userName: decodeURIComponent(cookie[\"userName\"]).replace(\"+\", \" \"),\r\n        nickName: decodeURIComponent(cookie[\"nickName\"]).replace(\"+\", \" \"),\r\n        session: decodeURIComponent(cookie[\"session\"])\r\n    }\r\n    return me;\r\n}\r\n\r\nexport const itemReplacer = (array, oldItem, newItem) => {\r\n  array.map(item=> item === oldItem? newItem : item);\r\n}\r\n\r\nexport const replacedList = (array, oldItem, newItem) => {\r\n  return array.map(item=> item === oldItem? newItem : item);\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport { IArtist } from '../../objects/artist'\r\nimport { deleteCast, ICast, updateCast } from '../../objects/cast'\r\nimport { ICastType } from '../../objects/castType'\r\nimport CastTypeSelect from './CastTypeSelect'\r\nimport \"./castStyle.css\";\r\nimport { useAsyncBinder } from '../../hooks'\r\n\r\ninterface IEditCastRow{\r\n    cast: ICast;\r\n    castTypes: ICastType[];\r\n    onDelete: ()=>void;\r\n    onUpdate: (updated: ICast)=>void;\r\n}\r\n\r\nexport const EditCastRow: React.FC<IEditCastRow> = ({cast, castTypes, onDelete, onUpdate}: IEditCastRow) => {\r\n    const [mainClass, setMainClass] = useState(\"edit-cast-row\");\r\n    const [getCast, setCast, castBinder] = useAsyncBinder(cast);\r\n    async function deleteRow(){\r\n        if(await deleteCast(cast.id)){\r\n            onDelete();\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    async function saveChanges(){\r\n        if(await updateCast(getCast.current)){\r\n            onUpdate(getCast.current); \r\n            saved();\r\n        } else {\r\n            alert(\"Server error: could not save your work.\");\r\n        }\r\n    }\r\n\r\n    const setCastTypeId = (newTypeId: string) =>{\r\n        setCast({...getCast.current, castTypeId: parseInt(newTypeId)});\r\n    }\r\n\r\n    const setUnsaved = ()=>{\r\n        if(!mainClass.includes(\"unsaved\")){\r\n            setMainClass(\"edit-cast-row unsaved\");\r\n        }\r\n    }\r\n\r\n    const saved = ()=>{\r\n        if(mainClass.includes(\"unsaved\")){\r\n            setMainClass(mainClass.replace(\" unsaved\", \"\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={mainClass}>\r\n            <img src={`/rewer/uploads/portraits/${getCast.current.artistId}.jpg`} alt={cast.artistName} />\r\n            <p>{getCast.current.artistName}</p>\r\n            <input name=\"name\" value={getCast.current.name} onChange={(e)=>{ castBinder(e); setUnsaved(); } } />\r\n            <CastTypeSelect typeList={castTypes} initialValue={getCast.current.castTypeId} updateValue={(newTypeId: string)=>{ setCastTypeId(newTypeId); setUnsaved();} } />\r\n            <button onClick={saveChanges} >Update</button>\r\n            <button onClick={deleteRow}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditCastRow;\r\n","import React from 'react'\r\nimport { compareCastType, ICast } from '../../objects/cast'\r\nimport { ICastType } from '../../objects/castType'\r\nimport { itemReplacer, replacedList } from '../../utils'\r\nimport EditCastRow from './EditCastRow'\r\ninterface IEditCastList{\r\n    castList: ICast[];\r\n    setCastList: (state: ICast[])=>void;\r\n    castTypes: ICastType[];\r\n}\r\nexport const EditCastList: React.FC<IEditCastList> = ({castList, setCastList, castTypes}: IEditCastList) => {\r\n    function onDelete(selectedId: number){\r\n        setCastList(castList.filter(c=> c.id !== selectedId));\r\n    }\r\n    function onUpdate(toUpdate: ICast){\r\n        setCastList(replacedList(castList, castList.find(c=> c.id === toUpdate.id), toUpdate));\r\n    }\r\n    return (\r\n        <div>\r\n            {castList.map(c=> {\r\n                return <EditCastRow key={`edit-cast-${c.id}`} onDelete={()=> { onDelete(c.id)}} cast={c} onUpdate={onUpdate} castTypes={castTypes} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useAsyncBinder, onEnter } from '../../hooks'\r\nimport { IArtist, selectArtist, selectArtistsByKeyword } from '../../objects/artist';\r\nimport { compareCastType, ICast, insertCast, selectCastsByMovie } from '../../objects/cast';\r\nimport { getCastTypes } from '../../objects/castType';\r\nimport { getParameter } from '../../urlManager';\r\nimport ArtistSelector from '../artist/ArtistSelector';\r\nimport CastTypeSelect from '../cast/CastTypeSelect'\r\nimport { EditCastList } from '../cast/EditCastList';\r\nimport { Link } from  \"react-router-dom\";\r\nimport { IMovie } from '../../objects/movie';\r\ninterface IEditCastList{\r\n    movie: React.MutableRefObject<IMovie>;\r\n    setMovie: (movie: IMovie) => void;\r\n}\r\nexport const EditCast: React.FC<IEditCastList> = ({movie, setMovie}: IEditCastList) => {\r\n    const [castTypes, setCastTypes] = useState([]);\r\n    const [artists, setArtists] = useState([]);\r\n    //const [castList, setCastList] = useState([]);\r\n    const [keyword, setKeyword, bindKeyword] = useAsyncBinder({search: \"\"});\r\n    const [newCast, setNewCast, bindNewCast] = useAsyncBinder({id: 0, movieId: movie.current.id, artistId: 0, castTypeId: 1, name: \"\", artistName: \"Not selected\"});\r\n    useEffect(()=>{\r\n        fetchRequests();\r\n    }, []);\r\n    async function fetchRequests(){\r\n        await Promise.all([requestCastTypes(), requestArtists()]);\r\n    }\r\n    async function requestCastTypes(){\r\n        setCastTypes(await getCastTypes());\r\n    }\r\n    async function requestArtists(){\r\n        setArtists(await selectArtistsByKeyword(keyword.current.search, 25, 0));\r\n    }\r\n\r\n    async function addCast(){\r\n        if(movie.current.id === 0 || movie.current.id == null){\r\n            alert(\"You must create the movie's page first.\");\r\n            return false;\r\n        }\r\n        setNewCast({...newCast.current, movieId: movie.current.id});\r\n        if(newCast.current.artistId === 0 || newCast.current.artistId == null){\r\n            alert(\"Choose an artist!\");\r\n            return false;\r\n        } else if(await insertCast(newCast.current)){\r\n            setCasts([...movie.current.casts, newCast.current].sort(compareCastType));\r\n            setNewCast({...newCast.current, id: 0, name: \"\"});\r\n            return true;\r\n        } else {\r\n            alert(\"Server error.\");\r\n            return false;\r\n        } \r\n    }\r\n\r\n    function setCasts(newCasts: ICast[]){\r\n        setMovie({...movie.current, casts: newCasts});\r\n    }\r\n\r\n    function updateNewCastArtist(artist: IArtist){\r\n        setNewCast({...newCast.current, artistId: artist.id, artistName: artist.name});\r\n    }\r\n\r\n    function updateNewCastType(newValue: string){\r\n        setNewCast({...newCast.current, castTypeId: parseInt(newValue)});\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>Cast: </h2>\r\n                <EditCastList castList={movie.current.casts} setCastList={setCasts} castTypes={castTypes} />\r\n            </div>\r\n            <div className=\"adder-panel\">\r\n                <h3>Add cast member:</h3>\r\n                <span className=\"artist-name\" >{newCast.current.artistName}</span>\r\n                <CastTypeSelect typeList={castTypes} updateValue={updateNewCastType} />\r\n                <input value={newCast.current.name} onChange={bindNewCast} name=\"name\" placeholder=\"As\" />\r\n                <button onClick={addCast}>Add</button>\r\n                <Link to=\"/editartist?artistId=0\">Create new star</Link>\r\n            </div>\r\n            <div>\r\n                <input value={keyword.current.search} name=\"search\" onChange={bindKeyword} onKeyDown={(e)=> { onEnter(e, requestArtists); }} placeholder=\"Search\" />\r\n                <button onClick={requestArtists}>Search</button>\r\n                <ArtistSelector artistList={artists} onSelectionChanged={updateNewCastArtist} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { IGenre } from '../../objects/movie'\r\n\r\ninterface IGenreSelect{\r\n    genres: IGenre[];\r\n    updateSelected: (selectedValue: string)=> void;\r\n}\r\n\r\nexport const GenreSelect: React.FC<IGenreSelect> = ({genres, updateSelected}: IGenreSelect)=> {\r\n    const select = useRef<HTMLSelectElement>();\r\n    return (\r\n        <select ref={select} onChange={()=> { updateSelected(select.current.value) }} >\r\n            {genres.map(g=> {\r\n                return <option key={`opt${g.id}`} value={g.id}>{g.name}</option>\r\n            })}\r\n        </select>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { deleteGenre, getGenres, IGenre, IMovie, IMovieGenre, insertGenre } from '../../objects/movie';\r\nimport { GenreSelect } from './GenreSelect';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { useAsyncReference } from '../../hooks';\r\ninterface IGenreAdder{\r\n    movie: React.MutableRefObject<IMovie>;\r\n    setMovieGenres: (newValue: IMovieGenre[])=> void;\r\n}\r\nexport const GenreAdder: React.FC<IGenreAdder> = ({movie, setMovieGenres}: IGenreAdder)=> {\r\n    const [genreList, setGenreList] = useState([]);\r\n    const [newGenreId, setNewGenreId] = useAsyncReference(0);\r\n\r\n    useEffect(()=>{\r\n        requestGenres();\r\n    },[]);\r\n\r\n    function updateGenreId(value: string){\r\n        setNewGenreId(parseInt(value));\r\n    }\r\n\r\n    async function requestGenres(){\r\n        let genres = await getGenres();\r\n        if(genres != null){\r\n            setGenreList(genres);\r\n        } else {\r\n            alert(\"Server error: could not download the list of genres\");\r\n        }\r\n    }\r\n\r\n    async function addGenre(){\r\n        if(newGenreId.current == null || newGenreId.current === 0){\r\n            setNewGenreId(genreList[0].id);\r\n        }\r\n        let newGenre: IMovieGenre = {\r\n            id: 0, \r\n            genreName: getGenreName(newGenreId.current),\r\n            genreId: newGenreId.current,\r\n            movieId: movie.current.id\r\n        };\r\n        newGenre = await insertGenre(newGenre);\r\n        if(newGenre != null){\r\n            setMovieGenres([...movie.current.genres, newGenre]);\r\n        }\r\n    }\r\n\r\n    async function removeGenre(id: number){\r\n        if(await deleteGenre(id)){\r\n            setMovieGenres(movie.current.genres.filter(g=> g.id !== id));\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    function getGenreName (id: number): string{\r\n        return genreList.find(g=> g.id === id).name\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Genres:</h3>\r\n            <div className= \"edit-genre-container\">\r\n            {movie.current.genres.map(g=> {\r\n                return <div key={`genre-${g.id}`} className=\"edit-genre\"><span>{g.genreName}</span><button onClick={()=> { removeGenre(g.id); }} ><FontAwesomeIcon icon={faTimes} /></button></div>\r\n            })}\r\n            </div>          \r\n            <GenreSelect genres={genreList} updateSelected={updateGenreId} /><button onClick={addGenre}>Add</button><br/>\r\n        </div>\r\n    )\r\n}\r\nexport default GenreAdder;","import React, { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport \"../main.css\";\r\nimport EditMovieDetails from \"../components/movie/EditMovieDetails\";\r\nimport { IMovieGenre, selectDetailedMovie } from \"../objects/movie\";\r\nimport { useAsyncBinder } from \"../hooks\";\r\nimport { getParameter } from \"../urlManager\";\r\nimport { EditCast, } from \"../components/movie/EditCast\";\r\nimport GenreAdder from \"../components/movie/GenreAdder\";\r\n\r\nexport default function EditMovie(){\r\n    const [movie, setMovie, bindMovie] = useAsyncBinder({id: parseInt(getParameter(\"movieId\")), title: \"\", releaseDate: new Date(), summary: \"\", runtime: 0, casts: [], genres: []});\r\n    const dependentDiv = useRef<HTMLDivElement>();\r\n    useEffect(()=>{\r\n        if(movie.current.id > 0){\r\n            getMovie();\r\n        }\r\n    }, []);\r\n    async function getMovie(){\r\n        let selectedMovie = await selectDetailedMovie(movie.current.id);\r\n        if(selectedMovie != null){\r\n            setMovie(selectedMovie);\r\n            editModeOn();\r\n        } else {\r\n            alert(\"Server error\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(movie.current.id > 0){\r\n            editModeOn();\r\n        } else {\r\n            eidtModeOff();\r\n        }\r\n    }, [movie.current])\r\n\r\n    function editModeOn(){\r\n        dependentDiv.current.style.display = \"block\";\r\n    }\r\n\r\n    function eidtModeOff(){\r\n        dependentDiv.current.style.display = \"none\";\r\n    }\r\n\r\n    function setMovieGenres(newGenres: IMovieGenre[]){\r\n        setMovie({...movie.current, genres: newGenres});\r\n    }\r\n \r\n    return (\r\n    <Fragment>\r\n        <div className=\"main-container\">\r\n            <EditMovieDetails movie={movie} setMovie={setMovie} movieBinder={bindMovie} />\r\n            <div ref={dependentDiv}>\r\n                <GenreAdder movie={movie} setMovieGenres={setMovieGenres} />\r\n                <EditCast movie={movie} setMovie={setMovie} />\r\n            </div>\r\n        </div>\r\n    </Fragment>)\r\n}","import * as caller from \"./caller\";\r\nexport interface User{\r\n    userName: string;\r\n    nickName: string;\r\n}\r\n\r\nexport interface IDetailedUser extends User{\r\n    about: string;\r\n    permission: number;\r\n    followerCount?: number;\r\n    isFollowed?: number;\r\n}\r\n\r\nexport async function selectDetailedUser(userName: string): Promise<IDetailedUser>{\r\n    const response = await caller.POSTAsynch(\"/user/selectdetaileduser.php\", { userName: userName });\r\n    return caller.tryParse(response);\r\n}\r\n\r\nexport async function updateUserInfo(user: IDetailedUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/updateuserinfo.php\", user);\r\n    if(caller.isResponse200(response)){\r\n        localStorage.setItem(\"nickName\", user.nickName);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function uploadAvatar(file: FormData){\r\n    const response = await caller.UploadFile(\"/user/uploadavatar.php\", file);\r\n    try{\r\n        if(JSON.parse(response).response === 200) return true;\r\n        return false;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return false; \r\n}\r\n\r\nexport async function updatePermission(user: IDetailedUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/updatepermission.php\", user);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function doesExist(userName: string):Promise<boolean>{\r\n    const data = {\r\n        userName: userName\r\n    }\r\n    let response: string = await caller.POSTAsynch(\"/user/doesexist.php\", data);\r\n    try{\r\n        return JSON.parse(response).exists;\r\n    } catch(err) {\r\n        console.log(err);\r\n        console.log(response);\r\n        return false;\r\n    }\r\n}\r\n\r\n","import { User } from \"./user\";\r\nimport * as caller from \"./caller\";\r\nimport { faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\r\nexport interface AuthUser extends User{\r\n    password: string;\r\n    permission: number;\r\n    session?: string;\r\n}\r\n\r\ninterface loginResponse{\r\n    user: AuthUser;\r\n    isSuccessful: boolean;\r\n}\r\n\r\ninterface isLoggedInResponse{\r\n    isLoggedIn: boolean;\r\n    setNewSession?: boolean;\r\n    newSession?: string;\r\n}\r\n\r\nexport async function login(authUser: AuthUser, autoLogin: boolean):Promise<boolean>{\r\n    const data = {\r\n        authUser: authUser,\r\n        autoLogin: autoLogin\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/login.php\", data);\r\n    let parsedResponse: loginResponse;\r\n    try{\r\n        parsedResponse = JSON.parse(response).response;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n        return false;\r\n    }\r\n    console.log(parsedResponse);\r\n    if(!parsedResponse.isSuccessful){\r\n        localStorage.clear();\r\n        return false;\r\n    } \r\n    \r\n    localStorage.clear();\r\n    localStorage.setItem(\"userName\", parsedResponse.user.userName);\r\n    localStorage.setItem(\"nickName\", parsedResponse.user.nickName);\r\n    console.log(parsedResponse.user.permission.toString());\r\n    localStorage.setItem(\"permission\", parsedResponse.user.permission.toString());\r\n    if(autoLogin){\r\n        localStorage.setItem(\"session\", parsedResponse.user.session);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport async function insertUser(authUser: AuthUser): Promise<boolean>{\r\n    const response = await caller.POSTAsynch(\"/user/insertuser.php\", authUser);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function isLoggedIn(): Promise<isLoggedInResponse>{\r\n    if(!localStorage.hasOwnProperty(\"userName\")){\r\n        return {isLoggedIn: false};\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/isloggedin.php\", { userName: localStorage.getItem(\"userName\"), session: localStorage.getItem(\"session\")});\r\n    try{\r\n        return JSON.parse(response).response;\r\n    } catch(err){\r\n        console.log(err);\r\n        console.log(response);\r\n    }\r\n    return {isLoggedIn: false};\r\n}\r\n\r\nexport async function updatePassword(user: AuthUser, newPassword: string): Promise<boolean>{\r\n    let data = {\r\n        user: user,\r\n        newPassword: newPassword\r\n    }\r\n    const response = await caller.POSTAsynch(\"/user/updatepassword.php\", data);\r\n    return caller.isResponse200(response);\r\n}\r\n\r\nexport async function logOut(){\r\n    await caller.GETAsynch(\"/user/logout.php\");\r\n    localStorage.clear();\r\n}\r\n\r\nexport async function handleLogin(): Promise<Boolean>{\r\n    let response:any = await isLoggedIn();\r\n    if(response.isLoggedIn === false){\r\n        localStorage.clear();\r\n        return false;\r\n    }\r\n    if(response.setNewSession){\r\n        localStorage.setItem(\"session\", response.newSession);\r\n    }\r\n    return true;\r\n}","import React, { useState, useRef } from 'react'\r\nimport * as User from \"../../objects/user\";\r\nimport { AuthUser, insertUser } from \"../../objects/authUser\"\r\nimport \"./login.css\";\r\ninterface SignUpForm{\r\n\r\n}\r\n\r\nexport const SignUpForm: React.FC<SignUpForm> = ()=> {\r\n    const [userTakenMsg, setUserTakenMsg] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    const userName = useRef<HTMLInputElement>();\r\n    const nickName = useRef<HTMLInputElement>();\r\n    const pw1 = useRef<HTMLInputElement>();\r\n    const pw2 = useRef<HTMLInputElement>();\r\n\r\n    async function checkCommand(){\r\n        if(await User.doesExist(userName.current.value)){\r\n            setUserTakenMsg(\"Taken\");\r\n        } else {\r\n            setUserTakenMsg(\"Free\");\r\n        }\r\n        \r\n    }\r\n    async function signUpCommand(){\r\n        let canSend: boolean = true;\r\n        if(await User.doesExist(userName.current.value)){\r\n            setMsg(\"Username already taken.\");\r\n            setUserTakenMsg(\"Taken\");\r\n            canSend = false;\r\n        }\r\n        if(pw1.current.value !== pw2.current.value){\r\n            console.log(pw1.current.value)\r\n            console.log(pw2.current.value)\r\n            setMsg(prevMsg => {\r\n                return `${prevMsg} The two passwords don't match.`;\r\n            });\r\n            canSend = false;\r\n        }\r\n        if(canSend){\r\n            sendSignUpRequest();\r\n        }\r\n    }\r\n\r\n    async function sendSignUpRequest(){\r\n        let newUser: AuthUser = {\r\n            userName: userName.current.value,\r\n            nickName: nickName.current.value,\r\n            password: pw1.current.value,\r\n            permission: 1\r\n        }\r\n        if(await insertUser(newUser)){\r\n            setMsg(\"You have successfully signed up to our website!\");\r\n        } else {\r\n            setMsg(\"Process failed.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sign up</h2>\r\n                <div className=\"form-container\">\r\n                    <label className=\"form-item\">New username:</label>\r\n                    <input ref={userName} className=\"form-item\" name=\"newUserName\" placeholder=\"to log in\" />\r\n                    <div className=\"form-item\"></div><div className=\"form-item\"><span className=\"form-item\">{userTakenMsg}</span><button onClick={checkCommand}>Check</button></div>\r\n                    <label className=\"form-item\">New nickname:</label>\r\n                    <input ref={nickName} className=\"form-item\" name=\"newNickName\" placeholder=\"seen by others\" />\r\n                    <label className=\"form-item\">New password:</label>\r\n                    <input ref={pw1} className=\"form-item\" type=\"password\" name=\"newPassword1\" placeholder=\"new password\" />\r\n                    <label className=\"form-item\">New password again:</label>\r\n                    <input ref={pw2} className=\"form-item\" type=\"password\" name=\"newPassword2\" placeholder=\"new password again\" />\r\n                </div>\r\n                <p>{msg}</p>\r\n                <button onClick={signUpCommand} className=\"login-btn\" type=\"button\">Sign Up</button>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm","import React, { useRef, useState, Fragment } from 'react'\r\nimport \"./login.css\";\r\nimport { SignUpForm } from './SignUpForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { login } from '../../objects/authUser';\r\ninterface ILoginForm{\r\n    \r\n}\r\n\r\nexport const LoginForm: React.FC<ILoginForm> = ()=> {\r\n    const [loginMsg, setLoginMsg] = useState(\"\");\r\n    const userName = useRef<HTMLInputElement>();\r\n    const password = useRef<HTMLInputElement>();\r\n    const autoLogin = useRef<HTMLInputElement>();\r\n    const signUpLine = \r\n    <Fragment>\r\n        <p>Not signed up yet?<button onClick={addSignUp}>Do it now!</button></p> \r\n        <div className=\"bottom-border\" />\r\n    </Fragment>\r\n    const [signUpForm, setSignUp] = useState(signUpLine);\r\n    const history = useHistory();\r\n\r\n    function addSignUp(){\r\n        setSignUp(<><div className=\"bottom-border\" /><SignUpForm /></>);\r\n    }\r\n\r\n    async function loginCommand(){\r\n        const isLoginSuccessful = await login({userName: userName.current.value, nickName: undefined, permission: 1, password: password.current.value}, autoLogin.current.checked); //csak hogy ne egy sorban legyen már\r\n        if(isLoginSuccessful){\r\n            history.push(\"/\");\r\n            window.location.reload(); //ezt a header beállítása végett csináljuk\r\n        } else {\r\n            setLoginMsg(\"Incorrect user authentications.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form action=\"\">\r\n                <div className=\"form-container\">\r\n                    <label className=\"form-item\">Username:</label>\r\n                    <input className=\"form-item\" ref={userName} name=\"userName\" placeholder=\"username\" />\r\n                    <label className=\"form-item\">Password:</label>\r\n                    <input className=\"form-item\" ref={password} type=\"password\" placeholder=\"password\" name=\"password\" />\r\n                    <div className=\"form-item\"><label>Keep me logged in</label><input ref={autoLogin} type=\"checkbox\" /></div>\r\n                    <button onClick={loginCommand} className=\"login-btn form-item\" type=\"button\" name=\"submit\" >Login</button>\r\n                </div>\r\n                <p>{loginMsg}</p>\r\n            </form>\r\n                {signUpForm}    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Fragment, useRef, useState } from 'react'\r\nimport { updatePassword } from '../../objects/authUser';\r\nimport \"../login/login.css\";\r\ninterface IChangePassword{\r\n\r\n}\r\n\r\nexport const ChangePassword: React.FC<IChangePassword> = ()=> {\r\n    const [oldPw, setOldPw] = useState(\"\");\r\n    const [newPw1, setNewPw1] = useState(\"\");\r\n    const [newPw2, setNewPw2] = useState(\"\");\r\n    const [msg, setMsg] = useState(\"\");\r\n    async function updatePasswordCommand(){\r\n        if(newPw1 !== newPw2){\r\n            setMsg(\"The two passwords don't match\");\r\n            clearInput();\r\n            return false;\r\n        }\r\n        if(await updatePassword({ userName: localStorage.getItem(\"userName\"), password: oldPw, permission: 0, nickName: localStorage.getItem(\"nickName\")}, newPw1)){\r\n            setMsg(\"You password has been updated.\");\r\n            clearInput();\r\n            return true;\r\n        } else {\r\n            setMsg(\"Access denied.\");\r\n            clearInput();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function clearInput(){\r\n        setOldPw(\"\");\r\n        setNewPw1(\"\");\r\n        setNewPw2(\"\");\r\n    }\r\n\r\n    function handleKeyDown(e){\r\n        if(e.key === 'Enter'){\r\n            updatePasswordCommand();\r\n        }\r\n    }\r\n\r\n    return (\r\n       <Fragment>\r\n            <h2>Update password</h2>\r\n            <div className=\"form-container\">\r\n                <label className=\"form-item\">Current password:</label>\r\n                <input value={oldPw} onChange={e=> setOldPw(e.target.value)} type=\"password\" className=\"form-item\" placeholder=\"old password\" />\r\n                <label className=\"form-item\">New password:</label>\r\n                <input value={newPw1} onChange={e=> setNewPw1(e.target.value)} type=\"password\" className=\"form-item\" placeholder=\"new password\" />\r\n                <label className=\"form-item\">New password again:</label>\r\n                <input value={newPw2} onChange={e=> setNewPw2(e.target.value)} onKeyDown={handleKeyDown} type=\"password\" className=\"form-item\" placeholder=\"new password to check\" />\r\n                <p>{msg}</p>\r\n            </div>\r\n            <button onClick={updatePasswordCommand} type=\"button\">Update password</button>\r\n       </Fragment>\r\n    )\r\n}\r\nexport default ChangePassword;","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useBinder } from '../../hooks';\r\nimport { logOut } from '../../objects/authUser';\r\nimport { selectDetailedUser, updateUserInfo, uploadAvatar } from '../../objects/user';\r\nimport ChangePassword from './ChangePassword';\r\nimport \"./profileStyle.css\";\r\n\r\nexport default function MyProfile() {\r\n    const [myProfile, setMyProfile, bindMyProfile] = useBinder({ userName: localStorage.getItem(\"userName\"), nickName: localStorage.getItem(\"nickName\"), permission: 1, about: \"\", followerCount: 0 })\r\n    const [nickNameMsg, setNickNameMsg] = useState(\"\");\r\n    const [uploadMsg, setUploadMsg] = useState(\"\");\r\n    const [avatarSource, setAvatarSource] = useState(`/rewer/uploads/avatars/${localStorage.getItem(\"userName\")}.jpg`);\r\n    const imageFile = useRef<HTMLInputElement>();\r\n\r\n    useEffect(()=>{\r\n        getMyInfo();\r\n    }, []);\r\n\r\n    async function logoutCommand(){\r\n        await logOut();\r\n        window.location.reload();\r\n    }\r\n\r\n    async function updateUserInfoCommand(){\r\n        if(await updateUserInfo(myProfile)){\r\n            setNickNameMsg(\"Your profile has been updated\");\r\n        } else {\r\n            setNickNameMsg(\"Request failed.\");\r\n        } \r\n    }\r\n\r\n    async function getMyInfo(){\r\n        let profile = await selectDetailedUser(localStorage.getItem(\"userName\"));\r\n        if(profile){\r\n            setMyProfile(profile);\r\n        } else {\r\n            //TODO 404\r\n        }\r\n    }\r\n\r\n    function handleKeyDown(e){\r\n        if(e.key === 'Enter'){\r\n            updateUserInfoCommand();\r\n        }\r\n    }\r\n\r\n    async function uploadImageFileCommand(){\r\n        const formData = new FormData();\r\n        formData.append(\"imageFile\", imageFile.current.files[0], `${localStorage.getItem(\"userName\")}.jpg`);\r\n        if(await uploadAvatar(formData)){\r\n            setUploadMsg(\"Avatar updated.\");\r\n            setAvatarSource(`/rewer/uploads/avatars/${localStorage.getItem(\"userName\")}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            setUploadMsg(\"Process failed. Make sure file's size is not bigger than 10MB.\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <p>User settings</p>\r\n            <button onClick={logoutCommand}>Log out</button>\r\n            <div className=\"profile-grid\">\r\n                <div className=\"profile-grid-item\">    \r\n                    <img \r\n                        src={avatarSource} \r\n                        onError={()=> {setAvatarSource(`/rewer/uploads/avatars/default.jpg`)} }\r\n                        className=\"image\" \r\n                        alt=\"Avatar\" \r\n                        title=\"Avatar\"  />\r\n                    <input ref={imageFile}  className=\"file-input\" type=\"file\" />\r\n                    <button onClick={uploadImageFileCommand} type=\"button\">Upload</button>\r\n                    <p>{uploadMsg}</p>\r\n                </div>\r\n                <div className=\"profile-grid-item\">\r\n                    <h1>{localStorage.getItem(\"userName\")}</h1>  \r\n                    <textarea name=\"about\" value={myProfile.about} onChange={bindMyProfile} rows={10} ></textarea>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label>My nickname: </label>\r\n                <input type=\"text\" name=\"nickName\" value={myProfile.nickName} onKeyDown={handleKeyDown} accept=\".png,.jpg\" onChange={bindMyProfile} />\r\n                <button onClick={updateUserInfoCommand}  type=\"button\" className=\"save\" >Save</button>\r\n            </div>\r\n            <p>{nickNameMsg}</p>\r\n            <div className=\"bottom-border\"></div>\r\n            <ChangePassword />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"../main.css\";\r\nimport LoginForm from '../components/login/LoginForm';\r\nimport MyProfile from '../components/profile/MyProfile';\r\n\r\nexport default function Login() {\r\n    let content: any;\r\n    if(localStorage.getItem(\"userName\") != null){ //ha lesznek\r\n        content = <MyProfile />\r\n    } else {\r\n        content = <LoginForm />\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"grid-container\"> \r\n            <div className=\"grid-item\"></div>\r\n            <div className=\"grid-item main\">\r\n                {content}\r\n            </div>\r\n            <div className=\"grid-item\"></div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { faCreativeCommons } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport interface IHeaderItem{\r\n    to: string;\r\n    content: any;\r\n}\r\n\r\nexport const HeaderItem: React.FC<IHeaderItem> = ({to, content})=> {\r\n    return (\r\n            <Link to={to}>{content}</Link>\r\n    )\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react'\r\nimport \"./headerStyle.css\";\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faUser, faSignInAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { HeaderItem, IHeaderItem } from './HeaderItem';\r\nimport { createUrl } from '../../urlManager';\r\n\r\ninterface INavList{\r\n\r\n}\r\n\r\nexport const Header: React.FC<INavList> = ()=> {\r\n   const headerRef = useRef<HTMLDivElement>(null);\r\n   const [userIcon, setUserIcon] = useState(null);\r\n   const [optionalHeaders, setOptionalHeaders] = useState<IHeaderItem[]>([]);\r\n    let sticky: number;\r\n    window.onscroll = function(){\r\n        headerHandler();\r\n    }\r\n\r\n    function headerHandler(){\r\n        sticky = headerRef.current.offsetTop;\r\n        if(window.pageYOffset > sticky){\r\n            headerRef.current.classList.add(\"sticky\");\r\n        } else {\r\n            headerRef.current.classList.add(\"sticky\");\r\n        }\r\n    } \r\n    function displayMenu(){\r\n        if(!headerRef.current.classList.contains(\"responsive\")){\r\n            headerRef.current.classList.add(\"responsive\");\r\n            document.body.scrollTop = 0; // For Safari\r\n            document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n        } else {\r\n            headerRef.current.classList.remove(\"responsive\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(localStorage.getItem(\"userName\"));\r\n        console.log(localStorage.getItem(\"nickName\"));\r\n        console.log(localStorage.getItem(\"session\"));\r\n        console.log(localStorage.getItem(\"permission\"));\r\n        if(parseInt(localStorage.getItem(\"permission\")) > 1){\r\n            setOptionalHeaders(prevOptionals => {\r\n                return [...prevOptionals, {to: \"/manage\", content: \"Manage\"}];\r\n            },)\r\n        }\r\n        if(localStorage.getItem(\"userName\") != null){\r\n            setUserIcon(<FontAwesomeIcon icon={faUser} />);\r\n        } else {\r\n            setUserIcon(<FontAwesomeIcon icon={faSignInAlt} />);\r\n           \r\n        }\r\n    }, []);\r\n    //<FontAwesomeIcon icon={faUser} />\r\n    return (        \r\n           <header>\r\n                <div ref={headerRef} className=\"topnav\">\r\n                    <HeaderItem to=\"/profile\" content={userIcon} />\r\n                    <HeaderItem to=\"/rewer\" content=\"Home\" />\r\n                    <HeaderItem to={createUrl(\"/movies\", [{name: \"name\", value: \"múvíie\"}, {name: \"search\", value: \"sálálá\"}])} content=\"Movies\" />\r\n                    <HeaderItem to={\"/stars\"} content=\"Stars\" />\r\n                    <HeaderItem to={\"/follows\"} content=\"Follows\" />\r\n                    {optionalHeaders.map(oh => \r\n                        <HeaderItem key={`${oh.to}${oh.content}`} to={oh.to} content={oh.content} />\r\n                    )}\r\n                    <a onClick={displayMenu} className=\"icon\"><FontAwesomeIcon icon={faBars} /></a>\r\n                </div>\r\n            </header>\r\n    )\r\n}\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function Stars() {\r\n    let editBtn = <span></span>;\r\n    if(parseInt(localStorage.getItem(\"permission\")) > 1){\r\n        editBtn = <Link className=\"anchor-btn\" to=\"/editartist?artistId=0\" >Add new star</Link>\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n            {editBtn}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport { useAsyncBinder } from '../../hooks';\r\nimport { IArtist, insertArtist, selectArtist, updateArtist, uploadPortrait } from '../../objects/artist';\r\nimport { changeParam, getParameter } from '../../urlManager';\r\nimport \"./artistStyle.css\";\r\n\r\ninterface IEditDetails{\r\n    artistId: number;\r\n}\r\n\r\nexport const EditDetails: React.FC<IEditDetails> = (props: IEditDetails) => {\r\n    const imageInput = useRef<HTMLInputElement>();\r\n    const createButton = <button onClick={createArtist}>Create</button>;\r\n    const saveButton = <button onClick={saveArtist}>Save</button>;\r\n    const newAvatarBottom = <Fragment>\r\n                                <p>Create the artist's page to modify their portrait.</p>\r\n                            </Fragment>;\r\n    const editAvatarBottom = <Fragment>\r\n                                <input ref={imageInput} type=\"file\" accept=\".png,.jpg\" className=\"file-input\" />\r\n                                <p>It is recommended to use pictures with the standard portrait image ratio (9:16)</p>\r\n                                <button onClick={uploadImage} >Upload</button>\r\n                            </Fragment>;\r\n    const [artist, setArtist, bindArtist] = useAsyncBinder({id: parseInt(getParameter(\"artistId\")), name: \"\", birthPlace: \"\", birthDate: new Date(), deathPlace: \"\", deathDate: new Date(), bio: \"\"});\r\n    const [detailButton, setDetailButton] = useState(<Fragment></Fragment>);\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    const [portraitBottom, setPortraitBottom] = useState(newAvatarBottom);\r\n    const [portraitSource, setPortraitSource] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if(artist.current.id > 0){\r\n            renderEditArtistMode();\r\n        } else {\r\n            renderNewArtistMode();\r\n        }\r\n        setPortraitSource(`/rewer/uploads/portraits/${artist.current.id}.jpg`);\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    async function renderEditArtistMode(){\r\n        let selectedArtist = await selectArtist(parseInt(getParameter(\"artistId\")));\r\n        if(selectedArtist != null){\r\n            setArtist(selectedArtist);\r\n            setDetailButton(saveButton);\r\n            setPortraitBottom(editAvatarBottom);\r\n        } else {\r\n            setMainMsg(\"Error trying to load artistpage.\") //TODO go to 404 page\r\n        }\r\n    }\r\n    \r\n    function renderNewArtistMode(){\r\n        setDetailButton(createButton);\r\n        setPortraitBottom(newAvatarBottom);\r\n    }\r\n\r\n    async function createArtist(){\r\n        await insertArtist(artist.current);\r\n        if(artist.current.id != null){\r\n            setMainMsg(\"Artist's page successfully created.\");\r\n            changeParam({name: \"artistId\", value: artist.current.id.toString()});\r\n            renderEditArtistMode();\r\n        } else{\r\n            setMainMsg(\"Internal error: the server was unable to fulfill your request.\");\r\n        } \r\n    }\r\n\r\n    async function saveArtist(){\r\n        if(updateArtist(artist.current)){\r\n            setMainMsg(\"Changes saved.\");\r\n        } else {\r\n            setMainMsg(\"WARNING: your last attempt to save your work was declined by the server.\");\r\n            alert(\"Request failed: server error.\");\r\n        }        \r\n    }\r\n\r\n    async function uploadImage(){\r\n        const formData = new FormData();\r\n        formData.append(\"imageFile\", imageInput.current.files[0], `${artist.current.id}.jpg`);\r\n        if(await uploadPortrait(formData)){\r\n            setPortraitSource(`/rewer/uploads/portraits/${artist.current.id}.jpg?${new Date().getTime()}`);\r\n        } else {\r\n            alert(\"Process failed. Make sure file's size is not bigger than 10MB.\");\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {mainMsg}\r\n            <br/>\r\n            {detailButton}\r\n            <br/>\r\n            <input value={artist.current.name} onChange={bindArtist} type=\"text\" name=\"name\" placeholder=\"Name\" className=\"name-input\" />\r\n            <div className=\"detail-grid\">\r\n                <div className=\"detail-grid-item span-2\">\r\n                    <h3>Born: </h3>\r\n                    <input value={artist.current.birthPlace} type=\"text\" onChange={bindArtist} name=\"birthPlace\" className=\"place-input\" placeholder=\"Birthplace\"/>\r\n                    <input value={artist.current.birthDate.toString()} type=\"date\" onChange={bindArtist} name=\"birthDate\" /><br/>\r\n                    <h3>Died: </h3>\r\n                    <input value={artist.current.deathPlace} type=\"text\" onChange={bindArtist} name=\"deathPlace\" className=\"place-input\" placeholder=\"leave empty if irrelevant\" title=\"leave empty if irrelevant\"/>\r\n                    <input value={artist.current.deathDate.toString()} type=\"date\" onChange={bindArtist} name=\"deathDate\" />\r\n                    <textarea value={artist.current.bio} onChange={bindArtist} name=\"bio\" placeholder=\"Biography\" rows={30} />\r\n                </div>\r\n                <div className=\"detail-grid-item first\" >\r\n                    <img className=\"portrait\" src={portraitSource} onError={()=> {setPortraitSource(\"/rewer/uploads/portraits/0.jpg\")}} alt=\"Portrait\" /><br />\r\n                    {portraitBottom}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDetails;","import React from 'react'\r\nimport EditDetails from '../components/artist/EditDetails'\r\n\r\nexport default function EditArtist() {\r\n    return (\r\n        <div className=\"grid-container\"> \r\n        <div className=\"grid-item\"></div>\r\n        <div className=\"grid-item main\">\r\n            <EditDetails artistId={10} />\r\n        </div>\r\n        <div className=\"grid-item\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ICast } from '../../objects/cast';\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface ICastRow{\r\n    cast: ICast;\r\n}\r\n\r\nexport const CastRow: React.FC<ICastRow> = ({cast}: ICastRow) => {\r\n    return (\r\n        <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/portraits/${cast.artistId}.jpg`} alt={cast.artistName} />\r\n            <span><Link to={`/star?artistId=${cast.artistId}`} >{cast.artistName}</Link></span>\r\n            <p className=\"cast-row-item\">{cast.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastRow;","import React from 'react'\r\nimport { ICast } from '../../objects/cast';\r\nimport CastRow from './CastRow';\r\n\r\ninterface ICastList{\r\n    casts: ICast[];\r\n}\r\n\r\nexport const CastList: React.FC<ICastList> = ({casts}: ICastList) => {\r\n    return (\r\n        <div>\r\n            {casts.map(c=> {\r\n                return <CastRow key={`cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastList;","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IScore{\r\n    value: number;\r\n}\r\n\r\nexport const MainScore: React.FC<IScore> = ({value}: IScore) => {\r\n    const [scoreClass, setScoreClass] = useState(\"score\");\r\n    useEffect(()=>{\r\n        if(value > 6){\r\n            setScoreClass(\"main-score high\");\r\n        } else if(value < 4){\r\n            setScoreClass(\"main-score low\");\r\n        } else {\r\n            setScoreClass(\"main-score\");\r\n        }\r\n    }, [value])\r\n    return (\r\n        <div className={scoreClass}>\r\n            <p>{value}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainScore;","import React, { Fragment, useState } from 'react'\r\nimport { IMovie } from '../../objects/movie'\r\nimport { Link } from \"react-router-dom\"\r\nimport { getDay, getMonth, getYear } from '../../dateParser'\r\nimport MainScore from './MainScore'\r\n\r\ninterface IMovieInfo{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MovieInfo: React.FC<IMovieInfo> = ({movie}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"title-grid\">\r\n                <p className=\"title\">{movie.title}</p>\r\n                <MainScore value={Math.round(movie.avgScore * 10) / 10} />\r\n            </div>                       \r\n            {movie.genres.map(g=> {\r\n                return <Link key={`genre-${g.id}`} className=\"genre\" to={\"todo\"}>{g.genreName}</Link>\r\n            })}\r\n            <div className=\"info-grid\">\r\n                <div className=\"info-grid-item\">\r\n                    <img src={`/rewer/uploads/posters/${movie.id}.jpg`} className=\"poster\" title={movie.title} alt={`${movie.title}_poster`} />\r\n                </div>                \r\n                <div className=\"info-grid-item\">\r\n                    <p>{movie.summary}</p>\r\n                    <p>Premier: {`${getDay(movie.releaseDate.toString())} ${getMonth(movie.releaseDate.toString())}  ${getYear(movie.releaseDate.toString())}`}</p>\r\n                    <p>Runtime: {`${movie.runtime} minutes`}</p>\r\n                    <p>Directed by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 1).map(m=>{\r\n                            return <li key={`director-link-${m.artistId}`} ><Link className=\"star\" to={`/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link></li>\r\n                        })}\r\n                    </ul>\r\n                    <p>Written by: </p>\r\n                    <ul>\r\n                        {movie.casts.filter(c=> c.castTypeId === 3).map(m=> {\r\n                            return <li key={`director-link-${m.artistId}`}><Link className=\"star\" to={`/star?artistId=${m.artistId}`} title={m.name} >{m.artistName}</Link><br/></li>\r\n                        })} \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MovieInfo;\r\n","import React, { Fragment } from 'react'\r\nimport { normalFormat } from '../../dateParser'\r\nimport { IReview } from '../../objects/review'\r\nimport { Score } from '../movie/Score'\r\nimport \"./reviewStyle.css\"\r\n\r\ninterface IEditableReview{\r\n    review: IReview;\r\n    onEdit: (rev: IReview) => void;\r\n    onDelete: (toDelete: IReview)=> void;\r\n}\r\n\r\nexport const AddedReview: React.FC<IEditableReview> = ({review, onEdit, onDelete}: IEditableReview)=> {\r\n    function edit(){\r\n        onEdit(review);\r\n    }\r\n\r\n    function removeReview(){\r\n        onDelete(review);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"review-grid\">\r\n                <div>\r\n                    <button onClick={edit} >Edit</button>\r\n                    <button onClick={removeReview}>Delete</button>\r\n                </div>               \r\n                <p className=\"review-date\">{normalFormat(review.date)}</p>\r\n                <Score value={review.score} />\r\n            </div>\r\n            <p>{review.text}</p>\r\n            <p>{review.popIndex} points</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddedReview;","import React, { useState, useEffect } from 'react'\r\nimport \"./movieStyle.css\"\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Score } from './Score'\r\ninterface IScoreAdder{\r\n    startValue: number;\r\n    setScore: (newValue: number)=> void;\r\n}\r\n\r\nexport const ScoreAdder: React.FC<IScoreAdder> = ({startValue, setScore}: IScoreAdder)=> {\r\n    const [value, setValue] = useState(startValue);\r\n    function increment(){\r\n        if(value < 10){\r\n            setValue(oldValue => { return oldValue + 1});\r\n        }\r\n    }\r\n\r\n    function decrement(){\r\n        if(value > 1){\r\n            setValue(oldValue => { return oldValue - 1});\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setScore(value);\r\n    }, [value]);\r\n\r\n    return (\r\n        <div>\r\n            <Score value={value} />\r\n            <button onClick={increment} className=\"score-btn plus\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n            <button onClick={decrement} className=\"score-btn minus\">\r\n                <FontAwesomeIcon icon={faMinus} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useBinder } from '../../hooks'\r\nimport { IReview } from '../../objects/review'\r\nimport { ScoreAdder } from '../movie/ScoreAdder'\r\n\r\ninterface IPostReview{\r\n    review: IReview;\r\n    onPost: (currentReview: IReview) => void;\r\n}\r\n\r\nexport const PostReview: React.FC<IPostReview> = ({review, onPost}: IPostReview) => {\r\n    const [myReview, setMyReview, bindMyReview] = useBinder(review);\r\n    function updateScore(newValue: number){\r\n        setMyReview({...myReview, score: newValue});\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"score-grid\">\r\n                <textarea className=\"score-item\" name=\"text\" rows={10} value={myReview.text} onChange={bindMyReview} />  \r\n                <div className=\"score-item\"><ScoreAdder startValue={review.score} setScore={updateScore}/></div>                                \r\n            </div>\r\n        <button onClick={()=>{ onPost(myReview) }}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link } from \"react-router-dom\" \r\nimport { IMovie } from '../../objects/movie';\r\nimport { deleteReview, insertReview, IReview, selectMyReview, updateReview } from '../../objects/review';\r\nimport { AddedReview } from './AddedReview';\r\nimport { PostReview } from './PostReview';\r\n\r\ninterface IMyReview{\r\n    movie: IMovie;\r\n}\r\n\r\nexport const MyReview: React.FC<IMyReview> = ({movie}: IMyReview) => { \r\n    const [reviewContent, setReviewContent] = useState(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: localStorage.getItem(\"userName\")}} onPost={postReview} />);\r\n    const [mainMsg, setMainMsg] = useState(\"\");\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"userName\") == null){\r\n            setReviewContent(<p>You must be <Link to=\"/profile\">logged in</Link> to write a review.</p>);\r\n        } else {\r\n            getMyReview();\r\n        }\r\n        async function getMyReview(){\r\n            const reviews = await selectMyReview(movie.id);\r\n            if(reviews == null){\r\n                alert(\"Server error\");\r\n                setMainMsg(\"Your review info could not bet downloaded from the server.\");\r\n            } else if(reviews.length > 0){\r\n                setReviewContent(<AddedReview review={reviews[0]} onEdit={startEditing} onDelete={removeReview} />);\r\n            } else {\r\n                setMainMsg(\"You haven't posted a review for this movie yet\");\r\n            }\r\n        }  \r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(new Date().getTime() < new Date(movie.releaseDate).getTime()){\r\n            setReviewContent(<p>This movie has not been released yet.</p>);\r\n            setMainMsg(\"\");\r\n        }\r\n    }, [movie])\r\n\r\n    function startEditing(review: IReview){\r\n        setReviewContent(<PostReview review={review} onPost={saveReview} /> );\r\n        setMainMsg(\"Editing your review:\");\r\n    }\r\n\r\n    async function saveReview(review: IReview){\r\n        if(await updateReview(review)){\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />);\r\n            setMainMsg(\"Review has been updated.\");\r\n        }\r\n    }\r\n\r\n    async function postReview(review: IReview){\r\n        if(await insertReview(review)){\r\n            review = {...review, date: new Date().toLocaleDateString(\"hu-HU\"), popIndex: 1};\r\n            setReviewContent(<AddedReview review={review} onEdit={startEditing} onDelete={removeReview} />)\r\n        } else {\r\n            alert(\"Server error: could not post your review.\");\r\n        }\r\n    }\r\n\r\n    async function removeReview(review: IReview){\r\n        console.log(review);\r\n        if(await deleteReview(review)){\r\n            setMainMsg(\"Your review has been deleted.\");\r\n            setReviewContent(<PostReview review={{id: 0, text: \"\", movieId: movie.id, date: \"\", popIndex: 0, score: 5, userName: \"\"}} onPost={postReview} /> );\r\n        } else {\r\n            alert(\"Server error: could not delete your review.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>My Review:</h3>\r\n            <p>{mainMsg}</p>\r\n            <div className=\"review-container\">\r\n                {reviewContent}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { IMovie } from '../../objects/movie'\r\nimport { IReview } from '../../objects/review';\r\nimport { ReviewRow } from './ReviewRow';\r\n\r\ninterface IReviewList{\r\n    reviews: IReview[];\r\n}\r\n\r\nexport const ReviewList: React.FC<IReviewList> = ({reviews}: IReviewList) => {\r\n    return (\r\n        <div>\r\n            {reviews.map(r=>{\r\n                return <ReviewRow key={`review-${r.id}`} review={r} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReviewList;","import React, { useRef } from 'react'\r\nimport { reviewOrderBy } from '../../objects/review';\r\n\r\ninterface IReviewOrderBySelect{\r\n   defaultValue: reviewOrderBy;\r\n   onUpdate: (newValue: reviewOrderBy) => void;\r\n}\r\n\r\nexport const ReviewOrderBySelect: React.FC<IReviewOrderBySelect> = ({defaultValue, onUpdate}: IReviewOrderBySelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function update(){\r\n        onUpdate(reviewOrderBy[select.current.value]);\r\n    }\r\n    return (\r\n        <select ref={select} onChange={update} value={defaultValue}>\r\n            <option value={reviewOrderBy.popIndex}>Most popular</option>\r\n            <option value={reviewOrderBy.date}>Latest</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default ReviewOrderBySelect;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport CastList from '../components/cast/CastList';\r\nimport MovieInfo from '../components/movie/MovieInfo'\r\nimport { MyReview } from '../components/review/MyReview';\r\nimport ReviewList from '../components/review/ReviewList';\r\nimport ReviewOrderBySelect from '../components/review/ReviewOrderBySelect';\r\nimport { normalFormat } from '../dateParser';\r\nimport { useAsyncReference } from '../hooks';\r\nimport { selectDetailedMovie } from '../objects/movie';\r\nimport { IReview, reviewOrderBy, selectReviewsByMovie } from '../objects/review';\r\nimport { getParameter } from '../urlManager';\r\ninterface IMoviePage{\r\n\r\n}\r\nexport default function Movie() {\r\n    const [movie, setMovie] = useState({id: parseInt(getParameter(\"movieId\")), title: \"\", releaseDate: new Date(), summary: \"\", genres: [], casts: []});\r\n    const [actors, setActors] = useState([]);\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const [reviewHeader, setReviewHeader] = useState(\"\");\r\n    const reviewPerPage = 5;\r\n    const reviewDiv = useRef<HTMLDivElement>();\r\n    const [orderBy, setOrderBy] = useState(undefined);\r\n    useEffect(()=>{\r\n        requestMovie();\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(orderBy){\r\n            requestReviews();\r\n        }\r\n        return ()=> {\r\n            removeWindowListener();\r\n        }\r\n    }, [orderBy]);\r\n\r\n\r\n    async function requestMovie(){\r\n        let selectedMovie = await selectDetailedMovie(movie.id);\r\n        if(selectedMovie){\r\n            setMovie(selectedMovie);\r\n            setActors(selectedMovie.casts.filter(c=> c.castTypeId > 3));\r\n            if(new Date().getTime() > new Date(selectedMovie.releaseDate).getTime()){\r\n                setOrderBy(reviewOrderBy.popIndex);\r\n            } else {\r\n                reviewDiv.current.style.display = \"none\";\r\n                setReviewHeader(`Reviews will be available after ${normalFormat(selectedMovie.releaseDate.toString())}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    async function requestReviews(){\r\n        let requestedReviews = await selectReviewsByMovie(movie.id, reviewPerPage, 0, orderBy);\r\n        if(requestedReviews){;\r\n            setReviews(requestedReviews);\r\n            setReviewHeader(\"Reviews:\");\r\n            if(requestedReviews.length === reviewPerPage) addWindowListener();                \r\n        } else {\r\n            alert(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function windowListener(){\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            getMoreReviews();\r\n        }\r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeWindowListener();\r\n        let requestedReviews = await selectReviewsByMovie(movie.id, reviewPerPage, reviews.current.length, orderBy);\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) addWindowListener();\r\n        } else {\r\n            alert(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container\" >\r\n            <MovieInfo movie={movie} />\r\n            <h2>Cast</h2>\r\n            <CastList casts={actors} />\r\n            <MyReview movie={movie} />\r\n            <h2>{reviewHeader}</h2>\r\n            <div ref={reviewDiv}>\r\n                <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: reviewOrderBy)=> { setOrderBy(newValue); }} />\r\n                <ReviewList reviews={reviews.current} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { normalFormat } from '../../dateParser'\r\nimport { IArtist, IDetailedArtist } from '../../objects/artist'\r\n\r\ninterface IStarInfo{\r\n    artist: IDetailedArtist;\r\n}\r\n\r\nexport const StarInfo: React.FC<IStarInfo> = ({artist}: IStarInfo) => {\r\n    const [died, setDied] = useState(null);\r\n    const deathInfo = \r\n    <Fragment>\r\n        <p>Died: <i>{`${normalFormat(artist.deathDate.toString())},`}</i></p>\r\n        <p><i>{artist.deathPlace}</i></p>\r\n    </Fragment>;\r\n\r\n    const [bio, setBio] = useState(<p></p>);\r\n    const briefBio = <Fragment><p>{`${artist.bio.substring(0, 1500)}...`}</p><p onClick={showAll} className=\"show-more\">Show more</p></Fragment>;\r\n    useEffect(()=>{\r\n        if(artist.deathPlace != null && artist.deathPlace !== \"\"){\r\n            setDied(deathInfo);\r\n        } else {\r\n            setDied(<Fragment></Fragment>);\r\n        }\r\n    }, [artist]);\r\n\r\n    useEffect(()=>{\r\n        if(artist.bio.length > 1500){\r\n            showBrief();\r\n        } else {\r\n            showAll();\r\n        }\r\n    }, [artist])\r\n\r\n    function showAll(){\r\n        setBio(<Fragment><p>{artist.bio}</p><p onClick={showBrief} className=\"show-more\">Show less</p></Fragment>);\r\n    }\r\n\r\n    function showBrief(){\r\n        setBio(briefBio);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{artist.name}</h1>\r\n            <div className=\"info-grid\">\r\n                <div className=\"info-grid-item right-border\">\r\n                    <img className=\"portrait\" src={`/rewer/uploads/portraits/${artist.id}.jpg`} alt={`${artist.name}_portrait`} />\r\n                    <p className=\"border-bottom\">Born: <i>{`${normalFormat(artist.birthDate.toString())},`}</i></p>\r\n                    <p><i>{artist.birthPlace}</i></p>\r\n                    {died}\r\n                </div>\r\n                <div className=\"info-grid-item\">\r\n                    {bio}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { IArtistCast } from '../../objects/artist'\r\nimport { Link } from \"react-router-dom\"\r\nimport { getYear } from '../../dateParser'\r\ninterface IArtistCastRow{\r\n    cast: IArtistCast;\r\n}\r\nexport const ArtistCastRow: React.FC<IArtistCastRow> = ({cast}: IArtistCastRow)=> {\r\n    const [castName, setCastName] = useState(cast.name);\r\n    useEffect(()=>{\r\n        if(cast.castTypeId > 3){\r\n            setCastName(cast.name);\r\n        } else {\r\n           setNonActor();\r\n        }\r\n        function setNonActor(){\r\n        if(cast.name === \"\"){\r\n            setCastName(cast.castTypeName);\r\n        } else {\r\n            setCastName(`${cast.castTypeName} (${cast.name})`);\r\n        }\r\n    }\r\n    }, [cast]);\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"cast-row\">\r\n            <img src={`/rewer/uploads/posters/${cast.movieId}.jpg`} alt={cast.movieName} />\r\n            <span><Link to={`/movie?movieId=${cast.movieId}`} >{`${cast.movieName} (${getYear(cast.movieDate)})`}</Link></span>\r\n            <p>{castName}</p>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistCastRow;\r\n","import React from 'react'\r\nimport { IArtistCast } from '../../objects/artist'\r\nimport ArtistCastRow from './ArtistCastRow'\r\n\r\ninterface IArtistCastList{\r\n    casts: IArtistCast[]\r\n}\r\n\r\nexport const ArtistCastList: React.FC<IArtistCastList> = ({casts}: IArtistCastList) => {\r\n    return (\r\n        <div>\r\n            {casts.map(c=>{\r\n                return <ArtistCastRow key={`artist-cast-${c.id}`} cast={c} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistCastList;","import React, { useState, useEffect } from 'react'\r\nimport { StarInfo } from '../components/artist/StarInfo';\r\nimport ArtistCastList from '../components/cast/ArtistCastList';\r\nimport { selectDetailedArtist } from '../objects/artist';\r\nimport { getParameter } from '../urlManager';\r\n\r\nexport default function Star() {\r\n    const [artist, setArtist] = useState({id: parseInt(getParameter(\"artistId\")), name: \"\", birthPlace: \"\", birthDate: new Date(), deathPlace: \"\", deathDate: new Date(), bio: \"\", casts: []});\r\n    useEffect(()=>{\r\n        requestArtist();\r\n    }, []);\r\n    async function requestArtist(){\r\n        const detailedArtist = await selectDetailedArtist(artist.id);\r\n        if(detailedArtist){\r\n            setArtist(detailedArtist);\r\n        } else {\r\n            alert(\"Server error.\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"main-container\">\r\n            <StarInfo artist={artist} />\r\n            <ArtistCastList casts={artist.casts} />\r\n        </div>\r\n    )\r\n}\r\n","import * as caller from \"./caller\";\r\nexport interface IFollow{\r\n    id: number;\r\n    follower: string;\r\n    followed: string;\r\n}\r\n\r\nexport async function insertFollow(follow: IFollow): Promise<number>{\r\n    const response = await caller.POSTAsynch(\"/follow/insertfollow.php\", follow);\r\n    return caller.parseId(response);\r\n}\r\n\r\nexport async function deleteFollow(follow: IFollow){\r\n    const response = await caller.POSTAsynch(\"/follow/deletefollow.php\", follow);\r\n    return caller.isResponse200(response);\r\n    \r\n}","import React, { useRef, useEffect } from 'react'\r\n\r\ninterface IPermissionSelect{\r\n    defaultValue: string;\r\n    onUpdate: (newValue: string) => void;\r\n}\r\n\r\nexport const PermissionSelect: React.FC<IPermissionSelect> = ({defaultValue, onUpdate}: IPermissionSelect) => {\r\n    const select = useRef<HTMLSelectElement>();\r\n    function change(){\r\n        onUpdate(select.current.value);\r\n    }\r\n    return (\r\n        <select ref={select} value={defaultValue} onChange={change} >\r\n            <option value=\"0\">Banned</option>\r\n            <option value=\"1\">User</option>\r\n            <option value=\"2\">Moderator</option>\r\n            <option value=\"3\">Admin</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default PermissionSelect;\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport { deleteFollow, IFollow, insertFollow } from '../../objects/follow';\r\nimport { IDetailedUser, updatePermission } from '../../objects/user'\r\nimport PermissionSelect from './PermissionSelect';\r\nimport \"./profileStyle.css\"\r\n\r\ninterface IUserInfo{\r\n    user: IDetailedUser;\r\n}\r\n\r\nexport const UserInfo: React.FC<IUserInfo> = ({user}: IUserInfo) => {\r\n    const [getUser, setUser] = useState(user);\r\n    const [followBtn, setFollowBtn] = useState(<Fragment></Fragment>);\r\n    const [imgSrc, setImgSrc] = useState(`/rewer/uploads/avatars/${getUser.userName}.jpg`);\r\n    const [follow, setFollow] = useState({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n   \r\n   async function updateUserPermission(newValue: string){\r\n        const newPermission = {...getUser, permission: parseInt(newValue) }\r\n        if(await updatePermission(newPermission)){\r\n            setUser(newPermission);\r\n        } else {\r\n            alert(\"Server error\");\r\n        }  \r\n        setUser( {...getUser, permission: parseInt(newValue)});\r\n    } \r\n\r\n    useEffect(()=>{\r\n        setUser(user);\r\n    }, [user])\r\n\r\n    useEffect(()=>{\r\n        if(canBeFollowed(user)){\r\n            placeFollowBtn();\r\n        }\r\n    }, [follow]);\r\n\r\n    useEffect(()=>{\r\n        setFollow({id: getUser.isFollowed, follower: localStorage.getItem(\"userName\"), followed: getUser.userName});\r\n    }, [getUser])\r\n\r\n    function canBeFollowed(toFollow: IDetailedUser){\r\n        return localStorage.getItem(\"userName\") != null && localStorage.getItem(\"userName\") !== toFollow.userName;\r\n    }\r\n\r\n    function placeFollowBtn(){\r\n        if(follow.id > 0){\r\n            setFollowBtn(<button onClick={unFollowUser} className=\"unfollow\">Unfollow</button>);\r\n        } else {\r\n            setFollowBtn(<button onClick={followUser} className=\"follow\">Follow</button>);\r\n        }\r\n    }\r\n\r\n    async function followUser(){\r\n        setFollowBtn(<button className=\"follow\">Follow</button>); //prevent double clicking   \r\n        let newId = await insertFollow(follow);\r\n        if(newId){\r\n            setFollow({...follow, id: newId});\r\n        } else {\r\n            alert(\"Server error.\");\r\n        }\r\n    }\r\n\r\n    async function unFollowUser(){\r\n        setFollowBtn(<button className=\"unfollow\">Unfollow</button>);\r\n        if(await deleteFollow(follow)){\r\n            setFollow({...follow, id: 0});\r\n        } else {\r\n            alert(\"Server error.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{getUser.nickName}</h1>\r\n            {followBtn}\r\n            {parseInt(localStorage.getItem(\"permission\")) === 3 ? \r\n                        (<Fragment>\r\n                            <h3>User status:</h3>\r\n                            <PermissionSelect defaultValue={getUser.permission.toString()} onUpdate={(newValue: string)=>{updateUserPermission(newValue)}} />\r\n                        </Fragment>) \r\n                        : \r\n                        (<Fragment></Fragment>)}\r\n            <div className=\"user-grid\">\r\n                <div>\r\n                    <p>{getUser.about}</p>\r\n                </div>\r\n                <div>\r\n                    <img src={imgSrc} onError={()=>{ setImgSrc(`/rewer/uploads/avatars/default.jpg`) }} alt=\"user-avatar\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React, { useState, useEffect, useRef, Fragment} from 'react'\r\nimport { useAsyncReference } from '../../hooks';\r\nimport { IUserReview, reviewOrderBy, selectReviewsByUser } from '../../objects/review';\r\nimport { selectDetailedUser } from '../../objects/user';\r\nimport { getParameter } from '../../urlManager';\r\nimport FollowedReviewRow from '../review/FollowedReviewRow';\r\nimport FollowedReviews from '../review/FollowedReviews';\r\nimport ReviewOrderBySelect from '../review/ReviewOrderBySelect';\r\nimport UserReviewList from '../review/UserReviewList';\r\nimport UserInfo from './UserInfo';\r\n\r\nexport default function User() {\r\n    const [user, setUser] = useState({userName: getParameter(\"userName\"), nickName: \"\", permission: 1, about: \"\"});\r\n    const [reviews, setReviews] = useAsyncReference([]);\r\n    const reviewPerPage = 5;\r\n    const [orderBy, setOrderBy] = useState(reviewOrderBy.date);\r\n    useEffect(()=>{\r\n        getUserInfo();\r\n        return ()=>{\r\n            removeWindowListener();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        requestReviews();\r\n        return ()=>{\r\n            removeWindowListener();\r\n        }\r\n    }, [orderBy]);\r\n\r\n    async function getUserInfo(){\r\n        let userInfo = await selectDetailedUser(getParameter(\"userName\"));\r\n        console.log(userInfo);\r\n        if(userInfo){\r\n            setUser(userInfo);\r\n        } else {\r\n            //TODO\r\n        }\r\n    }\r\n\r\n    function addWindowListener(){\r\n        window.addEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    function removeWindowListener(){\r\n        window.removeEventListener(\"scroll\", windowListener);\r\n    }\r\n\r\n    var windowListener = function() {\r\n        if ((window.innerHeight + window.scrollY) >= (document.body.offsetHeight*0.9)) {\r\n            window.removeEventListener(\"scroll\", windowListener);\r\n            getMoreReviews();\r\n        }\r\n    } \r\n\r\n    async function requestReviews(){\r\n        removeWindowListener();\r\n        let userReviews: IUserReview[] = await selectReviewsByUser(user.userName, reviewPerPage, 0, orderBy);\r\n        if(userReviews){\r\n            setReviews(userReviews);\r\n            if(userReviews.length === reviewPerPage) {} addWindowListener();\r\n        }\r\n    }\r\n\r\n    async function getMoreReviews(){\r\n        removeWindowListener();\r\n        let requestedReviews = await selectReviewsByUser(user.userName, reviewPerPage, reviews.current.length, orderBy);\r\n        if(requestedReviews){\r\n            setReviews([...reviews.current, ...requestedReviews]);\r\n            if(requestedReviews.length === reviewPerPage) {} //addWindowListener();\r\n        } else {\r\n            alert(\"Server errror: could not download reviewdata.\");\r\n        }\r\n    }\r\n// <UserReviewList reviews={reviews.current} />\r\n    return (\r\n        <div className=\"main-container\">\r\n            <UserInfo user={user} />\r\n            <h3>{user.userName}'s reviews</h3>\r\n            <ReviewOrderBySelect defaultValue={orderBy} onUpdate={(newValue: reviewOrderBy)=> { setOrderBy(newValue); }} />\r\n            {reviews.current.map(r=> {\r\n                return <FollowedReviewRow key={`review-${r.id}`} review={{...r, nickName: \"\"}} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport FollowedReviews from '../components/review/FollowedReviews'\r\n\r\nexport default function FollowsPage() {\r\n    return (\r\n        <div className=\"main-container\">\r\n            <FollowedReviews />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect} from 'react';\nimport './App.css';\n// @ts-ignore\nimport { Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Movies from \"./pages/Movies\";\nimport EditMovie from \"./pages/EditMovie\";\nimport Profile from \"./pages/Profile\";\nimport Helmet from \"react-helmet\";\nimport { Header } from './components/header/Header';\nimport { handleLogin } from './objects/authUser';\nimport Stars from './pages/Stars';\nimport EditArtist from './pages/EditArtist';\nimport Movie from './pages/Movie';\nimport Star from './pages/Star';\nimport User from './components/profile/User';\nimport FollowsPage from './pages/FollowsPage';\nfunction App() {\n  useEffect(()=>{\n    log();\n  }, []);\n  async function log(){\n    if(await handleLogin()){\n      console.log(\"user is logged in\");\n    } else {\n      console.log(\"user is not logged in\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Helmet>\n      <title>Rewer</title>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    </Helmet>\n    <Header />\n    <Switch>\n        <Route exact path=\"/rewer\" component={Home} />\n        <Route exact path=\"/movies\" component={Movies} />\n        <Route exact path=\"/movie\" component={Movie} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/user\" component={User} />\n        <Route exact path=\"/editartist\" component={EditArtist} />\n        <Route exact path=\"/star\" component={Star} />\n        <Route exact path=\"/stars\" component={Stars} />\n        <Route exact path=\"/editmovie\" component={EditMovie} />\n        <Route exact path=\"/follows\" component={FollowsPage} />\n    </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}